

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 28 09:24:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1937 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0110                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0115                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0118                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011D                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  018F                     	;# 
   148  0190                     	;# 
   149  0191                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0194                     	;# 
   156  0195                     	;# 
   157  0196                     	;# 
   158  0199                     	;# 
   159  019A                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  019C                     	;# 
   166  019D                     	;# 
   167  019E                     	;# 
   168  019F                     	;# 
   169  020D                     	;# 
   170  0210                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0298                     	;# 
   188  0298                     	;# 
   189  0299                     	;# 
   190  029A                     	;# 
   191  029B                     	;# 
   192  029C                     	;# 
   193  029C                     	;# 
   194  029D                     	;# 
   195  029E                     	;# 
   196  029F                     	;# 
   197  0311                     	;# 
   198  0311                     	;# 
   199  0312                     	;# 
   200  0313                     	;# 
   201  0314                     	;# 
   202  0315                     	;# 
   203  0315                     	;# 
   204  0316                     	;# 
   205  0318                     	;# 
   206  0318                     	;# 
   207  0319                     	;# 
   208  031A                     	;# 
   209  031C                     	;# 
   210  031C                     	;# 
   211  031D                     	;# 
   212  031E                     	;# 
   213  0394                     	;# 
   214  0395                     	;# 
   215  0396                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0791                     	;# 
   223  0792                     	;# 
   224  0793                     	;# 
   225  0794                     	;# 
   226  0795                     	;# 
   227  0798                     	;# 
   228  0799                     	;# 
   229  079A                     	;# 
   230  07A0                     	;# 
   231  07A1                     	;# 
   232  07A2                     	;# 
   233  07A3                     	;# 
   234  07A4                     	;# 
   235  07A5                     	;# 
   236  07A6                     	;# 
   237  07A7                     	;# 
   238  07A8                     	;# 
   239  07A9                     	;# 
   240  07AA                     	;# 
   241  07AB                     	;# 
   242  0FE4                     	;# 
   243  0FE5                     	;# 
   244  0FE6                     	;# 
   245  0FE7                     	;# 
   246  0FE8                     	;# 
   247  0FE9                     	;# 
   248  0FEA                     	;# 
   249  0FEB                     	;# 
   250  0FED                     	;# 
   251  0FEE                     	;# 
   252  0FEF                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0110                     	;# 
   308  0111                     	;# 
   309  0112                     	;# 
   310  0113                     	;# 
   311  0114                     	;# 
   312  0115                     	;# 
   313  0116                     	;# 
   314  0117                     	;# 
   315  0118                     	;# 
   316  0119                     	;# 
   317  011A                     	;# 
   318  011B                     	;# 
   319  011D                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  018F                     	;# 
   323  0190                     	;# 
   324  0191                     	;# 
   325  0191                     	;# 
   326  0192                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0193                     	;# 
   330  0194                     	;# 
   331  0195                     	;# 
   332  0196                     	;# 
   333  0199                     	;# 
   334  019A                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019B                     	;# 
   338  019B                     	;# 
   339  019C                     	;# 
   340  019C                     	;# 
   341  019D                     	;# 
   342  019E                     	;# 
   343  019F                     	;# 
   344  020D                     	;# 
   345  0210                     	;# 
   346  0211                     	;# 
   347  0212                     	;# 
   348  0213                     	;# 
   349  0214                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0291                     	;# 
   355  0291                     	;# 
   356  0292                     	;# 
   357  0293                     	;# 
   358  0294                     	;# 
   359  0295                     	;# 
   360  0295                     	;# 
   361  0296                     	;# 
   362  0298                     	;# 
   363  0298                     	;# 
   364  0299                     	;# 
   365  029A                     	;# 
   366  029B                     	;# 
   367  029C                     	;# 
   368  029C                     	;# 
   369  029D                     	;# 
   370  029E                     	;# 
   371  029F                     	;# 
   372  0311                     	;# 
   373  0311                     	;# 
   374  0312                     	;# 
   375  0313                     	;# 
   376  0314                     	;# 
   377  0315                     	;# 
   378  0315                     	;# 
   379  0316                     	;# 
   380  0318                     	;# 
   381  0318                     	;# 
   382  0319                     	;# 
   383  031A                     	;# 
   384  031C                     	;# 
   385  031C                     	;# 
   386  031D                     	;# 
   387  031E                     	;# 
   388  0394                     	;# 
   389  0395                     	;# 
   390  0396                     	;# 
   391  0415                     	;# 
   392  0416                     	;# 
   393  0417                     	;# 
   394  041C                     	;# 
   395  041D                     	;# 
   396  041E                     	;# 
   397  0791                     	;# 
   398  0792                     	;# 
   399  0793                     	;# 
   400  0794                     	;# 
   401  0795                     	;# 
   402  0798                     	;# 
   403  0799                     	;# 
   404  079A                     	;# 
   405  07A0                     	;# 
   406  07A1                     	;# 
   407  07A2                     	;# 
   408  07A3                     	;# 
   409  07A4                     	;# 
   410  07A5                     	;# 
   411  07A6                     	;# 
   412  07A7                     	;# 
   413  07A8                     	;# 
   414  07A9                     	;# 
   415  07AA                     	;# 
   416  07AB                     	;# 
   417  0FE4                     	;# 
   418  0FE5                     	;# 
   419  0FE6                     	;# 
   420  0FE7                     	;# 
   421  0FE8                     	;# 
   422  0FE9                     	;# 
   423  0FEA                     	;# 
   424  0FEB                     	;# 
   425  0FED                     	;# 
   426  0FEE                     	;# 
   427  0FEF                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  0008                     	;# 
   437  0009                     	;# 
   438  000A                     	;# 
   439  000B                     	;# 
   440  000C                     	;# 
   441  000D                     	;# 
   442  000E                     	;# 
   443  000F                     	;# 
   444  0010                     	;# 
   445  0011                     	;# 
   446  0012                     	;# 
   447  0013                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001E                     	;# 
   458  001F                     	;# 
   459  008C                     	;# 
   460  008D                     	;# 
   461  008E                     	;# 
   462  008F                     	;# 
   463  0090                     	;# 
   464  0091                     	;# 
   465  0092                     	;# 
   466  0093                     	;# 
   467  0095                     	;# 
   468  0096                     	;# 
   469  0097                     	;# 
   470  0098                     	;# 
   471  0099                     	;# 
   472  009A                     	;# 
   473  009B                     	;# 
   474  009B                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  010C                     	;# 
   479  010D                     	;# 
   480  010E                     	;# 
   481  010F                     	;# 
   482  0110                     	;# 
   483  0111                     	;# 
   484  0112                     	;# 
   485  0113                     	;# 
   486  0114                     	;# 
   487  0115                     	;# 
   488  0116                     	;# 
   489  0117                     	;# 
   490  0118                     	;# 
   491  0119                     	;# 
   492  011A                     	;# 
   493  011B                     	;# 
   494  011D                     	;# 
   495  018C                     	;# 
   496  018D                     	;# 
   497  018F                     	;# 
   498  0190                     	;# 
   499  0191                     	;# 
   500  0191                     	;# 
   501  0192                     	;# 
   502  0193                     	;# 
   503  0193                     	;# 
   504  0193                     	;# 
   505  0194                     	;# 
   506  0195                     	;# 
   507  0196                     	;# 
   508  0199                     	;# 
   509  019A                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019B                     	;# 
   514  019C                     	;# 
   515  019C                     	;# 
   516  019D                     	;# 
   517  019E                     	;# 
   518  019F                     	;# 
   519  020D                     	;# 
   520  0210                     	;# 
   521  0211                     	;# 
   522  0212                     	;# 
   523  0213                     	;# 
   524  0214                     	;# 
   525  0215                     	;# 
   526  0215                     	;# 
   527  0216                     	;# 
   528  0217                     	;# 
   529  0291                     	;# 
   530  0291                     	;# 
   531  0292                     	;# 
   532  0293                     	;# 
   533  0294                     	;# 
   534  0295                     	;# 
   535  0295                     	;# 
   536  0296                     	;# 
   537  0298                     	;# 
   538  0298                     	;# 
   539  0299                     	;# 
   540  029A                     	;# 
   541  029B                     	;# 
   542  029C                     	;# 
   543  029C                     	;# 
   544  029D                     	;# 
   545  029E                     	;# 
   546  029F                     	;# 
   547  0311                     	;# 
   548  0311                     	;# 
   549  0312                     	;# 
   550  0313                     	;# 
   551  0314                     	;# 
   552  0315                     	;# 
   553  0315                     	;# 
   554  0316                     	;# 
   555  0318                     	;# 
   556  0318                     	;# 
   557  0319                     	;# 
   558  031A                     	;# 
   559  031C                     	;# 
   560  031C                     	;# 
   561  031D                     	;# 
   562  031E                     	;# 
   563  0394                     	;# 
   564  0395                     	;# 
   565  0396                     	;# 
   566  0415                     	;# 
   567  0416                     	;# 
   568  0417                     	;# 
   569  041C                     	;# 
   570  041D                     	;# 
   571  041E                     	;# 
   572  0791                     	;# 
   573  0792                     	;# 
   574  0793                     	;# 
   575  0794                     	;# 
   576  0795                     	;# 
   577  0798                     	;# 
   578  0799                     	;# 
   579  079A                     	;# 
   580  07A0                     	;# 
   581  07A1                     	;# 
   582  07A2                     	;# 
   583  07A3                     	;# 
   584  07A4                     	;# 
   585  07A5                     	;# 
   586  07A6                     	;# 
   587  07A7                     	;# 
   588  07A8                     	;# 
   589  07A9                     	;# 
   590  07AA                     	;# 
   591  07AB                     	;# 
   592  0FE4                     	;# 
   593  0FE5                     	;# 
   594  0FE6                     	;# 
   595  0FE7                     	;# 
   596  0FE8                     	;# 
   597  0FE9                     	;# 
   598  0FEA                     	;# 
   599  0FEB                     	;# 
   600  0FED                     	;# 
   601  0FEE                     	;# 
   602  0FEF                     	;# 
   603  0000                     	;# 
   604  0001                     	;# 
   605  0002                     	;# 
   606  0003                     	;# 
   607  0004                     	;# 
   608  0005                     	;# 
   609  0006                     	;# 
   610  0007                     	;# 
   611  0008                     	;# 
   612  0009                     	;# 
   613  000A                     	;# 
   614  000B                     	;# 
   615  000C                     	;# 
   616  000D                     	;# 
   617  000E                     	;# 
   618  000F                     	;# 
   619  0010                     	;# 
   620  0011                     	;# 
   621  0012                     	;# 
   622  0013                     	;# 
   623  0015                     	;# 
   624  0016                     	;# 
   625  0016                     	;# 
   626  0017                     	;# 
   627  0018                     	;# 
   628  0019                     	;# 
   629  001A                     	;# 
   630  001B                     	;# 
   631  001C                     	;# 
   632  001E                     	;# 
   633  001F                     	;# 
   634  008C                     	;# 
   635  008D                     	;# 
   636  008E                     	;# 
   637  008F                     	;# 
   638  0090                     	;# 
   639  0091                     	;# 
   640  0092                     	;# 
   641  0093                     	;# 
   642  0095                     	;# 
   643  0096                     	;# 
   644  0097                     	;# 
   645  0098                     	;# 
   646  0099                     	;# 
   647  009A                     	;# 
   648  009B                     	;# 
   649  009B                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009E                     	;# 
   653  010C                     	;# 
   654  010D                     	;# 
   655  010E                     	;# 
   656  010F                     	;# 
   657  0110                     	;# 
   658  0111                     	;# 
   659  0112                     	;# 
   660  0113                     	;# 
   661  0114                     	;# 
   662  0115                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0118                     	;# 
   666  0119                     	;# 
   667  011A                     	;# 
   668  011B                     	;# 
   669  011D                     	;# 
   670  018C                     	;# 
   671  018D                     	;# 
   672  018F                     	;# 
   673  0190                     	;# 
   674  0191                     	;# 
   675  0191                     	;# 
   676  0192                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0193                     	;# 
   680  0194                     	;# 
   681  0195                     	;# 
   682  0196                     	;# 
   683  0199                     	;# 
   684  019A                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019B                     	;# 
   689  019C                     	;# 
   690  019C                     	;# 
   691  019D                     	;# 
   692  019E                     	;# 
   693  019F                     	;# 
   694  020D                     	;# 
   695  0210                     	;# 
   696  0211                     	;# 
   697  0212                     	;# 
   698  0213                     	;# 
   699  0214                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0216                     	;# 
   703  0217                     	;# 
   704  0291                     	;# 
   705  0291                     	;# 
   706  0292                     	;# 
   707  0293                     	;# 
   708  0294                     	;# 
   709  0295                     	;# 
   710  0295                     	;# 
   711  0296                     	;# 
   712  0298                     	;# 
   713  0298                     	;# 
   714  0299                     	;# 
   715  029A                     	;# 
   716  029B                     	;# 
   717  029C                     	;# 
   718  029C                     	;# 
   719  029D                     	;# 
   720  029E                     	;# 
   721  029F                     	;# 
   722  0311                     	;# 
   723  0311                     	;# 
   724  0312                     	;# 
   725  0313                     	;# 
   726  0314                     	;# 
   727  0315                     	;# 
   728  0315                     	;# 
   729  0316                     	;# 
   730  0318                     	;# 
   731  0318                     	;# 
   732  0319                     	;# 
   733  031A                     	;# 
   734  031C                     	;# 
   735  031C                     	;# 
   736  031D                     	;# 
   737  031E                     	;# 
   738  0394                     	;# 
   739  0395                     	;# 
   740  0396                     	;# 
   741  0415                     	;# 
   742  0416                     	;# 
   743  0417                     	;# 
   744  041C                     	;# 
   745  041D                     	;# 
   746  041E                     	;# 
   747  0791                     	;# 
   748  0792                     	;# 
   749  0793                     	;# 
   750  0794                     	;# 
   751  0795                     	;# 
   752  0798                     	;# 
   753  0799                     	;# 
   754  079A                     	;# 
   755  07A0                     	;# 
   756  07A1                     	;# 
   757  07A2                     	;# 
   758  07A3                     	;# 
   759  07A4                     	;# 
   760  07A5                     	;# 
   761  07A6                     	;# 
   762  07A7                     	;# 
   763  07A8                     	;# 
   764  07A9                     	;# 
   765  07AA                     	;# 
   766  07AB                     	;# 
   767  0FE4                     	;# 
   768  0FE5                     	;# 
   769  0FE6                     	;# 
   770  0FE7                     	;# 
   771  0FE8                     	;# 
   772  0FE9                     	;# 
   773  0FEA                     	;# 
   774  0FEB                     	;# 
   775  0FED                     	;# 
   776  0FEE                     	;# 
   777  0FEF                     	;# 
   778  0000                     	;# 
   779  0001                     	;# 
   780  0002                     	;# 
   781  0003                     	;# 
   782  0004                     	;# 
   783  0005                     	;# 
   784  0006                     	;# 
   785  0007                     	;# 
   786  0008                     	;# 
   787  0009                     	;# 
   788  000A                     	;# 
   789  000B                     	;# 
   790  000C                     	;# 
   791  000D                     	;# 
   792  000E                     	;# 
   793  000F                     	;# 
   794  0010                     	;# 
   795  0011                     	;# 
   796  0012                     	;# 
   797  0013                     	;# 
   798  0015                     	;# 
   799  0016                     	;# 
   800  0016                     	;# 
   801  0017                     	;# 
   802  0018                     	;# 
   803  0019                     	;# 
   804  001A                     	;# 
   805  001B                     	;# 
   806  001C                     	;# 
   807  001E                     	;# 
   808  001F                     	;# 
   809  008C                     	;# 
   810  008D                     	;# 
   811  008E                     	;# 
   812  008F                     	;# 
   813  0090                     	;# 
   814  0091                     	;# 
   815  0092                     	;# 
   816  0093                     	;# 
   817  0095                     	;# 
   818  0096                     	;# 
   819  0097                     	;# 
   820  0098                     	;# 
   821  0099                     	;# 
   822  009A                     	;# 
   823  009B                     	;# 
   824  009B                     	;# 
   825  009C                     	;# 
   826  009D                     	;# 
   827  009E                     	;# 
   828  010C                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010F                     	;# 
   832  0110                     	;# 
   833  0111                     	;# 
   834  0112                     	;# 
   835  0113                     	;# 
   836  0114                     	;# 
   837  0115                     	;# 
   838  0116                     	;# 
   839  0117                     	;# 
   840  0118                     	;# 
   841  0119                     	;# 
   842  011A                     	;# 
   843  011B                     	;# 
   844  011D                     	;# 
   845  018C                     	;# 
   846  018D                     	;# 
   847  018F                     	;# 
   848  0190                     	;# 
   849  0191                     	;# 
   850  0191                     	;# 
   851  0192                     	;# 
   852  0193                     	;# 
   853  0193                     	;# 
   854  0193                     	;# 
   855  0194                     	;# 
   856  0195                     	;# 
   857  0196                     	;# 
   858  0199                     	;# 
   859  019A                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019B                     	;# 
   864  019C                     	;# 
   865  019C                     	;# 
   866  019D                     	;# 
   867  019E                     	;# 
   868  019F                     	;# 
   869  020D                     	;# 
   870  0210                     	;# 
   871  0211                     	;# 
   872  0212                     	;# 
   873  0213                     	;# 
   874  0214                     	;# 
   875  0215                     	;# 
   876  0215                     	;# 
   877  0216                     	;# 
   878  0217                     	;# 
   879  0291                     	;# 
   880  0291                     	;# 
   881  0292                     	;# 
   882  0293                     	;# 
   883  0294                     	;# 
   884  0295                     	;# 
   885  0295                     	;# 
   886  0296                     	;# 
   887  0298                     	;# 
   888  0298                     	;# 
   889  0299                     	;# 
   890  029A                     	;# 
   891  029B                     	;# 
   892  029C                     	;# 
   893  029C                     	;# 
   894  029D                     	;# 
   895  029E                     	;# 
   896  029F                     	;# 
   897  0311                     	;# 
   898  0311                     	;# 
   899  0312                     	;# 
   900  0313                     	;# 
   901  0314                     	;# 
   902  0315                     	;# 
   903  0315                     	;# 
   904  0316                     	;# 
   905  0318                     	;# 
   906  0318                     	;# 
   907  0319                     	;# 
   908  031A                     	;# 
   909  031C                     	;# 
   910  031C                     	;# 
   911  031D                     	;# 
   912  031E                     	;# 
   913  0394                     	;# 
   914  0395                     	;# 
   915  0396                     	;# 
   916  0415                     	;# 
   917  0416                     	;# 
   918  0417                     	;# 
   919  041C                     	;# 
   920  041D                     	;# 
   921  041E                     	;# 
   922  0791                     	;# 
   923  0792                     	;# 
   924  0793                     	;# 
   925  0794                     	;# 
   926  0795                     	;# 
   927  0798                     	;# 
   928  0799                     	;# 
   929  079A                     	;# 
   930  07A0                     	;# 
   931  07A1                     	;# 
   932  07A2                     	;# 
   933  07A3                     	;# 
   934  07A4                     	;# 
   935  07A5                     	;# 
   936  07A6                     	;# 
   937  07A7                     	;# 
   938  07A8                     	;# 
   939  07A9                     	;# 
   940  07AA                     	;# 
   941  07AB                     	;# 
   942  0FE4                     	;# 
   943  0FE5                     	;# 
   944  0FE6                     	;# 
   945  0FE7                     	;# 
   946  0FE8                     	;# 
   947  0FE9                     	;# 
   948  0FEA                     	;# 
   949  0FEB                     	;# 
   950  0FED                     	;# 
   951  0FEE                     	;# 
   952  0FEF                     	;# 
   953  0000                     	;# 
   954  0001                     	;# 
   955  0002                     	;# 
   956  0003                     	;# 
   957  0004                     	;# 
   958  0005                     	;# 
   959  0006                     	;# 
   960  0007                     	;# 
   961  0008                     	;# 
   962  0009                     	;# 
   963  000A                     	;# 
   964  000B                     	;# 
   965  000C                     	;# 
   966  000D                     	;# 
   967  000E                     	;# 
   968  000F                     	;# 
   969  0010                     	;# 
   970  0011                     	;# 
   971  0012                     	;# 
   972  0013                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0016                     	;# 
   976  0017                     	;# 
   977  0018                     	;# 
   978  0019                     	;# 
   979  001A                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001E                     	;# 
   983  001F                     	;# 
   984  008C                     	;# 
   985  008D                     	;# 
   986  008E                     	;# 
   987  008F                     	;# 
   988  0090                     	;# 
   989  0091                     	;# 
   990  0092                     	;# 
   991  0093                     	;# 
   992  0095                     	;# 
   993  0096                     	;# 
   994  0097                     	;# 
   995  0098                     	;# 
   996  0099                     	;# 
   997  009A                     	;# 
   998  009B                     	;# 
   999  009B                     	;# 
  1000  009C                     	;# 
  1001  009D                     	;# 
  1002  009E                     	;# 
  1003  010C                     	;# 
  1004  010D                     	;# 
  1005  010E                     	;# 
  1006  010F                     	;# 
  1007  0110                     	;# 
  1008  0111                     	;# 
  1009  0112                     	;# 
  1010  0113                     	;# 
  1011  0114                     	;# 
  1012  0115                     	;# 
  1013  0116                     	;# 
  1014  0117                     	;# 
  1015  0118                     	;# 
  1016  0119                     	;# 
  1017  011A                     	;# 
  1018  011B                     	;# 
  1019  011D                     	;# 
  1020  018C                     	;# 
  1021  018D                     	;# 
  1022  018F                     	;# 
  1023  0190                     	;# 
  1024  0191                     	;# 
  1025  0191                     	;# 
  1026  0192                     	;# 
  1027  0193                     	;# 
  1028  0193                     	;# 
  1029  0193                     	;# 
  1030  0194                     	;# 
  1031  0195                     	;# 
  1032  0196                     	;# 
  1033  0199                     	;# 
  1034  019A                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019B                     	;# 
  1039  019C                     	;# 
  1040  019C                     	;# 
  1041  019D                     	;# 
  1042  019E                     	;# 
  1043  019F                     	;# 
  1044  020D                     	;# 
  1045  0210                     	;# 
  1046  0211                     	;# 
  1047  0212                     	;# 
  1048  0213                     	;# 
  1049  0214                     	;# 
  1050  0215                     	;# 
  1051  0215                     	;# 
  1052  0216                     	;# 
  1053  0217                     	;# 
  1054  0291                     	;# 
  1055  0291                     	;# 
  1056  0292                     	;# 
  1057  0293                     	;# 
  1058  0294                     	;# 
  1059  0295                     	;# 
  1060  0295                     	;# 
  1061  0296                     	;# 
  1062  0298                     	;# 
  1063  0298                     	;# 
  1064  0299                     	;# 
  1065  029A                     	;# 
  1066  029B                     	;# 
  1067  029C                     	;# 
  1068  029C                     	;# 
  1069  029D                     	;# 
  1070  029E                     	;# 
  1071  029F                     	;# 
  1072  0311                     	;# 
  1073  0311                     	;# 
  1074  0312                     	;# 
  1075  0313                     	;# 
  1076  0314                     	;# 
  1077  0315                     	;# 
  1078  0315                     	;# 
  1079  0316                     	;# 
  1080  0318                     	;# 
  1081  0318                     	;# 
  1082  0319                     	;# 
  1083  031A                     	;# 
  1084  031C                     	;# 
  1085  031C                     	;# 
  1086  031D                     	;# 
  1087  031E                     	;# 
  1088  0394                     	;# 
  1089  0395                     	;# 
  1090  0396                     	;# 
  1091  0415                     	;# 
  1092  0416                     	;# 
  1093  0417                     	;# 
  1094  041C                     	;# 
  1095  041D                     	;# 
  1096  041E                     	;# 
  1097  0791                     	;# 
  1098  0792                     	;# 
  1099  0793                     	;# 
  1100  0794                     	;# 
  1101  0795                     	;# 
  1102  0798                     	;# 
  1103  0799                     	;# 
  1104  079A                     	;# 
  1105  07A0                     	;# 
  1106  07A1                     	;# 
  1107  07A2                     	;# 
  1108  07A3                     	;# 
  1109  07A4                     	;# 
  1110  07A5                     	;# 
  1111  07A6                     	;# 
  1112  07A7                     	;# 
  1113  07A8                     	;# 
  1114  07A9                     	;# 
  1115  07AA                     	;# 
  1116  07AB                     	;# 
  1117  0FE4                     	;# 
  1118  0FE5                     	;# 
  1119  0FE6                     	;# 
  1120  0FE7                     	;# 
  1121  0FE8                     	;# 
  1122  0FE9                     	;# 
  1123  0FEA                     	;# 
  1124  0FEB                     	;# 
  1125  0FED                     	;# 
  1126  0FEE                     	;# 
  1127  0FEF                     	;# 
  1128                           
  1129                           	psect	idataCOMMON
  1130  05B9                     __pidataCOMMON:	
  1131                           
  1132                           ;initializer for _pwm_count
  1133  05B9  3432               	retlw	50
  1134                           
  1135                           	psect	idataBANK0
  1136  053B                     __pidataBANK0:	
  1137                           
  1138                           ;initializer for _WaveGap2Off
  1139  053B  34A1               	retlw	low _Z3SetLow
  1140  053C  3405               	retlw	high _Z3SetLow
  1141                           
  1142                           ;initializer for _WaveGap2On
  1143  053D  34AD               	retlw	low _Z3SetHigh
  1144  053E  3405               	retlw	high _Z3SetHigh
  1145                           
  1146                           ;initializer for _WaveGap1Off
  1147  053F  34AA               	retlw	low _Z4SetLow
  1148  0540  3405               	retlw	high _Z4SetLow
  1149                           
  1150                           ;initializer for _WaveGap1On
  1151  0541  34B6               	retlw	low _Z4SetHigh
  1152  0542  3405               	retlw	high _Z4SetHigh
  1153                           
  1154                           ;initializer for _WaveOutOff
  1155  0543  34A4               	retlw	low _Z1SetLow
  1156  0544  3405               	retlw	high _Z1SetLow
  1157                           
  1158                           ;initializer for _WaveOutOn
  1159  0545  34B0               	retlw	low _Z1SetHigh
  1160  0546  3405               	retlw	high _Z1SetHigh
  1161                           
  1162                           ;initializer for _WaveInOff
  1163  0547  34A7               	retlw	low _Z2SetLow
  1164  0548  3405               	retlw	high _Z2SetLow
  1165                           
  1166                           ;initializer for _WaveInOn
  1167  0549  34B3               	retlw	low _Z2SetHigh
  1168  054A  3405               	retlw	high _Z2SetHigh
  1169                           
  1170                           ;initializer for _WavePlaceHolderOff
  1171  054B  34AA               	retlw	low _Z4SetLow
  1172  054C  3405               	retlw	high _Z4SetLow
  1173                           
  1174                           ;initializer for _WavePlaceHolderOn
  1175  054D  34B6               	retlw	low _Z4SetHigh
  1176  054E  3405               	retlw	high _Z4SetHigh
  1177                           
  1178                           ;initializer for _second_timer
  1179  054F  34E8               	retlw	232
  1180  0550  3403               	retlw	3
  1181                           
  1182                           	psect	nvBANK0
  1183  0061                     __pnvBANK0:	
  1184  0061                     _TMR0_InterruptHandler:	
  1185  0061                     	ds	2
  1186  0063                     _timer0ReloadVal:	
  1187  0063                     	ds	1
  1188  000E                     _PORTCbits	set	14
  1189  000F                     _PORTDbits	set	15
  1190  000D                     _PORTBbits	set	13
  1191  0010                     _PORTEbits	set	16
  1192  000C                     _PORTAbits	set	12
  1193  000B                     _INTCONbits	set	11
  1194  0015                     _TMR0	set	21
  1195  0097                     _WDTCON	set	151
  1196  0098                     _OSCTUNE	set	152
  1197  0099                     _OSCCON	set	153
  1198  0095                     _OPTION_REGbits	set	149
  1199  008F                     _TRISD	set	143
  1200  008E                     _TRISC	set	142
  1201  008D                     _TRISB	set	141
  1202  008C                     _TRISA	set	140
  1203  0090                     _TRISE	set	144
  1204  0095                     _OPTION_REG	set	149
  1205  010D                     _LATBbits	set	269
  1206  0110                     _LATEbits	set	272
  1207  010C                     _LATAbits	set	268
  1208  0116                     _BORCON	set	278
  1209  011D                     _APFCON	set	285
  1210  010E                     _LATC	set	270
  1211  010D                     _LATB	set	269
  1212  010C                     _LATA	set	268
  1213  010F                     _LATD	set	271
  1214  0110                     _LATE	set	272
  1215  010F                     _LATDbits	set	271
  1216  010E                     _LATCbits	set	270
  1217  018C                     _ANSELA	set	396
  1218  0190                     _ANSELE	set	400
  1219  018D                     _ANSELB	set	397
  1220  018F                     _ANSELD	set	399
  1221  020D                     _WPUB	set	525
  1222  0210                     _WPUE	set	528
  1223                           
  1224                           ; #config settings
  1225  0000                     
  1226                           	psect	cinit
  1227  0015                     start_initialization:	
  1228  0015                     __initialization:	
  1229                           
  1230                           ; Initialize objects allocated to COMMON
  1231  0015  3185  25B9  3180   	fcall	__pidataCOMMON	;fetch initializer
  1232  0018  00FD               	movwf	__pdataCOMMON& (0+127)
  1233                           
  1234                           ; Initialize objects allocated to BANK0
  1235  0019  303B               	movlw	low __pidataBANK0
  1236  001A  0084               	movwf	4
  1237  001B  3085               	movlw	(high __pidataBANK0)| (0+128)
  1238  001C  0085               	movwf	5
  1239  001D  303E               	movlw	low __pdataBANK0
  1240  001E  0086               	movwf	6
  1241  001F  3000               	movlw	high __pdataBANK0
  1242  0020  0087               	movwf	7
  1243  0021  3016               	movlw	22
  1244  0022  3185  258B  3180   	fcall	init_ram
  1245                           
  1246                           ; Clear objects allocated to BITCOMMON
  1247  0025  01FB               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1248                           
  1249                           ; Clear objects allocated to COMMON
  1250  0026  01FC               	clrf	__pbssCOMMON& (0+127)
  1251                           
  1252                           ; Clear objects allocated to BITBANK0
  1253  0027  01E4               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
  1254                           
  1255                           ; Clear objects allocated to BANK0
  1256  0028  3020               	movlw	low __pbssBANK0
  1257  0029  0084               	movwf	4
  1258  002A  3000               	movlw	high __pbssBANK0
  1259  002B  0085               	movwf	5
  1260  002C  301E               	movlw	30
  1261  002D  3185  2591  3180   	fcall	clear_ram0
  1262  0030                     end_of_initialization:	
  1263                           ;End of C runtime variable initialization code
  1264                           
  1265  0030                     __end_of__initialization:	
  1266  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1267  0031  0020               	movlb	0
  1268  0032  3185  2D67         	ljmp	_main	;jump to C main() function
  1269                           
  1270                           	psect	bitbssCOMMON
  1271  03D8                     __pbitbssCOMMON:	
  1272  03D8                     _back_close_state:	
  1273  03D8                     	ds	1
  1274  03D9                     _back_open_state:	
  1275  03D9                     	ds	1
  1276  03DA                     _lift_close_state:	
  1277  03DA                     	ds	1
  1278  03DB                     _lift_open_state:	
  1279  03DB                     	ds	1
  1280  03DC                     _pulse_direction:	
  1281  03DC                     	ds	1
  1282  03DD                     _lock_flag:	
  1283  03DD                     	ds	1
  1284  03DE                     _lock_actuators:	
  1285  03DE                     	ds	1
  1286  03DF                     _lock_btn_state:	
  1287  03DF                     	ds	1
  1288                           
  1289                           	psect	bssCOMMON
  1290  007C                     __pbssCOMMON:	
  1291  007C                     _massage_intensity_setting:	
  1292  007C                     	ds	1
  1293                           
  1294                           	psect	dataCOMMON
  1295  007D                     __pdataCOMMON:	
  1296  007D                     _pwm_count:	
  1297  007D                     	ds	1
  1298                           
  1299                           	psect	bitbssBANK0
  1300  0320                     __pbitbssBANK0:	
  1301  0320                     _intensity_btn_state:	
  1302  0320                     	ds	1
  1303  0321                     _mode_btn_state:	
  1304  0321                     	ds	1
  1305                           
  1306                           	psect	bssBANK0
  1307  0020                     __pbssBANK0:	
  1308  0020                     _massage_timer:	
  1309  0020                     	ds	2
  1310  0022                     _heat2_timer:	
  1311  0022                     	ds	2
  1312  0024                     _heat1_timer:	
  1313  0024                     	ds	2
  1314  0026                     _phase_change_timer:	
  1315  0026                     	ds	2
  1316  0028                     _lock_timer:	
  1317  0028                     	ds	2
  1318  002A                     _massage_mode:	
  1319  002A                     	ds	1
  1320  002B                     _heat2_state:	
  1321  002B                     	ds	1
  1322  002C                     _heat1_state:	
  1323  002C                     	ds	1
  1324  002D                     _lock_debounce:	
  1325  002D                     	ds	1
  1326  002E                     _mode_debounce:	
  1327  002E                     	ds	1
  1328  002F                     _intensity_debounce:	
  1329  002F                     	ds	1
  1330  0030                     _heat2_debounce:	
  1331  0030                     	ds	1
  1332  0031                     _heat1_debounce:	
  1333  0031                     	ds	1
  1334  0032                     _back_close_debounce:	
  1335  0032                     	ds	1
  1336  0033                     _back_open_debounce:	
  1337  0033                     	ds	1
  1338  0034                     _lift_close_debounce:	
  1339  0034                     	ds	1
  1340  0035                     _lift_open_debounce:	
  1341  0035                     	ds	1
  1342  0036                     _massage_phase:	
  1343  0036                     	ds	1
  1344  0037                     _pulse_wave_out_intensity:	
  1345  0037                     	ds	1
  1346  0038                     _pulse_wave_in_intensity:	
  1347  0038                     	ds	1
  1348  0039                     _massage_intensity:	
  1349  0039                     	ds	1
  1350  003A                     _back_close_delay:	
  1351  003A                     	ds	1
  1352  003B                     _back_open_delay:	
  1353  003B                     	ds	1
  1354  003C                     _lift_close_delay:	
  1355  003C                     	ds	1
  1356  003D                     _lift_open_delay:	
  1357  003D                     	ds	1
  1358                           
  1359                           	psect	dataBANK0
  1360  003E                     __pdataBANK0:	
  1361  003E                     _WaveGap2Off:	
  1362  003E                     	ds	2
  1363  0040                     _WaveGap2On:	
  1364  0040                     	ds	2
  1365  0042                     _WaveGap1Off:	
  1366  0042                     	ds	2
  1367  0044                     _WaveGap1On:	
  1368  0044                     	ds	2
  1369  0046                     _WaveOutOff:	
  1370  0046                     	ds	2
  1371  0048                     _WaveOutOn:	
  1372  0048                     	ds	2
  1373  004A                     _WaveInOff:	
  1374  004A                     	ds	2
  1375  004C                     _WaveInOn:	
  1376  004C                     	ds	2
  1377  004E                     _WavePlaceHolderOff:	
  1378  004E                     	ds	2
  1379  0050                     _WavePlaceHolderOn:	
  1380  0050                     	ds	2
  1381  0052                     _second_timer:	
  1382  0052                     	ds	2
  1383                           
  1384                           	psect	inittext
  1385  058B                     init_ram:	
  1386  058B  00FE               	movwf	btemp
  1387  058C                     initloop:	
  1388  058C  0012               	moviw fsr0++
  1389  058D  001E               	movwi fsr1++
  1390  058E  0BFE               	decfsz	btemp,f
  1391  058F  2D8C               	goto	initloop
  1392  0590  3400               	retlw	0
  1393                           
  1394                           	psect	clrtext
  1395  0591                     clear_ram0:	
  1396                           ;	Called with FSR0 containing the base address, and
  1397                           ;	WREG with the size to clear
  1398                           
  1399  0591  0064               	clrwdt	;clear the watchdog before getting into this loop
  1400  0592                     clrloop0:	
  1401  0592  0180               	clrf	0	;clear RAM location pointed to by FSR
  1402  0593  3101               	addfsr 0,1
  1403  0594  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1404  0595  2D92               	goto	clrloop0	;have we reached the end yet?
  1405  0596  3400               	retlw	0	;all done for this memory range, return
  1406                           
  1407                           	psect	cstackCOMMON
  1408  0070                     __pcstackCOMMON:	
  1409  0070                     ?_Z4SetHigh:	
  1410  0070                     ?_Z4SetLow:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ?_Z2SetHigh:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ?_Z2SetLow:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ?_Z1SetHigh:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     ?_Z1SetLow:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ?_Z3SetHigh:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ?_Z3SetLow:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ?_TMR0_DefaultInterruptHandler:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     ??_TMR0_DefaultInterruptHandler:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  0070                     ?_OSCILLATOR_Initialize:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     ?_WDT_Initialize:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443  0070                     ?_Debounce:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446  0070                     ?_Execute:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449  0070                     ?_LEDs:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  0070                     ?_Massage:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0070                     ?_TMR0_Initialize:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458  0070                     ?_TMR0_ISR:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461  0070                     ?_PIN_MANAGER_Initialize:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464  0070                     ?_INTERRUPT_InterruptManager:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467  0070                     ?_SYSTEM_Initialize:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ?_main:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ?___wmul:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ___wmul@multiplier:	
  1477                           ; 2 bytes @ 0x0
  1478                           
  1479                           
  1480                           ; 2 bytes @ 0x0
  1481  0070                     	ds	2
  1482  0072                     ___wmul@multiplicand:	
  1483                           
  1484                           ; 2 bytes @ 0x2
  1485  0072                     	ds	2
  1486  0074                     ??___wmul:	
  1487  0074                     ___wmul@product:	
  1488                           ; 1 bytes @ 0x4
  1489                           
  1490                           
  1491                           ; 2 bytes @ 0x4
  1492  0074                     	ds	2
  1493  0076                     ?___awdiv:	
  1494  0076                     ___awdiv@divisor:	
  1495                           ; 2 bytes @ 0x6
  1496                           
  1497                           
  1498                           ; 2 bytes @ 0x6
  1499  0076                     	ds	2
  1500  0078                     ___awdiv@dividend:	
  1501                           
  1502                           ; 2 bytes @ 0x8
  1503  0078                     	ds	2
  1504  007A                     ??___awdiv:	
  1505                           
  1506                           ; 1 bytes @ 0xA
  1507  007A                     	ds	1
  1508  007B                     ??_INTERRUPT_InterruptManager:	
  1509                           
  1510                           	psect	cstackBANK0
  1511  0054                     __pcstackBANK0:	
  1512                           ; 1 bytes @ 0xB
  1513                           
  1514  0054                     ___awdiv@counter:	
  1515                           
  1516                           ; 1 bytes @ 0x0
  1517  0054                     	ds	1
  1518  0055                     ___awdiv@sign:	
  1519                           
  1520                           ; 1 bytes @ 0x1
  1521  0055                     	ds	1
  1522  0056                     ___awdiv@quotient:	
  1523                           
  1524                           ; 2 bytes @ 0x2
  1525  0056                     	ds	2
  1526  0058                     ??_TMR0_ISR:	
  1527                           
  1528                           ; 1 bytes @ 0x4
  1529  0058                     	ds	5
  1530  005D                     ??_Z4SetHigh:	
  1531  005D                     ??_Z4SetLow:	
  1532                           ; 1 bytes @ 0x9
  1533                           
  1534  005D                     ??_Z2SetHigh:	
  1535                           ; 1 bytes @ 0x9
  1536                           
  1537  005D                     ??_Z2SetLow:	
  1538                           ; 1 bytes @ 0x9
  1539                           
  1540  005D                     ??_Z1SetHigh:	
  1541                           ; 1 bytes @ 0x9
  1542                           
  1543  005D                     ??_Z1SetLow:	
  1544                           ; 1 bytes @ 0x9
  1545                           
  1546  005D                     ??_Z3SetHigh:	
  1547                           ; 1 bytes @ 0x9
  1548                           
  1549  005D                     ??_Z3SetLow:	
  1550                           ; 1 bytes @ 0x9
  1551                           
  1552  005D                     ?_TMR0_SetInterruptHandler:	
  1553                           ; 1 bytes @ 0x9
  1554                           
  1555  005D                     ??_OSCILLATOR_Initialize:	
  1556                           ; 1 bytes @ 0x9
  1557                           
  1558  005D                     ??_WDT_Initialize:	
  1559                           ; 1 bytes @ 0x9
  1560                           
  1561  005D                     ??_Debounce:	
  1562                           ; 1 bytes @ 0x9
  1563                           
  1564  005D                     ??_LEDs:	
  1565                           ; 1 bytes @ 0x9
  1566                           
  1567  005D                     ??_Massage:	
  1568                           ; 1 bytes @ 0x9
  1569                           
  1570  005D                     ??_PIN_MANAGER_Initialize:	
  1571                           ; 1 bytes @ 0x9
  1572                           
  1573  005D                     TMR0_SetInterruptHandler@InterruptHandler:	
  1574                           ; 1 bytes @ 0x9
  1575                           
  1576                           
  1577                           ; 2 bytes @ 0x9
  1578  005D                     	ds	2
  1579  005F                     ??_TMR0_SetInterruptHandler:	
  1580  005F                     ??_Execute:	
  1581                           ; 1 bytes @ 0xB
  1582                           
  1583  005F                     ??_TMR0_Initialize:	
  1584                           ; 1 bytes @ 0xB
  1585                           
  1586                           
  1587                           ; 1 bytes @ 0xB
  1588  005F                     	ds	1
  1589  0060                     ??_SYSTEM_Initialize:	
  1590                           
  1591                           ; 1 bytes @ 0xC
  1592  0060                     	ds	1
  1593  0061                     ??_main:	
  1594                           
  1595                           	psect	maintext
  1596  0567                     __pmaintext:	
  1597                           ; 1 bytes @ 0xD
  1598 ;;
  1599 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1600 ;;
  1601 ;; *************** function _main *****************
  1602 ;; Defined at:
  1603 ;;		line 68 in file "main.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : B1F/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1617 ;;      Params:         0       0       0       0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0
  1620 ;;      Totals:         0       0       0       0       0       0       0       0
  1621 ;;Total ram usage:        0 bytes
  1622 ;; Hardware stack levels required when called:    6
  1623 ;; This function calls:
  1624 ;;		_Debounce
  1625 ;;		_Execute
  1626 ;;		_LEDs
  1627 ;;		_SYSTEM_Initialize
  1628 ;; This function is called by:
  1629 ;;		Startup code after reset
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _main
  1635  0567                     _main:	
  1636  0567                     l2620:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1639                           
  1640                           
  1641                           ;main.c: 71:     SYSTEM_Initialize();
  1642  0567  3185  2577  3185   	fcall	_SYSTEM_Initialize
  1643  056A                     l2622:	
  1644                           
  1645                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1646  056A  178B               	bsf	11,7	;volatile
  1647  056B                     l554:	
  1648                           ;main.c: 88:     while (1)
  1649                           
  1650                           
  1651                           ;main.c: 89:     {;main.c: 90:         Debounce();
  1652  056B  3181  2165  3185   	fcall	_Debounce
  1653  056E                     l2624:	
  1654                           
  1655                           ;main.c: 91:         Execute();
  1656  056E  3180  2034  3185   	fcall	_Execute
  1657  0571                     l2626:	
  1658                           
  1659                           ;main.c: 92:         LEDs();
  1660  0571  3183  2352  3185   	fcall	_LEDs
  1661  0574  2D6B               	goto	l554
  1662  0575  3180  2813         	ljmp	start
  1663  0577                     __end_of_main:	
  1664                           
  1665                           	psect	text1
  1666  0577                     __ptext1:	
  1667 ;; *************** function _SYSTEM_Initialize *****************
  1668 ;; Defined at:
  1669 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1683 ;;      Params:         0       0       0       0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0
  1686 ;;      Totals:         0       0       0       0       0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    5
  1690 ;; This function calls:
  1691 ;;		_OSCILLATOR_Initialize
  1692 ;;		_PIN_MANAGER_Initialize
  1693 ;;		_TMR0_Initialize
  1694 ;;		_WDT_Initialize
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _SYSTEM_Initialize
  1702  0577                     _SYSTEM_Initialize:	
  1703  0577                     l2370:	
  1704                           ;incstack = 0
  1705                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1706                           
  1707                           
  1708                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1709  0577  3184  24FA  3185   	fcall	_PIN_MANAGER_Initialize
  1710                           
  1711                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1712  057A  3185  2584  3185   	fcall	_OSCILLATOR_Initialize
  1713                           
  1714                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1715  057D  3185  259D  3185   	fcall	_WDT_Initialize
  1716                           
  1717                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  1718  0580  3185  2551  3185   	fcall	_TMR0_Initialize
  1719  0583                     l399:	
  1720  0583  0008               	return
  1721  0584                     __end_of_SYSTEM_Initialize:	
  1722                           
  1723                           	psect	text2
  1724  059D                     __ptext2:	
  1725 ;; *************** function _WDT_Initialize *****************
  1726 ;; Defined at:
  1727 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1741 ;;      Params:         0       0       0       0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0
  1744 ;;      Totals:         0       0       0       0       0       0       0       0
  1745 ;;Total ram usage:        0 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    3
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_SYSTEM_Initialize
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function _WDT_Initialize
  1757  059D                     _WDT_Initialize:	
  1758  059D                     l2188:	
  1759                           ;incstack = 0
  1760                           ; Regs used in _WDT_Initialize: [wreg]
  1761                           
  1762                           
  1763                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1764  059D  3016               	movlw	22
  1765  059E  0021               	movlb	1	; select bank1
  1766  059F  0097               	movwf	23	;volatile
  1767  05A0                     l405:	
  1768  05A0  0008               	return
  1769  05A1                     __end_of_WDT_Initialize:	
  1770                           
  1771                           	psect	text3
  1772  0551                     __ptext3:	
  1773 ;; *************** function _TMR0_Initialize *****************
  1774 ;; Defined at:
  1775 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1789 ;;      Params:         0       0       0       0       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0       0       0       0
  1791 ;;      Temps:          0       1       0       0       0       0       0       0
  1792 ;;      Totals:         0       1       0       0       0       0       0       0
  1793 ;;Total ram usage:        1 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    4
  1796 ;; This function calls:
  1797 ;;		_TMR0_SetInterruptHandler
  1798 ;; This function is called by:
  1799 ;;		_SYSTEM_Initialize
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _TMR0_Initialize
  1805  0551                     _TMR0_Initialize:	
  1806  0551                     l2154:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1809                           
  1810                           
  1811                           ;mcc_generated_files/tmr0.c: 72:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  1812  0551  0021               	movlb	1	; select bank1
  1813  0552  0815               	movf	21,w	;volatile
  1814  0553  39C0               	andlw	192
  1815  0554  3811               	iorlw	17
  1816  0555  0095               	movwf	21	;volatile
  1817  0556                     l2156:	
  1818                           
  1819                           ;mcc_generated_files/tmr0.c: 75:     TMR0 = 0x0A;
  1820  0556  300A               	movlw	10
  1821  0557  0020               	movlb	0	; select bank0
  1822  0558  0095               	movwf	21	;volatile
  1823  0559                     l2158:	
  1824                           
  1825                           ;mcc_generated_files/tmr0.c: 78:     timer0ReloadVal= 10;
  1826  0559  300A               	movlw	10
  1827  055A  00DF               	movwf	??_TMR0_Initialize
  1828  055B  085F               	movf	??_TMR0_Initialize,w
  1829  055C  00E3               	movwf	_timer0ReloadVal	;volatile
  1830  055D                     l2160:	
  1831                           
  1832                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IF = 0;
  1833  055D  110B               	bcf	11,2	;volatile
  1834  055E                     l2162:	
  1835                           
  1836                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IE = 1;
  1837  055E  168B               	bsf	11,5	;volatile
  1838  055F                     l2164:	
  1839                           
  1840                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1841  055F  30BA               	movlw	low _TMR0_DefaultInterruptHandler
  1842  0560  00DD               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1843  0561  3005               	movlw	high _TMR0_DefaultInterruptHandler
  1844  0562  00DE               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1845  0563  3185  2597  3185   	fcall	_TMR0_SetInterruptHandler
  1846  0566                     l97:	
  1847  0566  0008               	return
  1848  0567                     __end_of_TMR0_Initialize:	
  1849                           
  1850                           	psect	text4
  1851  0597                     __ptext4:	
  1852 ;; *************** function _TMR0_SetInterruptHandler *****************
  1853 ;; Defined at:
  1854 ;;		line 202 in file "mcc_generated_files/tmr0.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  InterruptHan    2    9[BANK0 ] PTR FTN()void 
  1857 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1869 ;;      Params:         0       2       0       0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0
  1872 ;;      Totals:         0       2       0       0       0       0       0       0
  1873 ;;Total ram usage:        2 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    3
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_TMR0_Initialize
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _TMR0_SetInterruptHandler
  1885  0597                     _TMR0_SetInterruptHandler:	
  1886  0597                     l2152:	
  1887                           ;incstack = 0
  1888                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1889                           
  1890                           
  1891                           ;mcc_generated_files/tmr0.c: 203:     TMR0_InterruptHandler = InterruptHandler;
  1892  0597  0020               	movlb	0	; select bank0
  1893  0598  085E               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  1894  0599  00E2               	movwf	_TMR0_InterruptHandler+1
  1895  059A  085D               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  1896  059B  00E1               	movwf	_TMR0_InterruptHandler
  1897  059C                     l132:	
  1898  059C  0008               	return
  1899  059D                     __end_of_TMR0_SetInterruptHandler:	
  1900                           
  1901                           	psect	text5
  1902  04FA                     __ptext5:	
  1903 ;; *************** function _PIN_MANAGER_Initialize *****************
  1904 ;; Defined at:
  1905 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1919 ;;      Params:         0       0       0       0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0
  1922 ;;      Totals:         0       0       0       0       0       0       0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    3
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_SYSTEM_Initialize
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _PIN_MANAGER_Initialize
  1935  04FA                     _PIN_MANAGER_Initialize:	
  1936  04FA                     l2166:	
  1937                           ;incstack = 0
  1938                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1939                           
  1940                           
  1941                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x03;
  1942  04FA  3003               	movlw	3
  1943  04FB  0022               	movlb	2	; select bank2
  1944  04FC  0090               	movwf	16	;volatile
  1945                           
  1946                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x63;
  1947  04FD  3063               	movlw	99
  1948  04FE  008F               	movwf	15	;volatile
  1949                           
  1950                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x33;
  1951  04FF  3033               	movlw	51
  1952  0500  008C               	movwf	12	;volatile
  1953                           
  1954                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x1A;
  1955  0501  301A               	movlw	26
  1956  0502  008D               	movwf	13	;volatile
  1957  0503                     l2168:	
  1958                           
  1959                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1960  0503  018E               	clrf	14	;volatile
  1961  0504                     l2170:	
  1962                           
  1963                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0C;
  1964  0504  300C               	movlw	12
  1965  0505  0021               	movlb	1	; select bank1
  1966  0506  0090               	movwf	16	;volatile
  1967  0507                     l2172:	
  1968                           
  1969                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0C;
  1970  0507  300C               	movlw	12
  1971  0508  008C               	movwf	12	;volatile
  1972  0509                     l2174:	
  1973                           
  1974                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xE4;
  1975  0509  30E4               	movlw	228
  1976  050A  008D               	movwf	13	;volatile
  1977  050B                     l2176:	
  1978                           
  1979                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x80;
  1980  050B  3080               	movlw	128
  1981  050C  008E               	movwf	14	;volatile
  1982  050D                     l2178:	
  1983                           
  1984                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x84;
  1985  050D  3084               	movlw	132
  1986  050E  008F               	movwf	15	;volatile
  1987                           
  1988                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  1989  050F  0023               	movlb	3	; select bank3
  1990  0510  018F               	clrf	15	;volatile
  1991                           
  1992                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x00;
  1993  0511  018D               	clrf	13	;volatile
  1994                           
  1995                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x00;
  1996  0512  0190               	clrf	16	;volatile
  1997                           
  1998                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x00;
  1999  0513  018C               	clrf	12	;volatile
  2000                           
  2001                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  2002  0514  0024               	movlb	4	; select bank4
  2003  0515  0190               	clrf	16	;volatile
  2004                           
  2005                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  2006  0516  018D               	clrf	13	;volatile
  2007  0517                     l2180:	
  2008                           
  2009                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  2010  0517  0021               	movlb	1	; select bank1
  2011  0518  1795               	bsf	21,7	;volatile
  2012                           
  2013                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  2014  0519  0022               	movlb	2	; select bank2
  2015  051A  019D               	clrf	29	;volatile
  2016  051B                     l214:	
  2017  051B  0008               	return
  2018  051C                     __end_of_PIN_MANAGER_Initialize:	
  2019                           
  2020                           	psect	text6
  2021  0584                     __ptext6:	
  2022 ;; *************** function _OSCILLATOR_Initialize *****************
  2023 ;; Defined at:
  2024 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2038 ;;      Params:         0       0       0       0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0
  2041 ;;      Totals:         0       0       0       0       0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    3
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_SYSTEM_Initialize
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function _OSCILLATOR_Initialize
  2054  0584                     _OSCILLATOR_Initialize:	
  2055  0584                     l2182:	
  2056                           ;incstack = 0
  2057                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2058                           
  2059                           
  2060                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x6A;
  2061  0584  306A               	movlw	106
  2062  0585  0021               	movlb	1	; select bank1
  2063  0586  0099               	movwf	25	;volatile
  2064  0587                     l2184:	
  2065                           
  2066                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  2067  0587  0198               	clrf	24	;volatile
  2068  0588                     l2186:	
  2069                           
  2070                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2071  0588  0022               	movlb	2	; select bank2
  2072  0589  0196               	clrf	22	;volatile
  2073  058A                     l402:	
  2074  058A  0008               	return
  2075  058B                     __end_of_OSCILLATOR_Initialize:	
  2076                           
  2077                           	psect	text7
  2078  0352                     __ptext7:	
  2079 ;; *************** function _LEDs *****************
  2080 ;; Defined at:
  2081 ;;		line 327 in file "main.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2095 ;;      Params:         0       0       0       0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0       0
  2097 ;;      Temps:          0       2       0       0       0       0       0       0
  2098 ;;      Totals:         0       2       0       0       0       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    3
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_main
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _LEDs
  2111  0352                     _LEDs:	
  2112  0352                     l2570:	
  2113                           ;incstack = 0
  2114                           ; Regs used in _LEDs: [wreg-fsr0h+status,2+status,0]
  2115                           
  2116                           
  2117                           ;main.c: 328:     if(lock_actuators){
  2118  0352  1F7B               	btfss	_lock_actuators/(0+8),_lock_actuators& (0+7)
  2119  0353  2B55               	goto	u1991
  2120  0354  2B56               	goto	u1990
  2121  0355                     u1991:	
  2122  0355  2B59               	goto	l720
  2123  0356                     u1990:	
  2124  0356                     l717:	
  2125                           ;main.c: 329:         do { LATEbits.LATE1 = 0; } while(0);
  2126                           
  2127  0356  0022               	movlb	2	; select bank2
  2128  0357  1090               	bcf	16,1	;volatile
  2129  0358  2B5B               	goto	l719
  2130  0359                     l720:	
  2131                           ;main.c: 331:         do { LATEbits.LATE1 = 1; } while(0);
  2132                           
  2133  0359  0022               	movlb	2	; select bank2
  2134  035A  1490               	bsf	16,1	;volatile
  2135  035B                     l719:	
  2136                           ;main.c: 332:     }
  2137                           
  2138                           
  2139                           ;main.c: 333:     if(PORTCbits.RC1 || PORTCbits.RC0){
  2140  035B  0020               	movlb	0	; select bank0
  2141  035C  188E               	btfsc	14,1	;volatile
  2142  035D  2B5F               	goto	u2001
  2143  035E  2B60               	goto	u2000
  2144  035F                     u2001:	
  2145  035F  2B64               	goto	l725
  2146  0360                     u2000:	
  2147  0360                     l2572:	
  2148  0360  1C0E               	btfss	14,0	;volatile
  2149  0361  2B63               	goto	u2011
  2150  0362  2B64               	goto	u2010
  2151  0363                     u2011:	
  2152  0363  2B67               	goto	l728
  2153  0364                     u2010:	
  2154  0364                     l725:	
  2155                           ;main.c: 334:         do { LATAbits.LATA4 = 0; } while(0);
  2156                           
  2157  0364  0022               	movlb	2	; select bank2
  2158  0365  120C               	bcf	12,4	;volatile
  2159  0366  2B69               	goto	l727
  2160  0367                     l728:	
  2161                           ;main.c: 336:         do { LATAbits.LATA4 = 1; } while(0);
  2162                           
  2163  0367  0022               	movlb	2	; select bank2
  2164  0368  160C               	bsf	12,4	;volatile
  2165  0369                     l727:	
  2166                           ;main.c: 337:     }
  2167                           
  2168                           
  2169                           ;main.c: 339:     if(PORTAbits.RA6 || PORTAbits.RA7){
  2170  0369  0020               	movlb	0	; select bank0
  2171  036A  1B0C               	btfsc	12,6	;volatile
  2172  036B  2B6D               	goto	u2021
  2173  036C  2B6E               	goto	u2020
  2174  036D                     u2021:	
  2175  036D  2B72               	goto	l733
  2176  036E                     u2020:	
  2177  036E                     l2574:	
  2178  036E  1F8C               	btfss	12,7	;volatile
  2179  036F  2B71               	goto	u2031
  2180  0370  2B72               	goto	u2030
  2181  0371                     u2031:	
  2182  0371  2B75               	goto	l736
  2183  0372                     u2030:	
  2184  0372                     l733:	
  2185                           ;main.c: 340:         do { LATBbits.LATB1 = 0; } while(0);
  2186                           
  2187  0372  0022               	movlb	2	; select bank2
  2188  0373  108D               	bcf	13,1	;volatile
  2189  0374  2B84               	goto	l2578
  2190  0375                     l736:	
  2191                           ;main.c: 342:         do { LATBbits.LATB1 = 1; } while(0);
  2192                           
  2193  0375  0022               	movlb	2	; select bank2
  2194  0376  148D               	bsf	13,1	;volatile
  2195  0377  2B84               	goto	l2578
  2196  0378                     l740:	
  2197                           ;main.c: 347:             do { LATBbits.LATB4 = 0; } while(0);
  2198                           
  2199  0378  0022               	movlb	2	; select bank2
  2200  0379  120D               	bcf	13,4	;volatile
  2201  037A                     l742:	
  2202                           ;main.c: 348:             do { LATBbits.LATB3 = 1; } while(0);
  2203                           
  2204  037A  158D               	bsf	13,3	;volatile
  2205  037B  2BA1               	goto	l2582
  2206  037C                     l746:	
  2207                           ;main.c: 351:             do { LATBbits.LATB4 = 0; } while(0);
  2208                           
  2209  037C  0022               	movlb	2	; select bank2
  2210  037D  120D               	bcf	13,4	;volatile
  2211  037E                     l748:	
  2212                           ;main.c: 352:             do { LATBbits.LATB3 = 0; } while(0);
  2213                           
  2214  037E  118D               	bcf	13,3	;volatile
  2215  037F  2BA1               	goto	l2582
  2216  0380                     l751:	
  2217                           ;main.c: 355:             do { LATBbits.LATB4 = 1; } while(0);
  2218                           
  2219  0380  0022               	movlb	2	; select bank2
  2220  0381  160D               	bsf	13,4	;volatile
  2221  0382                     l753:	
  2222                           ;main.c: 356:             do { LATBbits.LATB3 = 1; } while(0);
  2223                           
  2224  0382  158D               	bsf	13,3	;volatile
  2225  0383  2BA1               	goto	l2582
  2226  0384                     l2578:	
  2227  0384  0020               	movlb	0	; select bank0
  2228  0385  082C               	movf	_heat1_state,w
  2229  0386  00DD               	movwf	??_LEDs
  2230  0387  01DE               	clrf	??_LEDs+1
  2231                           
  2232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2233                           ; Switch size 1, requested type "simple"
  2234                           ; Number of cases is 1, Range of values is 0 to 0
  2235                           ; switch strategies available:
  2236                           ; Name         Instructions Cycles
  2237                           ; simple_byte            4     3 (average)
  2238                           ; direct_byte            8     6 (fixed)
  2239                           ; jumptable            260     6 (fixed)
  2240                           ;	Chosen strategy is simple_byte
  2241  0388  085E               	movf	??_LEDs+1,w
  2242  0389  3A00               	xorlw	0	; case 0
  2243  038A  1903               	skipnz
  2244  038B  2B8D               	goto	l2758
  2245  038C  2B80               	goto	l751
  2246  038D                     l2758:	
  2247                           
  2248                           ; Switch size 1, requested type "simple"
  2249                           ; Number of cases is 2, Range of values is 1 to 2
  2250                           ; switch strategies available:
  2251                           ; Name         Instructions Cycles
  2252                           ; simple_byte            7     4 (average)
  2253                           ; direct_byte           13     9 (fixed)
  2254                           ; jumptable            263     9 (fixed)
  2255                           ;	Chosen strategy is simple_byte
  2256  038D  085D               	movf	??_LEDs,w
  2257  038E  3A01               	xorlw	1	; case 1
  2258  038F  1903               	skipnz
  2259  0390  2B78               	goto	l740
  2260  0391  3A03               	xorlw	3	; case 2
  2261  0392  1903               	skipnz
  2262  0393  2B7C               	goto	l746
  2263  0394  2B80               	goto	l751
  2264  0395                     l757:	
  2265                           ;main.c: 362:             do { LATAbits.LATA0 = 0; } while(0);
  2266                           
  2267  0395  0022               	movlb	2	; select bank2
  2268  0396  100C               	bcf	12,0	;volatile
  2269  0397                     l759:	
  2270                           ;main.c: 363:             do { LATAbits.LATA1 = 1; } while(0);
  2271                           
  2272  0397  148C               	bsf	12,1	;volatile
  2273  0398  2BB2               	goto	l2584
  2274  0399                     l763:	
  2275                           ;main.c: 366:             do { LATAbits.LATA0 = 0; } while(0);
  2276                           
  2277  0399  0022               	movlb	2	; select bank2
  2278  039A  100C               	bcf	12,0	;volatile
  2279  039B                     l765:	
  2280                           ;main.c: 367:             do { LATAbits.LATA1 = 0; } while(0);
  2281                           
  2282  039B  108C               	bcf	12,1	;volatile
  2283  039C  2BB2               	goto	l2584
  2284  039D                     l768:	
  2285                           ;main.c: 370:             do { LATAbits.LATA0 = 1; } while(0);
  2286                           
  2287  039D  0022               	movlb	2	; select bank2
  2288  039E  140C               	bsf	12,0	;volatile
  2289  039F                     l770:	
  2290                           ;main.c: 371:             do { LATAbits.LATA1 = 1; } while(0);
  2291                           
  2292  039F  148C               	bsf	12,1	;volatile
  2293  03A0  2BB2               	goto	l2584
  2294  03A1                     l2582:	
  2295  03A1  0020               	movlb	0	; select bank0
  2296  03A2  082B               	movf	_heat2_state,w
  2297  03A3  00DD               	movwf	??_LEDs
  2298  03A4  01DE               	clrf	??_LEDs+1
  2299                           
  2300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2301                           ; Switch size 1, requested type "simple"
  2302                           ; Number of cases is 1, Range of values is 0 to 0
  2303                           ; switch strategies available:
  2304                           ; Name         Instructions Cycles
  2305                           ; simple_byte            4     3 (average)
  2306                           ; direct_byte            8     6 (fixed)
  2307                           ; jumptable            260     6 (fixed)
  2308                           ;	Chosen strategy is simple_byte
  2309  03A5  085E               	movf	??_LEDs+1,w
  2310  03A6  3A00               	xorlw	0	; case 0
  2311  03A7  1903               	skipnz
  2312  03A8  2BAA               	goto	l2760
  2313  03A9  2B9D               	goto	l768
  2314  03AA                     l2760:	
  2315                           
  2316                           ; Switch size 1, requested type "simple"
  2317                           ; Number of cases is 2, Range of values is 1 to 2
  2318                           ; switch strategies available:
  2319                           ; Name         Instructions Cycles
  2320                           ; simple_byte            7     4 (average)
  2321                           ; direct_byte           13     9 (fixed)
  2322                           ; jumptable            263     9 (fixed)
  2323                           ;	Chosen strategy is simple_byte
  2324  03AA  085D               	movf	??_LEDs,w
  2325  03AB  3A01               	xorlw	1	; case 1
  2326  03AC  1903               	skipnz
  2327  03AD  2B95               	goto	l757
  2328  03AE  3A03               	xorlw	3	; case 2
  2329  03AF  1903               	skipnz
  2330  03B0  2B99               	goto	l763
  2331  03B1  2B9D               	goto	l768
  2332  03B2                     l2584:	
  2333                           
  2334                           ;main.c: 375:     if(massage_intensity_setting){
  2335  03B2  087C               	movf	_massage_intensity_setting,w
  2336  03B3  1903               	btfsc	3,2
  2337  03B4  2BB6               	goto	u2041
  2338  03B5  2BB7               	goto	u2040
  2339  03B6                     u2041:	
  2340  03B6  2BFE               	goto	l822
  2341  03B7                     u2040:	
  2342  03B7  2BC7               	goto	l2590
  2343  03B8                     l775:	
  2344                           ;main.c: 379:                 do { LATDbits.LATD6 = 0; } while(0);
  2345                           
  2346  03B8  0022               	movlb	2	; select bank2
  2347  03B9  130F               	bcf	15,6	;volatile
  2348  03BA                     l777:	
  2349                           ;main.c: 380:                 do { LATDbits.LATD1 = 1; } while(0);
  2350                           
  2351  03BA  148F               	bsf	15,1	;volatile
  2352  03BB                     l779:	
  2353                           ;main.c: 381:                 do { LATEbits.LATE0 = 1; } while(0);
  2354                           
  2355  03BB  1410               	bsf	16,0	;volatile
  2356  03BC  2BEA               	goto	l2594
  2357  03BD                     l783:	
  2358                           ;main.c: 384:                 do { LATDbits.LATD6 = 1; } while(0);
  2359                           
  2360  03BD  0022               	movlb	2	; select bank2
  2361  03BE  170F               	bsf	15,6	;volatile
  2362  03BF                     l785:	
  2363                           ;main.c: 385:                 do { LATDbits.LATD1 = 0; } while(0);
  2364                           
  2365  03BF  108F               	bcf	15,1	;volatile
  2366  03C0                     l787:	
  2367                           ;main.c: 386:                 do { LATEbits.LATE0 = 1; } while(0);
  2368                           
  2369  03C0  1410               	bsf	16,0	;volatile
  2370  03C1  2BEA               	goto	l2594
  2371  03C2                     l790:	
  2372                           ;main.c: 389:                 do { LATDbits.LATD6 = 1; } while(0);
  2373                           
  2374  03C2  0022               	movlb	2	; select bank2
  2375  03C3  170F               	bsf	15,6	;volatile
  2376  03C4                     l792:	
  2377                           ;main.c: 390:                 do { LATDbits.LATD1 = 1; } while(0);
  2378                           
  2379  03C4  148F               	bsf	15,1	;volatile
  2380  03C5                     l794:	
  2381                           ;main.c: 391:                 do { LATEbits.LATE0 = 0; } while(0);
  2382                           
  2383  03C5  1010               	bcf	16,0	;volatile
  2384  03C6  2BEA               	goto	l2594
  2385  03C7                     l2590:	
  2386  03C7  0020               	movlb	0	; select bank0
  2387  03C8  082A               	movf	_massage_mode,w
  2388  03C9  00DD               	movwf	??_LEDs
  2389  03CA  01DE               	clrf	??_LEDs+1
  2390                           
  2391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2392                           ; Switch size 1, requested type "simple"
  2393                           ; Number of cases is 1, Range of values is 0 to 0
  2394                           ; switch strategies available:
  2395                           ; Name         Instructions Cycles
  2396                           ; simple_byte            4     3 (average)
  2397                           ; direct_byte            8     6 (fixed)
  2398                           ; jumptable            260     6 (fixed)
  2399                           ;	Chosen strategy is simple_byte
  2400  03CB  085E               	movf	??_LEDs+1,w
  2401  03CC  3A00               	xorlw	0	; case 0
  2402  03CD  1903               	skipnz
  2403  03CE  2BD0               	goto	l2762
  2404  03CF  2BEA               	goto	l2594
  2405  03D0                     l2762:	
  2406                           
  2407                           ; Switch size 1, requested type "simple"
  2408                           ; Number of cases is 3, Range of values is 0 to 2
  2409                           ; switch strategies available:
  2410                           ; Name         Instructions Cycles
  2411                           ; simple_byte           10     6 (average)
  2412                           ; direct_byte           12     6 (fixed)
  2413                           ; jumptable            260     6 (fixed)
  2414                           ;	Chosen strategy is simple_byte
  2415  03D0  085D               	movf	??_LEDs,w
  2416  03D1  3A00               	xorlw	0	; case 0
  2417  03D2  1903               	skipnz
  2418  03D3  2BB8               	goto	l775
  2419  03D4  3A01               	xorlw	1	; case 1
  2420  03D5  1903               	skipnz
  2421  03D6  2BBD               	goto	l783
  2422  03D7  3A03               	xorlw	3	; case 2
  2423  03D8  1903               	skipnz
  2424  03D9  2BC2               	goto	l790
  2425  03DA  2BEA               	goto	l2594
  2426  03DB                     l799:	
  2427                           ;main.c: 398:                 do { LATDbits.LATD5 = 0; } while(0);
  2428                           
  2429  03DB  0022               	movlb	2	; select bank2
  2430  03DC  128F               	bcf	15,5	;volatile
  2431  03DD                     l801:	
  2432                           ;main.c: 399:                 do { LATDbits.LATD0 = 1; } while(0);
  2433                           
  2434  03DD  140F               	bsf	15,0	;volatile
  2435  03DE                     l803:	
  2436                           ;main.c: 400:                 do { LATAbits.LATA5 = 1; } while(0);
  2437                           
  2438  03DE  168C               	bsf	12,5	;volatile
  2439  03DF  2C04               	goto	l834
  2440  03E0                     l807:	
  2441                           ;main.c: 403:                 do { LATDbits.LATD5 = 1; } while(0);
  2442                           
  2443  03E0  0022               	movlb	2	; select bank2
  2444  03E1  168F               	bsf	15,5	;volatile
  2445  03E2                     l809:	
  2446                           ;main.c: 404:                 do { LATDbits.LATD0 = 0; } while(0);
  2447                           
  2448  03E2  100F               	bcf	15,0	;volatile
  2449  03E3                     l811:	
  2450                           ;main.c: 405:                 do { LATAbits.LATA5 = 1; } while(0);
  2451                           
  2452  03E3  168C               	bsf	12,5	;volatile
  2453  03E4  2C04               	goto	l834
  2454  03E5                     l814:	
  2455                           ;main.c: 408:                 do { LATDbits.LATD5 = 1; } while(0);
  2456                           
  2457  03E5  0022               	movlb	2	; select bank2
  2458  03E6  168F               	bsf	15,5	;volatile
  2459  03E7                     l816:	
  2460                           ;main.c: 409:                 do { LATDbits.LATD0 = 1; } while(0);
  2461                           
  2462  03E7  140F               	bsf	15,0	;volatile
  2463  03E8                     l818:	
  2464                           ;main.c: 410:                 do { LATAbits.LATA5 = 0; } while(0);
  2465                           
  2466  03E8  128C               	bcf	12,5	;volatile
  2467  03E9  2C04               	goto	l834
  2468  03EA                     l2594:	
  2469  03EA  087C               	movf	_massage_intensity_setting,w
  2470  03EB  0020               	movlb	0	; select bank0
  2471  03EC  00DD               	movwf	??_LEDs
  2472  03ED  01DE               	clrf	??_LEDs+1
  2473                           
  2474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2475                           ; Switch size 1, requested type "simple"
  2476                           ; Number of cases is 1, Range of values is 0 to 0
  2477                           ; switch strategies available:
  2478                           ; Name         Instructions Cycles
  2479                           ; simple_byte            4     3 (average)
  2480                           ; direct_byte            8     6 (fixed)
  2481                           ; jumptable            260     6 (fixed)
  2482                           ;	Chosen strategy is simple_byte
  2483  03EE  085E               	movf	??_LEDs+1,w
  2484  03EF  3A00               	xorlw	0	; case 0
  2485  03F0  1903               	skipnz
  2486  03F1  2BF3               	goto	l2764
  2487  03F2  2C04               	goto	l834
  2488  03F3                     l2764:	
  2489                           
  2490                           ; Switch size 1, requested type "simple"
  2491                           ; Number of cases is 3, Range of values is 1 to 3
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte           10     6 (average)
  2495                           ; direct_byte           15     9 (fixed)
  2496                           ; jumptable            263     9 (fixed)
  2497                           ;	Chosen strategy is simple_byte
  2498  03F3  085D               	movf	??_LEDs,w
  2499  03F4  3A01               	xorlw	1	; case 1
  2500  03F5  1903               	skipnz
  2501  03F6  2BDB               	goto	l799
  2502  03F7  3A03               	xorlw	3	; case 2
  2503  03F8  1903               	skipnz
  2504  03F9  2BE0               	goto	l807
  2505  03FA  3A01               	xorlw	1	; case 3
  2506  03FB  1903               	skipnz
  2507  03FC  2BE5               	goto	l814
  2508  03FD  2C04               	goto	l834
  2509  03FE                     l822:	
  2510                           ;main.c: 416:         do { LATDbits.LATD6 = 1; } while(0);
  2511                           
  2512  03FE  170F               	bsf	15,6	;volatile
  2513  03FF                     l824:	
  2514                           ;main.c: 417:         do { LATDbits.LATD1 = 1; } while(0);
  2515                           
  2516  03FF  148F               	bsf	15,1	;volatile
  2517  0400                     l826:	
  2518                           ;main.c: 418:         do { LATEbits.LATE0 = 1; } while(0);
  2519                           
  2520  0400  1410               	bsf	16,0	;volatile
  2521  0401                     l828:	
  2522                           ;main.c: 419:         do { LATDbits.LATD5 = 1; } while(0);
  2523                           
  2524  0401  168F               	bsf	15,5	;volatile
  2525  0402                     l830:	
  2526                           ;main.c: 420:         do { LATDbits.LATD0 = 1; } while(0);
  2527                           
  2528  0402  140F               	bsf	15,0	;volatile
  2529  0403                     l832:	
  2530                           ;main.c: 421:         do { LATAbits.LATA5 = 1; } while(0);
  2531                           
  2532  0403  168C               	bsf	12,5	;volatile
  2533  0404                     l834:	
  2534  0404  0008               	return
  2535  0405                     __end_of_LEDs:	
  2536                           
  2537                           	psect	text8
  2538  0034                     __ptext8:	
  2539 ;; *************** function _Execute *****************
  2540 ;; Defined at:
  2541 ;;		line 222 in file "main.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2555 ;;      Params:         0       0       0       0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0
  2557 ;;      Temps:          0       2       0       0       0       0       0       0
  2558 ;;      Totals:         0       2       0       0       0       0       0       0
  2559 ;;Total ram usage:        2 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    5
  2562 ;; This function calls:
  2563 ;;		_Massage
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _Execute
  2571  0034                     _Execute:	
  2572  0034                     l2494:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _Execute: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2575                           
  2576                           
  2577                           ;main.c: 224:     if(lock_btn_state || lock_actuators || (lift_open_state==lift_close_st
      +                          ate)){
  2578  0034  1BFB               	btfsc	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  2579  0035  2837               	goto	u1681
  2580  0036  2838               	goto	u1680
  2581  0037                     u1681:	
  2582  0037  284F               	goto	l608
  2583  0038                     u1680:	
  2584  0038                     l2496:	
  2585  0038  1B7B               	btfsc	_lock_actuators/(0+8),_lock_actuators& (0+7)
  2586  0039  283B               	goto	u1691
  2587  003A  283C               	goto	u1690
  2588  003B                     u1691:	
  2589  003B  284F               	goto	l608
  2590  003C                     u1690:	
  2591  003C                     l2498:	
  2592  003C  197B               	btfsc	_lift_close_state/(0+8),_lift_close_state& (0+7)
  2593  003D  283F               	goto	u1701
  2594  003E  2841               	goto	u1700
  2595  003F                     u1701:	
  2596  003F  3001               	movlw	1
  2597  0040  2842               	goto	u1702
  2598  0041                     u1700:	
  2599  0041  3000               	movlw	0
  2600  0042                     u1702:	
  2601  0042  0020               	movlb	0	; select bank0
  2602  0043  00DF               	movwf	??_Execute
  2603  0044  19FB               	btfsc	_lift_open_state/(0+8),_lift_open_state& (0+7)
  2604  0045  2847               	goto	u1711
  2605  0046  2849               	goto	u1710
  2606  0047                     u1711:	
  2607  0047  3001               	movlw	1
  2608  0048  284A               	goto	u1712
  2609  0049                     u1710:	
  2610  0049  3000               	movlw	0
  2611  004A                     u1712:	
  2612  004A  065F               	xorwf	??_Execute,w
  2613  004B  1D03               	skipz
  2614  004C  284E               	goto	u1721
  2615  004D  284F               	goto	u1720
  2616  004E                     u1721:	
  2617  004E  2853               	goto	l605
  2618  004F                     u1720:	
  2619  004F                     l608:	
  2620                           ;main.c: 225:         do { LATCbits.LATC1 = 0; } while(0);
  2621                           
  2622  004F  0022               	movlb	2	; select bank2
  2623  0050  108E               	bcf	14,1	;volatile
  2624  0051                     l610:	
  2625                           ;main.c: 226:         do { LATCbits.LATC0 = 0; } while(0);
  2626                           
  2627  0051  100E               	bcf	14,0	;volatile
  2628  0052  2880               	goto	l2508
  2629  0053                     l605:	
  2630                           
  2631                           ;main.c: 228:         if(lift_open_state){
  2632  0053  1DFB               	btfss	_lift_open_state/(0+8),_lift_open_state& (0+7)
  2633  0054  2856               	goto	u1731
  2634  0055  2857               	goto	u1730
  2635  0056                     u1731:	
  2636  0056  286A               	goto	l613
  2637  0057                     u1730:	
  2638  0057                     l614:	
  2639                           ;main.c: 229:             do { LATCbits.LATC0 = 0; } while(0);
  2640                           
  2641  0057  0022               	movlb	2	; select bank2
  2642  0058  100E               	bcf	14,0	;volatile
  2643  0059                     l2500:	
  2644                           
  2645                           ;main.c: 230:             if(lift_open_delay){
  2646  0059  0020               	movlb	0	; select bank0
  2647  005A  083D               	movf	_lift_open_delay,w
  2648  005B  1903               	btfsc	3,2
  2649  005C  285E               	goto	u1741
  2650  005D  285F               	goto	u1740
  2651  005E                     u1741:	
  2652  005E  2862               	goto	l620
  2653  005F                     u1740:	
  2654  005F                     l617:	
  2655                           ;main.c: 231:                 do { LATCbits.LATC1 = 0; } while(0);
  2656                           
  2657  005F  0022               	movlb	2	; select bank2
  2658  0060  108E               	bcf	14,1	;volatile
  2659  0061  2880               	goto	l2508
  2660  0062                     l620:	
  2661                           ;main.c: 233:                 do { LATCbits.LATC1 = 1; } while(0);
  2662                           
  2663  0062  0022               	movlb	2	; select bank2
  2664  0063  148E               	bsf	14,1	;volatile
  2665  0064                     l2502:	
  2666                           
  2667                           ;main.c: 234:                 lift_close_delay = 200;
  2668  0064  30C8               	movlw	200
  2669  0065  0020               	movlb	0	; select bank0
  2670  0066  00DF               	movwf	??_Execute
  2671  0067  085F               	movf	??_Execute,w
  2672  0068  00BC               	movwf	_lift_close_delay
  2673  0069  2880               	goto	l2508
  2674  006A                     l613:	
  2675  006A  1D7B               	btfss	_lift_close_state/(0+8),_lift_close_state& (0+7)
  2676  006B  286D               	goto	u1751
  2677  006C  286E               	goto	u1750
  2678  006D                     u1751:	
  2679  006D  2880               	goto	l2508
  2680  006E                     u1750:	
  2681  006E                     l624:	
  2682                           ;main.c: 237:             do { LATCbits.LATC1 = 0; } while(0);
  2683                           
  2684  006E  0022               	movlb	2	; select bank2
  2685  006F  108E               	bcf	14,1	;volatile
  2686  0070                     l2504:	
  2687                           
  2688                           ;main.c: 238:             if(lift_close_delay){
  2689  0070  0020               	movlb	0	; select bank0
  2690  0071  083C               	movf	_lift_close_delay,w
  2691  0072  1903               	btfsc	3,2
  2692  0073  2875               	goto	u1761
  2693  0074  2876               	goto	u1760
  2694  0075                     u1761:	
  2695  0075  2879               	goto	l630
  2696  0076                     u1760:	
  2697  0076                     l627:	
  2698                           ;main.c: 239:                 do { LATCbits.LATC0 = 0; } while(0);
  2699                           
  2700  0076  0022               	movlb	2	; select bank2
  2701  0077  100E               	bcf	14,0	;volatile
  2702  0078  2880               	goto	l2508
  2703  0079                     l630:	
  2704                           ;main.c: 241:                 do { LATCbits.LATC0 = 1; } while(0);
  2705                           
  2706  0079  0022               	movlb	2	; select bank2
  2707  007A  140E               	bsf	14,0	;volatile
  2708  007B                     l2506:	
  2709                           
  2710                           ;main.c: 242:                 lift_open_delay = 200;
  2711  007B  30C8               	movlw	200
  2712  007C  0020               	movlb	0	; select bank0
  2713  007D  00DF               	movwf	??_Execute
  2714  007E  085F               	movf	??_Execute,w
  2715  007F  00BD               	movwf	_lift_open_delay
  2716  0080                     l2508:	
  2717                           
  2718                           ;main.c: 247:     if(lock_btn_state || lock_actuators || (back_open_state==back_close_st
      +                          ate)){
  2719  0080  1BFB               	btfsc	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  2720  0081  2883               	goto	u1771
  2721  0082  2884               	goto	u1770
  2722  0083                     u1771:	
  2723  0083  289B               	goto	l635
  2724  0084                     u1770:	
  2725  0084                     l2510:	
  2726  0084  1B7B               	btfsc	_lock_actuators/(0+8),_lock_actuators& (0+7)
  2727  0085  2887               	goto	u1781
  2728  0086  2888               	goto	u1780
  2729  0087                     u1781:	
  2730  0087  289B               	goto	l635
  2731  0088                     u1780:	
  2732  0088                     l2512:	
  2733  0088  187B               	btfsc	_back_close_state/(0+8),_back_close_state& (0+7)
  2734  0089  288B               	goto	u1791
  2735  008A  288D               	goto	u1790
  2736  008B                     u1791:	
  2737  008B  3001               	movlw	1
  2738  008C  288E               	goto	u1792
  2739  008D                     u1790:	
  2740  008D  3000               	movlw	0
  2741  008E                     u1792:	
  2742  008E  0020               	movlb	0	; select bank0
  2743  008F  00DF               	movwf	??_Execute
  2744  0090  18FB               	btfsc	_back_open_state/(0+8),_back_open_state& (0+7)
  2745  0091  2893               	goto	u1801
  2746  0092  2895               	goto	u1800
  2747  0093                     u1801:	
  2748  0093  3001               	movlw	1
  2749  0094  2896               	goto	u1802
  2750  0095                     u1800:	
  2751  0095  3000               	movlw	0
  2752  0096                     u1802:	
  2753  0096  065F               	xorwf	??_Execute,w
  2754  0097  1D03               	skipz
  2755  0098  289A               	goto	u1811
  2756  0099  289B               	goto	u1810
  2757  009A                     u1811:	
  2758  009A  289F               	goto	l632
  2759  009B                     u1810:	
  2760  009B                     l635:	
  2761                           ;main.c: 248:         do { LATAbits.LATA6 = 0; } while(0);
  2762                           
  2763  009B  0022               	movlb	2	; select bank2
  2764  009C  130C               	bcf	12,6	;volatile
  2765  009D                     l637:	
  2766                           ;main.c: 249:         do { LATAbits.LATA7 = 0; } while(0);
  2767                           
  2768  009D  138C               	bcf	12,7	;volatile
  2769  009E  28CC               	goto	l2522
  2770  009F                     l632:	
  2771                           
  2772                           ;main.c: 251:         if(back_open_state){
  2773  009F  1CFB               	btfss	_back_open_state/(0+8),_back_open_state& (0+7)
  2774  00A0  28A2               	goto	u1821
  2775  00A1  28A3               	goto	u1820
  2776  00A2                     u1821:	
  2777  00A2  28B6               	goto	l640
  2778  00A3                     u1820:	
  2779  00A3                     l641:	
  2780                           ;main.c: 252:             do { LATAbits.LATA7 = 0; } while(0);
  2781                           
  2782  00A3  0022               	movlb	2	; select bank2
  2783  00A4  138C               	bcf	12,7	;volatile
  2784  00A5                     l2514:	
  2785                           
  2786                           ;main.c: 253:             if(back_open_delay){
  2787  00A5  0020               	movlb	0	; select bank0
  2788  00A6  083B               	movf	_back_open_delay,w
  2789  00A7  1903               	btfsc	3,2
  2790  00A8  28AA               	goto	u1831
  2791  00A9  28AB               	goto	u1830
  2792  00AA                     u1831:	
  2793  00AA  28AE               	goto	l647
  2794  00AB                     u1830:	
  2795  00AB                     l644:	
  2796                           ;main.c: 254:                 do { LATAbits.LATA6 = 0; } while(0);
  2797                           
  2798  00AB  0022               	movlb	2	; select bank2
  2799  00AC  130C               	bcf	12,6	;volatile
  2800  00AD  28CC               	goto	l2522
  2801  00AE                     l647:	
  2802                           ;main.c: 256:                 do { LATAbits.LATA6 = 1; } while(0);
  2803                           
  2804  00AE  0022               	movlb	2	; select bank2
  2805  00AF  170C               	bsf	12,6	;volatile
  2806  00B0                     l2516:	
  2807                           
  2808                           ;main.c: 257:                 back_close_delay = 200;
  2809  00B0  30C8               	movlw	200
  2810  00B1  0020               	movlb	0	; select bank0
  2811  00B2  00DF               	movwf	??_Execute
  2812  00B3  085F               	movf	??_Execute,w
  2813  00B4  00BA               	movwf	_back_close_delay
  2814  00B5  28CC               	goto	l2522
  2815  00B6                     l640:	
  2816  00B6  1C7B               	btfss	_back_close_state/(0+8),_back_close_state& (0+7)
  2817  00B7  28B9               	goto	u1841
  2818  00B8  28BA               	goto	u1840
  2819  00B9                     u1841:	
  2820  00B9  28CC               	goto	l2522
  2821  00BA                     u1840:	
  2822  00BA                     l651:	
  2823                           ;main.c: 260:             do { LATAbits.LATA6 = 0; } while(0);
  2824                           
  2825  00BA  0022               	movlb	2	; select bank2
  2826  00BB  130C               	bcf	12,6	;volatile
  2827  00BC                     l2518:	
  2828                           
  2829                           ;main.c: 261:             if(back_close_delay){
  2830  00BC  0020               	movlb	0	; select bank0
  2831  00BD  083A               	movf	_back_close_delay,w
  2832  00BE  1903               	btfsc	3,2
  2833  00BF  28C1               	goto	u1851
  2834  00C0  28C2               	goto	u1850
  2835  00C1                     u1851:	
  2836  00C1  28C5               	goto	l657
  2837  00C2                     u1850:	
  2838  00C2                     l654:	
  2839                           ;main.c: 262:                 do { LATAbits.LATA7 = 0; } while(0);
  2840                           
  2841  00C2  0022               	movlb	2	; select bank2
  2842  00C3  138C               	bcf	12,7	;volatile
  2843  00C4  28CC               	goto	l2522
  2844  00C5                     l657:	
  2845                           ;main.c: 264:                 do { LATAbits.LATA7 = 1; } while(0);
  2846                           
  2847  00C5  0022               	movlb	2	; select bank2
  2848  00C6  178C               	bsf	12,7	;volatile
  2849  00C7                     l2520:	
  2850                           
  2851                           ;main.c: 265:                 back_open_delay = 200;
  2852  00C7  30C8               	movlw	200
  2853  00C8  0020               	movlb	0	; select bank0
  2854  00C9  00DF               	movwf	??_Execute
  2855  00CA  085F               	movf	??_Execute,w
  2856  00CB  00BB               	movwf	_back_open_delay
  2857  00CC                     l2522:	
  2858                           
  2859                           ;main.c: 270:     if(!heat1_timer){
  2860  00CC  0020               	movlb	0	; select bank0
  2861  00CD  0824               	movf	_heat1_timer,w
  2862  00CE  0425               	iorwf	_heat1_timer+1,w
  2863  00CF  1D03               	btfss	3,2
  2864  00D0  28D2               	goto	u1861
  2865  00D1  28D3               	goto	u1860
  2866  00D2                     u1861:	
  2867  00D2  28D4               	goto	l2526
  2868  00D3                     u1860:	
  2869  00D3                     l2524:	
  2870                           
  2871                           ;main.c: 271:         heat1_state = 0;
  2872  00D3  01AC               	clrf	_heat1_state
  2873  00D4                     l2526:	
  2874                           
  2875                           ;main.c: 273:     if(!heat2_timer){
  2876  00D4  0822               	movf	_heat2_timer,w
  2877  00D5  0423               	iorwf	_heat2_timer+1,w
  2878  00D6  1D03               	btfss	3,2
  2879  00D7  28D9               	goto	u1871
  2880  00D8  28DA               	goto	u1870
  2881  00D9                     u1871:	
  2882  00D9  28DB               	goto	l2530
  2883  00DA                     u1870:	
  2884  00DA                     l2528:	
  2885                           
  2886                           ;main.c: 274:         heat2_state = 0;
  2887  00DA  01AB               	clrf	_heat2_state
  2888  00DB                     l2530:	
  2889                           
  2890                           ;main.c: 276:     if(PORTCbits.RC1 || PORTCbits.RC0 || PORTAbits.RA6 || PORTAbits.RA7){
  2891  00DB  188E               	btfsc	14,1	;volatile
  2892  00DC  28DE               	goto	u1881
  2893  00DD  28DF               	goto	u1880
  2894  00DE                     u1881:	
  2895  00DE  28EB               	goto	l664
  2896  00DF                     u1880:	
  2897  00DF                     l2532:	
  2898  00DF  180E               	btfsc	14,0	;volatile
  2899  00E0  28E2               	goto	u1891
  2900  00E1  28E3               	goto	u1890
  2901  00E2                     u1891:	
  2902  00E2  28EB               	goto	l664
  2903  00E3                     u1890:	
  2904  00E3                     l2534:	
  2905  00E3  1B0C               	btfsc	12,6	;volatile
  2906  00E4  28E6               	goto	u1901
  2907  00E5  28E7               	goto	u1900
  2908  00E6                     u1901:	
  2909  00E6  28EB               	goto	l664
  2910  00E7                     u1900:	
  2911  00E7                     l2536:	
  2912  00E7  1F8C               	btfss	12,7	;volatile
  2913  00E8  28EA               	goto	u1911
  2914  00E9  28EB               	goto	u1910
  2915  00EA                     u1911:	
  2916  00EA  28EF               	goto	l2538
  2917  00EB                     u1910:	
  2918  00EB                     l664:	
  2919                           ;main.c: 277:         do { LATCbits.LATC6 = 0; } while(0);
  2920                           
  2921  00EB  0022               	movlb	2	; select bank2
  2922  00EC  130E               	bcf	14,6	;volatile
  2923  00ED                     l666:	
  2924                           ;main.c: 278:         do { LATCbits.LATC5 = 0; } while(0);
  2925                           
  2926  00ED  128E               	bcf	14,5	;volatile
  2927  00EE  294A               	goto	l2562
  2928  00EF                     l2538:	
  2929                           
  2930                           ;main.c: 280:         if(pwm_count <= 50/4){
  2931  00EF  300D               	movlw	13
  2932  00F0  027D               	subwf	_pwm_count,w
  2933  00F1  1803               	skipnc
  2934  00F2  28F4               	goto	u1921
  2935  00F3  28F5               	goto	u1920
  2936  00F4                     u1921:	
  2937  00F4  2903               	goto	l2542
  2938  00F5                     u1920:	
  2939  00F5                     l670:	
  2940                           ;main.c: 281:             do { LATCbits.LATC5 = 0; } while(0);
  2941                           
  2942  00F5  0022               	movlb	2	; select bank2
  2943  00F6  128E               	bcf	14,5	;volatile
  2944  00F7                     l2540:	
  2945                           
  2946                           ;main.c: 282:             if(heat1_state){
  2947  00F7  0020               	movlb	0	; select bank0
  2948  00F8  082C               	movf	_heat1_state,w
  2949  00F9  1903               	btfsc	3,2
  2950  00FA  28FC               	goto	u1931
  2951  00FB  28FD               	goto	u1930
  2952  00FC                     u1931:	
  2953  00FC  2900               	goto	l676
  2954  00FD                     u1930:	
  2955  00FD                     l673:	
  2956                           ;main.c: 283:                 do { LATCbits.LATC6 = 1; } while(0);
  2957                           
  2958  00FD  0022               	movlb	2	; select bank2
  2959  00FE  170E               	bsf	14,6	;volatile
  2960  00FF  294A               	goto	l2562
  2961  0100                     l676:	
  2962                           ;main.c: 285:                 do { LATCbits.LATC6 = 0; } while(0);
  2963                           
  2964  0100  0022               	movlb	2	; select bank2
  2965  0101  130E               	bcf	14,6	;volatile
  2966  0102  294A               	goto	l2562
  2967  0103                     l2542:	
  2968  0103  301A               	movlw	26
  2969  0104  027D               	subwf	_pwm_count,w
  2970  0105  1803               	skipnc
  2971  0106  2908               	goto	u1941
  2972  0107  2909               	goto	u1940
  2973  0108                     u1941:	
  2974  0108  2917               	goto	l2546
  2975  0109                     u1940:	
  2976  0109                     l680:	
  2977                           ;main.c: 288:             do { LATCbits.LATC5 = 0; } while(0);
  2978                           
  2979  0109  0022               	movlb	2	; select bank2
  2980  010A  128E               	bcf	14,5	;volatile
  2981  010B                     l2544:	
  2982                           
  2983                           ;main.c: 289:             if(heat1_state == 1){
  2984  010B  0020               	movlb	0	; select bank0
  2985  010C  032C               	decf	_heat1_state,w
  2986  010D  1D03               	btfss	3,2
  2987  010E  2910               	goto	u1951
  2988  010F  2911               	goto	u1950
  2989  0110                     u1951:	
  2990  0110  2914               	goto	l686
  2991  0111                     u1950:	
  2992  0111                     l683:	
  2993                           ;main.c: 290:                 do { LATCbits.LATC6 = 1; } while(0);
  2994                           
  2995  0111  0022               	movlb	2	; select bank2
  2996  0112  170E               	bsf	14,6	;volatile
  2997  0113  294A               	goto	l2562
  2998  0114                     l686:	
  2999                           ;main.c: 292:                 do { LATCbits.LATC6 = 0; } while(0);
  3000                           
  3001  0114  0022               	movlb	2	; select bank2
  3002  0115  130E               	bcf	14,6	;volatile
  3003  0116  294A               	goto	l2562
  3004  0117                     l2546:	
  3005  0117  3026               	movlw	38
  3006  0118  027D               	subwf	_pwm_count,w
  3007  0119  1803               	skipnc
  3008  011A  291C               	goto	u1961
  3009  011B  291D               	goto	u1960
  3010  011C                     u1961:	
  3011  011C  292B               	goto	l699
  3012  011D                     u1960:	
  3013  011D                     l690:	
  3014                           ;main.c: 295:             do { LATCbits.LATC6 = 0; } while(0);
  3015                           
  3016  011D  0022               	movlb	2	; select bank2
  3017  011E  130E               	bcf	14,6	;volatile
  3018  011F                     l2548:	
  3019                           
  3020                           ;main.c: 296:             if(heat2_state){
  3021  011F  0020               	movlb	0	; select bank0
  3022  0120  082B               	movf	_heat2_state,w
  3023  0121  1903               	btfsc	3,2
  3024  0122  2924               	goto	u1971
  3025  0123  2925               	goto	u1970
  3026  0124                     u1971:	
  3027  0124  2928               	goto	l696
  3028  0125                     u1970:	
  3029  0125                     l693:	
  3030                           ;main.c: 297:                 do { LATCbits.LATC5 = 1; } while(0);
  3031                           
  3032  0125  0022               	movlb	2	; select bank2
  3033  0126  168E               	bsf	14,5	;volatile
  3034  0127  294A               	goto	l2562
  3035  0128                     l696:	
  3036                           ;main.c: 299:                 do { LATCbits.LATC5 = 0; } while(0);
  3037                           
  3038  0128  0022               	movlb	2	; select bank2
  3039  0129  128E               	bcf	14,5	;volatile
  3040  012A  294A               	goto	l2562
  3041  012B                     l699:	
  3042                           ;main.c: 302:             do { LATCbits.LATC6 = 0; } while(0);
  3043                           
  3044  012B  0022               	movlb	2	; select bank2
  3045  012C  130E               	bcf	14,6	;volatile
  3046  012D                     l2550:	
  3047                           
  3048                           ;main.c: 303:             if(heat2_state == 1){
  3049  012D  0020               	movlb	0	; select bank0
  3050  012E  032B               	decf	_heat2_state,w
  3051  012F  1D03               	btfss	3,2
  3052  0130  2932               	goto	u1981
  3053  0131  2933               	goto	u1980
  3054  0132                     u1981:	
  3055  0132  2936               	goto	l705
  3056  0133                     u1980:	
  3057  0133                     l702:	
  3058                           ;main.c: 304:                 do { LATCbits.LATC5 = 1; } while(0);
  3059                           
  3060  0133  0022               	movlb	2	; select bank2
  3061  0134  168E               	bsf	14,5	;volatile
  3062  0135  294A               	goto	l2562
  3063  0136                     l705:	
  3064                           ;main.c: 306:                 do { LATCbits.LATC5 = 0; } while(0);
  3065                           
  3066  0136  0022               	movlb	2	; select bank2
  3067  0137  128E               	bcf	14,5	;volatile
  3068  0138  294A               	goto	l2562
  3069  0139                     l2552:	
  3070                           
  3071                           ;main.c: 312:             massage_intensity = 0;
  3072  0139  01B9               	clrf	_massage_intensity
  3073                           
  3074                           ;main.c: 313:             break;
  3075  013A  2961               	goto	l2564
  3076  013B                     l2554:	
  3077                           
  3078                           ;main.c: 315:             massage_intensity = 50*30/100;
  3079  013B  300F               	movlw	15
  3080  013C  00DF               	movwf	??_Execute
  3081  013D  085F               	movf	??_Execute,w
  3082  013E  00B9               	movwf	_massage_intensity
  3083                           
  3084                           ;main.c: 316:             break;
  3085  013F  2961               	goto	l2564
  3086  0140                     l2556:	
  3087                           
  3088                           ;main.c: 318:             massage_intensity = 50*50/100;
  3089  0140  3019               	movlw	25
  3090  0141  00DF               	movwf	??_Execute
  3091  0142  085F               	movf	??_Execute,w
  3092  0143  00B9               	movwf	_massage_intensity
  3093                           
  3094                           ;main.c: 319:             break;
  3095  0144  2961               	goto	l2564
  3096  0145                     l2558:	
  3097                           
  3098                           ;main.c: 321:             massage_intensity = 50*70/100;
  3099  0145  3023               	movlw	35
  3100  0146  00DF               	movwf	??_Execute
  3101  0147  085F               	movf	??_Execute,w
  3102  0148  00B9               	movwf	_massage_intensity
  3103                           
  3104                           ;main.c: 322:             break;
  3105  0149  2961               	goto	l2564
  3106  014A                     l2562:	
  3107  014A  087C               	movf	_massage_intensity_setting,w
  3108  014B  0020               	movlb	0	; select bank0
  3109  014C  00DF               	movwf	??_Execute
  3110  014D  01E0               	clrf	??_Execute+1
  3111                           
  3112                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3113                           ; Switch size 1, requested type "simple"
  3114                           ; Number of cases is 1, Range of values is 0 to 0
  3115                           ; switch strategies available:
  3116                           ; Name         Instructions Cycles
  3117                           ; simple_byte            4     3 (average)
  3118                           ; direct_byte            8     6 (fixed)
  3119                           ; jumptable            260     6 (fixed)
  3120                           ;	Chosen strategy is simple_byte
  3121  014E  0860               	movf	??_Execute+1,w
  3122  014F  3A00               	xorlw	0	; case 0
  3123  0150  1903               	skipnz
  3124  0151  2953               	goto	l2766
  3125  0152  2961               	goto	l2564
  3126  0153                     l2766:	
  3127                           
  3128                           ; Switch size 1, requested type "simple"
  3129                           ; Number of cases is 4, Range of values is 0 to 3
  3130                           ; switch strategies available:
  3131                           ; Name         Instructions Cycles
  3132                           ; simple_byte           13     7 (average)
  3133                           ; direct_byte           14     6 (fixed)
  3134                           ; jumptable            260     6 (fixed)
  3135                           ;	Chosen strategy is simple_byte
  3136  0153  085F               	movf	??_Execute,w
  3137  0154  3A00               	xorlw	0	; case 0
  3138  0155  1903               	skipnz
  3139  0156  2939               	goto	l2552
  3140  0157  3A01               	xorlw	1	; case 1
  3141  0158  1903               	skipnz
  3142  0159  293B               	goto	l2554
  3143  015A  3A03               	xorlw	3	; case 2
  3144  015B  1903               	skipnz
  3145  015C  2940               	goto	l2556
  3146  015D  3A01               	xorlw	1	; case 3
  3147  015E  1903               	skipnz
  3148  015F  2945               	goto	l2558
  3149  0160  2961               	goto	l2564
  3150  0161                     l2564:	
  3151                           
  3152                           ;main.c: 324:     Massage();
  3153  0161  3184  2405  3180   	fcall	_Massage
  3154  0164                     l713:	
  3155  0164  0008               	return
  3156  0165                     __end_of_Execute:	
  3157                           
  3158                           	psect	text9
  3159  0405                     __ptext9:	
  3160 ;; *************** function _Massage *****************
  3161 ;; Defined at:
  3162 ;;		line 425 in file "main.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3176 ;;      Params:         0       0       0       0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0
  3178 ;;      Temps:          0       2       0       0       0       0       0       0
  3179 ;;      Totals:         0       2       0       0       0       0       0       0
  3180 ;;Total ram usage:        2 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    4
  3183 ;; This function calls:
  3184 ;;		_Z1SetHigh
  3185 ;;		_Z1SetLow
  3186 ;;		_Z2SetHigh
  3187 ;;		_Z2SetLow
  3188 ;;		_Z3SetHigh
  3189 ;;		_Z3SetLow
  3190 ;;		_Z4SetHigh
  3191 ;;		_Z4SetLow
  3192 ;; This function is called by:
  3193 ;;		_Execute
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _Massage
  3199  0405                     _Massage:	
  3200  0405                     l2190:	
  3201                           ;incstack = 0
  3202                           ; Regs used in _Massage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3203                           
  3204                           
  3205                           ;main.c: 426:     if(!massage_timer){
  3206  0405  0020               	movlb	0	; select bank0
  3207  0406  0820               	movf	_massage_timer,w
  3208  0407  0421               	iorwf	_massage_timer+1,w
  3209  0408  1D03               	btfss	3,2
  3210  0409  2C0B               	goto	u1041
  3211  040A  2C0C               	goto	u1040
  3212  040B                     u1041:	
  3213  040B  2C0D               	goto	l2194
  3214  040C                     u1040:	
  3215  040C                     l2192:	
  3216                           
  3217                           ;main.c: 427:         massage_intensity_setting = 0;
  3218  040C  01FC               	clrf	_massage_intensity_setting
  3219  040D                     l2194:	
  3220                           
  3221                           ;main.c: 429:     if(massage_intensity_setting && PORTAbits.RA4){
  3222  040D  087C               	movf	_massage_intensity_setting,w
  3223  040E  1903               	btfsc	3,2
  3224  040F  2C11               	goto	u1051
  3225  0410  2C12               	goto	u1050
  3226  0411                     u1051:	
  3227  0411  2C94               	goto	l912
  3228  0412                     u1050:	
  3229  0412                     l2196:	
  3230  0412  1E0C               	btfss	12,4	;volatile
  3231  0413  2C15               	goto	u1061
  3232  0414  2C16               	goto	u1060
  3233  0415                     u1061:	
  3234  0415  2C94               	goto	l912
  3235  0416                     u1060:	
  3236  0416  2C81               	goto	l2214
  3237  0417                     l2200:	
  3238                           
  3239                           ;main.c: 432:                 if(massage_intensity > pwm_count){
  3240  0417  0839               	movf	_massage_intensity,w
  3241  0418  027D               	subwf	_pwm_count,w
  3242  0419  1803               	skipnc
  3243  041A  2C1C               	goto	u1071
  3244  041B  2C1D               	goto	u1070
  3245  041C                     u1071:	
  3246  041C  2C23               	goto	l851
  3247  041D                     u1070:	
  3248  041D                     l842:	
  3249                           ;main.c: 433:                     do { LATCbits.LATC4 = 1; } while(0);
  3250                           
  3251  041D  0022               	movlb	2	; select bank2
  3252  041E  160E               	bsf	14,4	;volatile
  3253  041F                     l844:	
  3254                           ;main.c: 434:                     do { LATDbits.LATD3 = 1; } while(0);
  3255                           
  3256  041F  158F               	bsf	15,3	;volatile
  3257  0420                     l846:	
  3258                           ;main.c: 435:                     do { LATCbits.LATC3 = 1; } while(0);
  3259                           
  3260  0420  158E               	bsf	14,3	;volatile
  3261  0421                     l848:	
  3262                           ;main.c: 436:                     do { LATCbits.LATC2 = 1; } while(0);
  3263                           
  3264  0421  150E               	bsf	14,2	;volatile
  3265  0422  2C99               	goto	l920
  3266  0423                     l851:	
  3267                           ;main.c: 438:                     do { LATCbits.LATC4 = 0; } while(0);
  3268                           
  3269  0423  0022               	movlb	2	; select bank2
  3270  0424  120E               	bcf	14,4	;volatile
  3271  0425                     l853:	
  3272                           ;main.c: 439:                     do { LATDbits.LATD3 = 0; } while(0);
  3273                           
  3274  0425  118F               	bcf	15,3	;volatile
  3275  0426                     l855:	
  3276                           ;main.c: 440:                     do { LATCbits.LATC3 = 0; } while(0);
  3277                           
  3278  0426  118E               	bcf	14,3	;volatile
  3279  0427                     l857:	
  3280                           ;main.c: 441:                     do { LATCbits.LATC2 = 0; } while(0);
  3281                           
  3282  0427  110E               	bcf	14,2	;volatile
  3283  0428  2C99               	goto	l920
  3284  0429                     l2202:	
  3285                           
  3286                           ;main.c: 445:                 if(pulse_wave_in_intensity > pwm_count){
  3287  0429  0838               	movf	_pulse_wave_in_intensity,w
  3288  042A  027D               	subwf	_pwm_count,w
  3289  042B  1803               	skipnc
  3290  042C  2C2E               	goto	u1081
  3291  042D  2C2F               	goto	u1080
  3292  042E                     u1081:	
  3293  042E  2C3B               	goto	l2206
  3294  042F                     u1080:	
  3295  042F                     l2204:	
  3296                           
  3297                           ;main.c: 446:                     WaveInOn();
  3298  042F  084D               	movf	_WaveInOn+1,w
  3299  0430  008A               	movwf	10
  3300  0431  084C               	movf	_WaveInOn,w
  3301  0432  000A               	callw
  3302  0433  3184               	pagesel	$
  3303                           
  3304                           ;main.c: 447:                     WaveOutOff();
  3305  0434  0020               	movlb	0	; select bank0
  3306  0435  0847               	movf	_WaveOutOff+1,w
  3307  0436  008A               	movwf	10
  3308  0437  0846               	movf	_WaveOutOff,w
  3309  0438  000A               	callw
  3310  0439  3184               	pagesel	$
  3311                           
  3312                           ;main.c: 448:                 }else{
  3313  043A  2C46               	goto	l862
  3314  043B                     l2206:	
  3315                           
  3316                           ;main.c: 449:                     WaveInOff();
  3317  043B  084B               	movf	_WaveInOff+1,w
  3318  043C  008A               	movwf	10
  3319  043D  084A               	movf	_WaveInOff,w
  3320  043E  000A               	callw
  3321  043F  3184               	pagesel	$
  3322                           
  3323                           ;main.c: 450:                     WaveOutOn();
  3324  0440  0020               	movlb	0	; select bank0
  3325  0441  0849               	movf	_WaveOutOn+1,w
  3326  0442  008A               	movwf	10
  3327  0443  0848               	movf	_WaveOutOn,w
  3328  0444  000A               	callw
  3329  0445  3184               	pagesel	$
  3330  0446                     l862:	
  3331                           ;main.c: 451:                 }
  3332                           
  3333                           
  3334                           ;main.c: 452:                 WaveGap1Off();
  3335  0446  0020               	movlb	0	; select bank0
  3336  0447  0843               	movf	_WaveGap1Off+1,w
  3337  0448  008A               	movwf	10
  3338  0449  0842               	movf	_WaveGap1Off,w
  3339  044A  000A               	callw
  3340  044B  3184               	pagesel	$
  3341                           
  3342                           ;main.c: 453:                 WaveGap2Off();
  3343  044C  0020               	movlb	0	; select bank0
  3344  044D  083F               	movf	_WaveGap2Off+1,w
  3345  044E  008A               	movwf	10
  3346  044F  083E               	movf	_WaveGap2Off,w
  3347  0450  000A               	callw
  3348  0451  3184               	pagesel	$
  3349                           
  3350                           ;main.c: 454:                 break;
  3351  0452  2C99               	goto	l920
  3352  0453                     l863:	
  3353                           ;main.c: 455:             case 2:
  3354                           
  3355                           
  3356                           ;main.c: 456:                 if(pulse_direction){
  3357  0453  1E7B               	btfss	_pulse_direction/(0+8),_pulse_direction& (0+7)
  3358  0454  2C56               	goto	u1091
  3359  0455  2C57               	goto	u1090
  3360  0456                     u1091:	
  3361  0456  2C69               	goto	l2210
  3362  0457                     u1090:	
  3363  0457                     l2208:	
  3364                           
  3365                           ;main.c: 457:                     if(pulse_wave_in_intensity > pwm_count){
  3366  0457  0838               	movf	_pulse_wave_in_intensity,w
  3367  0458  027D               	subwf	_pwm_count,w
  3368  0459  1803               	skipnc
  3369  045A  2C5C               	goto	u1101
  3370  045B  2C5D               	goto	u1100
  3371  045C                     u1101:	
  3372  045C  2C63               	goto	l875
  3373  045D                     u1100:	
  3374  045D                     l866:	
  3375                           ;main.c: 458:                         do { LATCbits.LATC4 = 1; } while(0);
  3376                           
  3377  045D  0022               	movlb	2	; select bank2
  3378  045E  160E               	bsf	14,4	;volatile
  3379  045F                     l868:	
  3380                           ;main.c: 459:                         do { LATDbits.LATD3 = 1; } while(0);
  3381                           
  3382  045F  158F               	bsf	15,3	;volatile
  3383  0460                     l870:	
  3384                           ;main.c: 460:                         do { LATCbits.LATC3 = 1; } while(0);
  3385                           
  3386  0460  158E               	bsf	14,3	;volatile
  3387  0461                     l872:	
  3388                           ;main.c: 461:                         do { LATCbits.LATC2 = 1; } while(0);
  3389                           
  3390  0461  150E               	bsf	14,2	;volatile
  3391  0462  2C99               	goto	l920
  3392  0463                     l875:	
  3393                           ;main.c: 463:                         do { LATCbits.LATC4 = 0; } while(0);
  3394                           
  3395  0463  0022               	movlb	2	; select bank2
  3396  0464  120E               	bcf	14,4	;volatile
  3397  0465                     l877:	
  3398                           ;main.c: 464:                         do { LATDbits.LATD3 = 0; } while(0);
  3399                           
  3400  0465  118F               	bcf	15,3	;volatile
  3401  0466                     l879:	
  3402                           ;main.c: 465:                         do { LATCbits.LATC3 = 0; } while(0);
  3403                           
  3404  0466  118E               	bcf	14,3	;volatile
  3405  0467                     l881:	
  3406                           ;main.c: 466:                         do { LATCbits.LATC2 = 0; } while(0);
  3407                           
  3408  0467  110E               	bcf	14,2	;volatile
  3409  0468  2C99               	goto	l920
  3410  0469                     l2210:	
  3411                           
  3412                           ;main.c: 469:                     if(pulse_wave_out_intensity > pwm_count){
  3413  0469  0837               	movf	_pulse_wave_out_intensity,w
  3414  046A  027D               	subwf	_pwm_count,w
  3415  046B  1803               	skipnc
  3416  046C  2C6E               	goto	u1111
  3417  046D  2C6F               	goto	u1110
  3418  046E                     u1111:	
  3419  046E  2C75               	goto	l894
  3420  046F                     u1110:	
  3421  046F                     l885:	
  3422                           ;main.c: 470:                         do { LATCbits.LATC4 = 1; } while(0);
  3423                           
  3424  046F  0022               	movlb	2	; select bank2
  3425  0470  160E               	bsf	14,4	;volatile
  3426  0471                     l887:	
  3427                           ;main.c: 471:                         do { LATDbits.LATD3 = 1; } while(0);
  3428                           
  3429  0471  158F               	bsf	15,3	;volatile
  3430  0472                     l889:	
  3431                           ;main.c: 472:                         do { LATCbits.LATC3 = 1; } while(0);
  3432                           
  3433  0472  158E               	bsf	14,3	;volatile
  3434  0473                     l891:	
  3435                           ;main.c: 473:                         do { LATCbits.LATC2 = 1; } while(0);
  3436                           
  3437  0473  150E               	bsf	14,2	;volatile
  3438  0474  2C99               	goto	l920
  3439  0475                     l894:	
  3440                           ;main.c: 475:                         do { LATCbits.LATC4 = 0; } while(0);
  3441                           
  3442  0475  0022               	movlb	2	; select bank2
  3443  0476  120E               	bcf	14,4	;volatile
  3444  0477                     l896:	
  3445                           ;main.c: 476:                         do { LATDbits.LATD3 = 0; } while(0);
  3446                           
  3447  0477  118F               	bcf	15,3	;volatile
  3448  0478                     l898:	
  3449                           ;main.c: 477:                         do { LATCbits.LATC3 = 0; } while(0);
  3450                           
  3451  0478  118E               	bcf	14,3	;volatile
  3452  0479                     l900:	
  3453                           ;main.c: 478:                         do { LATCbits.LATC2 = 0; } while(0);
  3454                           
  3455  0479  110E               	bcf	14,2	;volatile
  3456  047A  2C99               	goto	l920
  3457  047B                     l903:	
  3458                           ;main.c: 484:                 do { LATCbits.LATC4 = 0; } while(0);
  3459                           
  3460  047B  0022               	movlb	2	; select bank2
  3461  047C  120E               	bcf	14,4	;volatile
  3462  047D                     l905:	
  3463                           ;main.c: 485:                 do { LATDbits.LATD3 = 0; } while(0);
  3464                           
  3465  047D  118F               	bcf	15,3	;volatile
  3466  047E                     l907:	
  3467                           ;main.c: 486:                 do { LATCbits.LATC3 = 0; } while(0);
  3468                           
  3469  047E  118E               	bcf	14,3	;volatile
  3470  047F                     l909:	
  3471                           ;main.c: 487:                 do { LATCbits.LATC2 = 0; } while(0);
  3472                           
  3473  047F  110E               	bcf	14,2	;volatile
  3474  0480  2C99               	goto	l920
  3475  0481                     l2214:	
  3476  0481  082A               	movf	_massage_mode,w
  3477  0482  00DD               	movwf	??_Massage
  3478  0483  01DE               	clrf	??_Massage+1
  3479                           
  3480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3481                           ; Switch size 1, requested type "simple"
  3482                           ; Number of cases is 1, Range of values is 0 to 0
  3483                           ; switch strategies available:
  3484                           ; Name         Instructions Cycles
  3485                           ; simple_byte            4     3 (average)
  3486                           ; direct_byte            8     6 (fixed)
  3487                           ; jumptable            260     6 (fixed)
  3488                           ;	Chosen strategy is simple_byte
  3489  0484  085E               	movf	??_Massage+1,w
  3490  0485  3A00               	xorlw	0	; case 0
  3491  0486  1903               	skipnz
  3492  0487  2C89               	goto	l2768
  3493  0488  2C7B               	goto	l903
  3494  0489                     l2768:	
  3495                           
  3496                           ; Switch size 1, requested type "simple"
  3497                           ; Number of cases is 3, Range of values is 0 to 2
  3498                           ; switch strategies available:
  3499                           ; Name         Instructions Cycles
  3500                           ; simple_byte           10     6 (average)
  3501                           ; direct_byte           12     6 (fixed)
  3502                           ; jumptable            260     6 (fixed)
  3503                           ;	Chosen strategy is simple_byte
  3504  0489  085D               	movf	??_Massage,w
  3505  048A  3A00               	xorlw	0	; case 0
  3506  048B  1903               	skipnz
  3507  048C  2C17               	goto	l2200
  3508  048D  3A01               	xorlw	1	; case 1
  3509  048E  1903               	skipnz
  3510  048F  2C29               	goto	l2202
  3511  0490  3A03               	xorlw	3	; case 2
  3512  0491  1903               	skipnz
  3513  0492  2C53               	goto	l863
  3514  0493  2C7B               	goto	l903
  3515  0494                     l912:	
  3516                           ;main.c: 491:         do { LATCbits.LATC4 = 0; } while(0);
  3517                           
  3518  0494  0022               	movlb	2	; select bank2
  3519  0495  120E               	bcf	14,4	;volatile
  3520  0496                     l914:	
  3521                           ;main.c: 492:         do { LATDbits.LATD3 = 0; } while(0);
  3522                           
  3523  0496  118F               	bcf	15,3	;volatile
  3524  0497                     l916:	
  3525                           ;main.c: 493:         do { LATCbits.LATC3 = 0; } while(0);
  3526                           
  3527  0497  118E               	bcf	14,3	;volatile
  3528  0498                     l918:	
  3529                           ;main.c: 494:         do { LATCbits.LATC2 = 0; } while(0);
  3530                           
  3531  0498  110E               	bcf	14,2	;volatile
  3532  0499                     l920:	
  3533  0499  0008               	return
  3534  049A                     __end_of_Massage:	
  3535                           
  3536                           	psect	text10
  3537  05A1                     __ptext10:	
  3538 ;; *************** function _Z3SetLow *****************
  3539 ;; Defined at:
  3540 ;;		line 233 in file "mcc_generated_files/tmr0.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		None
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3554 ;;      Params:         0       0       0       0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    3
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_Massage
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           
  3569                           ;psect for function _Z3SetLow
  3570  05A1                     _Z3SetLow:	
  3571  05A1                     l163:	
  3572                           ;incstack = 0
  3573                           ; Regs used in _Z3SetLow: []
  3574                           ;mcc_generated_files/tmr0.c: 234:     do { LATCbits.LATC3 = 0; } while(0);
  3575                           
  3576  05A1  0022               	movlb	2	; select bank2
  3577  05A2  118E               	bcf	14,3	;volatile
  3578  05A3                     l165:	
  3579  05A3  0008               	return
  3580  05A4                     __end_of_Z3SetLow:	
  3581                           
  3582                           	psect	text11
  3583  05A4                     __ptext11:	
  3584 ;; *************** function _Z1SetLow *****************
  3585 ;; Defined at:
  3586 ;;		line 217 in file "mcc_generated_files/tmr0.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		None
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3600 ;;      Params:         0       0       0       0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    3
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_Massage
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function _Z1SetLow
  3616  05A4                     _Z1SetLow:	
  3617  05A4                     l143:	
  3618                           ;incstack = 0
  3619                           ; Regs used in _Z1SetLow: []
  3620                           ;mcc_generated_files/tmr0.c: 218:     do { LATCbits.LATC4 = 0; } while(0);
  3621                           
  3622  05A4  0022               	movlb	2	; select bank2
  3623  05A5  120E               	bcf	14,4	;volatile
  3624  05A6                     l145:	
  3625  05A6  0008               	return
  3626  05A7                     __end_of_Z1SetLow:	
  3627                           
  3628                           	psect	text12
  3629  05A7                     __ptext12:	
  3630 ;; *************** function _Z2SetLow *****************
  3631 ;; Defined at:
  3632 ;;		line 225 in file "mcc_generated_files/tmr0.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		None
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3646 ;;      Params:         0       0       0       0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    3
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_Massage
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function _Z2SetLow
  3662  05A7                     _Z2SetLow:	
  3663  05A7                     l153:	
  3664                           ;incstack = 0
  3665                           ; Regs used in _Z2SetLow: []
  3666                           ;mcc_generated_files/tmr0.c: 226:     do { LATDbits.LATD3 = 0; } while(0);
  3667                           
  3668  05A7  0022               	movlb	2	; select bank2
  3669  05A8  118F               	bcf	15,3	;volatile
  3670  05A9                     l155:	
  3671  05A9  0008               	return
  3672  05AA                     __end_of_Z2SetLow:	
  3673                           
  3674                           	psect	text13
  3675  05AA                     __ptext13:	
  3676 ;; *************** function _Z4SetLow *****************
  3677 ;; Defined at:
  3678 ;;		line 241 in file "mcc_generated_files/tmr0.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		None
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3692 ;;      Params:         0       0       0       0       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0       0
  3695 ;;      Totals:         0       0       0       0       0       0       0       0
  3696 ;;Total ram usage:        0 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    3
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_Massage
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _Z4SetLow
  3708  05AA                     _Z4SetLow:	
  3709  05AA                     l173:	
  3710                           ;incstack = 0
  3711                           ; Regs used in _Z4SetLow: []
  3712                           ;mcc_generated_files/tmr0.c: 242:     do { LATCbits.LATC2 = 0; } while(0);
  3713                           
  3714  05AA  0022               	movlb	2	; select bank2
  3715  05AB  110E               	bcf	14,2	;volatile
  3716  05AC                     l175:	
  3717  05AC  0008               	return
  3718  05AD                     __end_of_Z4SetLow:	
  3719                           
  3720                           	psect	text14
  3721  05AD                     __ptext14:	
  3722 ;; *************** function _Z3SetHigh *****************
  3723 ;; Defined at:
  3724 ;;		line 229 in file "mcc_generated_files/tmr0.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		None
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3738 ;;      Params:         0       0       0       0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0
  3741 ;;      Totals:         0       0       0       0       0       0       0       0
  3742 ;;Total ram usage:        0 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    3
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_Massage
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           
  3753                           ;psect for function _Z3SetHigh
  3754  05AD                     _Z3SetHigh:	
  3755  05AD                     l158:	
  3756                           ;incstack = 0
  3757                           ; Regs used in _Z3SetHigh: []
  3758                           ;mcc_generated_files/tmr0.c: 230:     do { LATCbits.LATC3 = 1; } while(0);
  3759                           
  3760  05AD  0022               	movlb	2	; select bank2
  3761  05AE  158E               	bsf	14,3	;volatile
  3762  05AF                     l160:	
  3763  05AF  0008               	return
  3764  05B0                     __end_of_Z3SetHigh:	
  3765                           
  3766                           	psect	text15
  3767  05B0                     __ptext15:	
  3768 ;; *************** function _Z1SetHigh *****************
  3769 ;; Defined at:
  3770 ;;		line 213 in file "mcc_generated_files/tmr0.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		None
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3784 ;;      Params:         0       0       0       0       0       0       0       0
  3785 ;;      Locals:         0       0       0       0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0       0
  3787 ;;      Totals:         0       0       0       0       0       0       0       0
  3788 ;;Total ram usage:        0 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    3
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_Massage
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _Z1SetHigh
  3800  05B0                     _Z1SetHigh:	
  3801  05B0                     l138:	
  3802                           ;incstack = 0
  3803                           ; Regs used in _Z1SetHigh: []
  3804                           ;mcc_generated_files/tmr0.c: 214:     do { LATCbits.LATC4 = 1; } while(0);
  3805                           
  3806  05B0  0022               	movlb	2	; select bank2
  3807  05B1  160E               	bsf	14,4	;volatile
  3808  05B2                     l140:	
  3809  05B2  0008               	return
  3810  05B3                     __end_of_Z1SetHigh:	
  3811                           
  3812                           	psect	text16
  3813  05B3                     __ptext16:	
  3814 ;; *************** function _Z2SetHigh *****************
  3815 ;; Defined at:
  3816 ;;		line 221 in file "mcc_generated_files/tmr0.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		None
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3830 ;;      Params:         0       0       0       0       0       0       0       0
  3831 ;;      Locals:         0       0       0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0
  3833 ;;      Totals:         0       0       0       0       0       0       0       0
  3834 ;;Total ram usage:        0 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    3
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_Massage
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           
  3845                           ;psect for function _Z2SetHigh
  3846  05B3                     _Z2SetHigh:	
  3847  05B3                     l148:	
  3848                           ;incstack = 0
  3849                           ; Regs used in _Z2SetHigh: []
  3850                           ;mcc_generated_files/tmr0.c: 222:     do { LATDbits.LATD3 = 1; } while(0);
  3851                           
  3852  05B3  0022               	movlb	2	; select bank2
  3853  05B4  158F               	bsf	15,3	;volatile
  3854  05B5                     l150:	
  3855  05B5  0008               	return
  3856  05B6                     __end_of_Z2SetHigh:	
  3857                           
  3858                           	psect	text17
  3859  05B6                     __ptext17:	
  3860 ;; *************** function _Z4SetHigh *****************
  3861 ;; Defined at:
  3862 ;;		line 237 in file "mcc_generated_files/tmr0.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		None
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3876 ;;      Params:         0       0       0       0       0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0
  3879 ;;      Totals:         0       0       0       0       0       0       0       0
  3880 ;;Total ram usage:        0 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    3
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_Massage
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _Z4SetHigh
  3892  05B6                     _Z4SetHigh:	
  3893  05B6                     l168:	
  3894                           ;incstack = 0
  3895                           ; Regs used in _Z4SetHigh: []
  3896                           ;mcc_generated_files/tmr0.c: 238:     do { LATCbits.LATC2 = 1; } while(0);
  3897                           
  3898  05B6  0022               	movlb	2	; select bank2
  3899  05B7  150E               	bsf	14,2	;volatile
  3900  05B8                     l170:	
  3901  05B8  0008               	return
  3902  05B9                     __end_of_Z4SetHigh:	
  3903                           
  3904                           	psect	text18
  3905  0165                     __ptext18:	
  3906 ;; *************** function _Debounce *****************
  3907 ;; Defined at:
  3908 ;;		line 98 in file "main.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3922 ;;      Params:         0       0       0       0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0       0       0       0
  3924 ;;      Temps:          0       1       0       0       0       0       0       0
  3925 ;;      Totals:         0       1       0       0       0       0       0       0
  3926 ;;Total ram usage:        1 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    3
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function _Debounce
  3938  0165                     _Debounce:	
  3939  0165                     l2372:	
  3940                           ;incstack = 0
  3941                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  3942                           
  3943                           
  3944                           ;main.c: 99:     if(!PORTAbits.RA2){
  3945  0165  0020               	movlb	0	; select bank0
  3946  0166  190C               	btfsc	12,2	;volatile
  3947  0167  2969               	goto	u1411
  3948  0168  296A               	goto	u1410
  3949  0169                     u1411:	
  3950  0169  2974               	goto	l2378
  3951  016A                     u1410:	
  3952  016A                     l2374:	
  3953                           
  3954                           ;main.c: 100:         if(lift_open_debounce){
  3955  016A  0835               	movf	_lift_open_debounce,w
  3956  016B  1903               	btfsc	3,2
  3957  016C  296E               	goto	u1421
  3958  016D  296F               	goto	u1420
  3959  016E                     u1421:	
  3960  016E  2972               	goto	l561
  3961  016F                     u1420:	
  3962  016F                     l2376:	
  3963                           
  3964                           ;main.c: 101:             lift_open_debounce--;
  3965  016F  3001               	movlw	1
  3966  0170  02B5               	subwf	_lift_open_debounce,f
  3967                           
  3968                           ;main.c: 102:         }else{
  3969  0171  2979               	goto	l2382
  3970  0172                     l561:	
  3971                           
  3972                           ;main.c: 103:             lift_open_state = 1;
  3973  0172  15FB               	bsf	_lift_open_state/(0+8),_lift_open_state& (0+7)
  3974  0173  2979               	goto	l2382
  3975  0174                     l2378:	
  3976                           
  3977                           ;main.c: 106:         lift_open_debounce = 30;
  3978  0174  301E               	movlw	30
  3979  0175  00DD               	movwf	??_Debounce
  3980  0176  085D               	movf	??_Debounce,w
  3981  0177  00B5               	movwf	_lift_open_debounce
  3982  0178                     l2380:	
  3983                           
  3984                           ;main.c: 107:         lift_open_state = 0;
  3985  0178  11FB               	bcf	_lift_open_state/(0+8),_lift_open_state& (0+7)
  3986  0179                     l2382:	
  3987                           
  3988                           ;main.c: 110:     if(!PORTEbits.RE2){
  3989  0179  1910               	btfsc	16,2	;volatile
  3990  017A  297C               	goto	u1431
  3991  017B  297D               	goto	u1430
  3992  017C                     u1431:	
  3993  017C  2987               	goto	l2388
  3994  017D                     u1430:	
  3995  017D                     l2384:	
  3996                           
  3997                           ;main.c: 111:         if(lift_close_debounce){
  3998  017D  0834               	movf	_lift_close_debounce,w
  3999  017E  1903               	btfsc	3,2
  4000  017F  2981               	goto	u1441
  4001  0180  2982               	goto	u1440
  4002  0181                     u1441:	
  4003  0181  2985               	goto	l565
  4004  0182                     u1440:	
  4005  0182                     l2386:	
  4006                           
  4007                           ;main.c: 112:             lift_close_debounce--;
  4008  0182  3001               	movlw	1
  4009  0183  02B4               	subwf	_lift_close_debounce,f
  4010                           
  4011                           ;main.c: 113:         }else{
  4012  0184  298C               	goto	l2392
  4013  0185                     l565:	
  4014                           
  4015                           ;main.c: 114:             lift_close_state = 1;
  4016  0185  157B               	bsf	_lift_close_state/(0+8),_lift_close_state& (0+7)
  4017  0186  298C               	goto	l2392
  4018  0187                     l2388:	
  4019                           
  4020                           ;main.c: 117:         lift_close_debounce = 30;
  4021  0187  301E               	movlw	30
  4022  0188  00DD               	movwf	??_Debounce
  4023  0189  085D               	movf	??_Debounce,w
  4024  018A  00B4               	movwf	_lift_close_debounce
  4025  018B                     l2390:	
  4026                           
  4027                           ;main.c: 118:         lift_close_state = 0;
  4028  018B  117B               	bcf	_lift_close_state/(0+8),_lift_close_state& (0+7)
  4029  018C                     l2392:	
  4030                           
  4031                           ;main.c: 121:     if(!PORTBbits.RB2){
  4032  018C  190D               	btfsc	13,2	;volatile
  4033  018D  298F               	goto	u1451
  4034  018E  2990               	goto	u1450
  4035  018F                     u1451:	
  4036  018F  299A               	goto	l2398
  4037  0190                     u1450:	
  4038  0190                     l2394:	
  4039                           
  4040                           ;main.c: 122:         if(back_open_debounce){
  4041  0190  0833               	movf	_back_open_debounce,w
  4042  0191  1903               	btfsc	3,2
  4043  0192  2994               	goto	u1461
  4044  0193  2995               	goto	u1460
  4045  0194                     u1461:	
  4046  0194  2998               	goto	l569
  4047  0195                     u1460:	
  4048  0195                     l2396:	
  4049                           
  4050                           ;main.c: 123:             back_open_debounce--;
  4051  0195  3001               	movlw	1
  4052  0196  02B3               	subwf	_back_open_debounce,f
  4053                           
  4054                           ;main.c: 124:         }else{
  4055  0197  299F               	goto	l2402
  4056  0198                     l569:	
  4057                           
  4058                           ;main.c: 125:             back_open_state = 1;
  4059  0198  14FB               	bsf	_back_open_state/(0+8),_back_open_state& (0+7)
  4060  0199  299F               	goto	l2402
  4061  019A                     l2398:	
  4062                           
  4063                           ;main.c: 128:         back_open_debounce = 30;
  4064  019A  301E               	movlw	30
  4065  019B  00DD               	movwf	??_Debounce
  4066  019C  085D               	movf	??_Debounce,w
  4067  019D  00B3               	movwf	_back_open_debounce
  4068  019E                     l2400:	
  4069                           
  4070                           ;main.c: 129:         back_open_state = 0;
  4071  019E  10FB               	bcf	_back_open_state/(0+8),_back_open_state& (0+7)
  4072  019F                     l2402:	
  4073                           
  4074                           ;main.c: 132:     if(!PORTDbits.RD7){
  4075  019F  1B8F               	btfsc	15,7	;volatile
  4076  01A0  29A2               	goto	u1471
  4077  01A1  29A3               	goto	u1470
  4078  01A2                     u1471:	
  4079  01A2  29AD               	goto	l2408
  4080  01A3                     u1470:	
  4081  01A3                     l2404:	
  4082                           
  4083                           ;main.c: 133:         if(back_close_debounce){
  4084  01A3  0832               	movf	_back_close_debounce,w
  4085  01A4  1903               	btfsc	3,2
  4086  01A5  29A7               	goto	u1481
  4087  01A6  29A8               	goto	u1480
  4088  01A7                     u1481:	
  4089  01A7  29AB               	goto	l573
  4090  01A8                     u1480:	
  4091  01A8                     l2406:	
  4092                           
  4093                           ;main.c: 134:             back_close_debounce--;
  4094  01A8  3001               	movlw	1
  4095  01A9  02B2               	subwf	_back_close_debounce,f
  4096                           
  4097                           ;main.c: 135:         }else{
  4098  01AA  29B2               	goto	l2412
  4099  01AB                     l573:	
  4100                           
  4101                           ;main.c: 136:             back_close_state = 1;
  4102  01AB  147B               	bsf	_back_close_state/(0+8),_back_close_state& (0+7)
  4103  01AC  29B2               	goto	l2412
  4104  01AD                     l2408:	
  4105                           
  4106                           ;main.c: 139:         back_close_debounce = 30;
  4107  01AD  301E               	movlw	30
  4108  01AE  00DD               	movwf	??_Debounce
  4109  01AF  085D               	movf	??_Debounce,w
  4110  01B0  00B2               	movwf	_back_close_debounce
  4111  01B1                     l2410:	
  4112                           
  4113                           ;main.c: 140:         back_close_state = 0;
  4114  01B1  107B               	bcf	_back_close_state/(0+8),_back_close_state& (0+7)
  4115  01B2                     l2412:	
  4116                           
  4117                           ;main.c: 143:     if(!PORTBbits.RB5){
  4118  01B2  1A8D               	btfsc	13,5	;volatile
  4119  01B3  29B5               	goto	u1491
  4120  01B4  29B6               	goto	u1490
  4121  01B5                     u1491:	
  4122  01B5  29D3               	goto	l2426
  4123  01B6                     u1490:	
  4124  01B6                     l2414:	
  4125                           
  4126                           ;main.c: 144:         if(heat1_debounce){
  4127  01B6  0831               	movf	_heat1_debounce,w
  4128  01B7  1903               	btfsc	3,2
  4129  01B8  29BA               	goto	u1501
  4130  01B9  29BB               	goto	u1500
  4131  01BA                     u1501:	
  4132  01BA  29D7               	goto	l2428
  4133  01BB                     u1500:	
  4134  01BB                     l2416:	
  4135                           
  4136                           ;main.c: 145:             heat1_debounce--;
  4137  01BB  3001               	movlw	1
  4138  01BC  02B1               	subwf	_heat1_debounce,f
  4139                           
  4140                           ;main.c: 146:             if(!heat1_debounce){
  4141  01BD  0831               	movf	_heat1_debounce,w
  4142  01BE  1D03               	btfss	3,2
  4143  01BF  29C1               	goto	u1511
  4144  01C0  29C2               	goto	u1510
  4145  01C1                     u1511:	
  4146  01C1  29D7               	goto	l2428
  4147  01C2                     u1510:	
  4148  01C2                     l2418:	
  4149                           
  4150                           ;main.c: 147:                 heat1_timer = 1800;
  4151  01C2  3008               	movlw	8
  4152  01C3  00A4               	movwf	_heat1_timer
  4153  01C4  3007               	movlw	7
  4154  01C5  00A5               	movwf	_heat1_timer+1
  4155  01C6                     l2420:	
  4156                           
  4157                           ;main.c: 148:                 heat1_state++;
  4158  01C6  3001               	movlw	1
  4159  01C7  00DD               	movwf	??_Debounce
  4160  01C8  085D               	movf	??_Debounce,w
  4161  01C9  07AC               	addwf	_heat1_state,f
  4162  01CA                     l2422:	
  4163                           
  4164                           ;main.c: 149:                 if(heat1_state > 2){
  4165  01CA  3003               	movlw	3
  4166  01CB  022C               	subwf	_heat1_state,w
  4167  01CC  1C03               	skipc
  4168  01CD  29CF               	goto	u1521
  4169  01CE  29D0               	goto	u1520
  4170  01CF                     u1521:	
  4171  01CF  29D2               	goto	l577
  4172  01D0                     u1520:	
  4173  01D0                     l2424:	
  4174                           
  4175                           ;main.c: 150:                     heat1_state = 0;
  4176  01D0  01AC               	clrf	_heat1_state
  4177  01D1  29D7               	goto	l2428
  4178  01D2                     l577:	
  4179                           ;main.c: 153:         }
  4180                           
  4181                           
  4182                           ;main.c: 154:     }else{
  4183  01D2  29D7               	goto	l2428
  4184  01D3                     l2426:	
  4185                           
  4186                           ;main.c: 155:         heat1_debounce = 30;
  4187  01D3  301E               	movlw	30
  4188  01D4  00DD               	movwf	??_Debounce
  4189  01D5  085D               	movf	??_Debounce,w
  4190  01D6  00B1               	movwf	_heat1_debounce
  4191  01D7                     l2428:	
  4192                           
  4193                           ;main.c: 157:     if(!PORTEbits.RE3){
  4194  01D7  1990               	btfsc	16,3	;volatile
  4195  01D8  29DA               	goto	u1531
  4196  01D9  29DB               	goto	u1530
  4197  01DA                     u1531:	
  4198  01DA  29F8               	goto	l2442
  4199  01DB                     u1530:	
  4200  01DB                     l2430:	
  4201                           
  4202                           ;main.c: 158:         if(heat2_debounce){
  4203  01DB  0830               	movf	_heat2_debounce,w
  4204  01DC  1903               	btfsc	3,2
  4205  01DD  29DF               	goto	u1541
  4206  01DE  29E0               	goto	u1540
  4207  01DF                     u1541:	
  4208  01DF  29FC               	goto	l2444
  4209  01E0                     u1540:	
  4210  01E0                     l2432:	
  4211                           
  4212                           ;main.c: 159:             heat2_debounce--;
  4213  01E0  3001               	movlw	1
  4214  01E1  02B0               	subwf	_heat2_debounce,f
  4215                           
  4216                           ;main.c: 160:             if(!heat2_debounce){
  4217  01E2  0830               	movf	_heat2_debounce,w
  4218  01E3  1D03               	btfss	3,2
  4219  01E4  29E6               	goto	u1551
  4220  01E5  29E7               	goto	u1550
  4221  01E6                     u1551:	
  4222  01E6  29FC               	goto	l2444
  4223  01E7                     u1550:	
  4224  01E7                     l2434:	
  4225                           
  4226                           ;main.c: 161:                 heat2_timer = 1800;
  4227  01E7  3008               	movlw	8
  4228  01E8  00A2               	movwf	_heat2_timer
  4229  01E9  3007               	movlw	7
  4230  01EA  00A3               	movwf	_heat2_timer+1
  4231  01EB                     l2436:	
  4232                           
  4233                           ;main.c: 162:                 heat2_state++;
  4234  01EB  3001               	movlw	1
  4235  01EC  00DD               	movwf	??_Debounce
  4236  01ED  085D               	movf	??_Debounce,w
  4237  01EE  07AB               	addwf	_heat2_state,f
  4238  01EF                     l2438:	
  4239                           
  4240                           ;main.c: 163:                 if(heat2_state > 2){
  4241  01EF  3003               	movlw	3
  4242  01F0  022B               	subwf	_heat2_state,w
  4243  01F1  1C03               	skipc
  4244  01F2  29F4               	goto	u1561
  4245  01F3  29F5               	goto	u1560
  4246  01F4                     u1561:	
  4247  01F4  29F7               	goto	l582
  4248  01F5                     u1560:	
  4249  01F5                     l2440:	
  4250                           
  4251                           ;main.c: 164:                     heat2_state = 0;
  4252  01F5  01AB               	clrf	_heat2_state
  4253  01F6  29FC               	goto	l2444
  4254  01F7                     l582:	
  4255                           ;main.c: 167:         }
  4256                           
  4257                           
  4258                           ;main.c: 168:     }else{
  4259  01F7  29FC               	goto	l2444
  4260  01F8                     l2442:	
  4261                           
  4262                           ;main.c: 169:         heat2_debounce = 30;
  4263  01F8  301E               	movlw	30
  4264  01F9  00DD               	movwf	??_Debounce
  4265  01FA  085D               	movf	??_Debounce,w
  4266  01FB  00B0               	movwf	_heat2_debounce
  4267  01FC                     l2444:	
  4268                           
  4269                           ;main.c: 172:     if(!PORTAbits.RA3){
  4270  01FC  198C               	btfsc	12,3	;volatile
  4271  01FD  29FF               	goto	u1571
  4272  01FE  2A00               	goto	u1570
  4273  01FF                     u1571:	
  4274  01FF  2A0A               	goto	l2450
  4275  0200                     u1570:	
  4276  0200                     l2446:	
  4277                           
  4278                           ;main.c: 173:         if(lock_debounce){
  4279  0200  082D               	movf	_lock_debounce,w
  4280  0201  1903               	btfsc	3,2
  4281  0202  2A04               	goto	u1581
  4282  0203  2A05               	goto	u1580
  4283  0204                     u1581:	
  4284  0204  2A08               	goto	l587
  4285  0205                     u1580:	
  4286  0205                     l2448:	
  4287                           
  4288                           ;main.c: 174:             lock_debounce--;
  4289  0205  3001               	movlw	1
  4290  0206  02AD               	subwf	_lock_debounce,f
  4291                           
  4292                           ;main.c: 175:         }else{
  4293  0207  2A0F               	goto	l2454
  4294  0208                     l587:	
  4295                           
  4296                           ;main.c: 176:             lock_btn_state = 1;
  4297  0208  17FB               	bsf	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  4298  0209  2A0F               	goto	l2454
  4299  020A                     l2450:	
  4300                           
  4301                           ;main.c: 179:         lock_debounce = 30;
  4302  020A  301E               	movlw	30
  4303  020B  00DD               	movwf	??_Debounce
  4304  020C  085D               	movf	??_Debounce,w
  4305  020D  00AD               	movwf	_lock_debounce
  4306  020E                     l2452:	
  4307                           
  4308                           ;main.c: 180:         lock_btn_state = 0;
  4309  020E  13FB               	bcf	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  4310  020F                     l2454:	
  4311                           
  4312                           ;main.c: 183:     if(!PORTDbits.RD2){
  4313  020F  190F               	btfsc	15,2	;volatile
  4314  0210  2A12               	goto	u1591
  4315  0211  2A13               	goto	u1590
  4316  0212                     u1591:	
  4317  0212  2A39               	goto	l590
  4318  0213                     u1590:	
  4319  0213                     l2456:	
  4320                           
  4321                           ;main.c: 184:         if(mode_debounce){
  4322  0213  082E               	movf	_mode_debounce,w
  4323  0214  1903               	btfsc	3,2
  4324  0215  2A17               	goto	u1601
  4325  0216  2A18               	goto	u1600
  4326  0217                     u1601:	
  4327  0217  2A3E               	goto	l2476
  4328  0218                     u1600:	
  4329  0218                     l2458:	
  4330                           
  4331                           ;main.c: 185:             mode_debounce--;
  4332  0218  3001               	movlw	1
  4333  0219  02AE               	subwf	_mode_debounce,f
  4334                           
  4335                           ;main.c: 186:             if(!mode_debounce){
  4336  021A  082E               	movf	_mode_debounce,w
  4337  021B  1D03               	btfss	3,2
  4338  021C  2A1E               	goto	u1611
  4339  021D  2A1F               	goto	u1610
  4340  021E                     u1611:	
  4341  021E  2A3E               	goto	l2476
  4342  021F                     u1610:	
  4343  021F                     l2460:	
  4344                           
  4345                           ;main.c: 187:                 massage_timer = 1200;
  4346  021F  30B0               	movlw	176
  4347  0220  00A0               	movwf	_massage_timer
  4348  0221  3004               	movlw	4
  4349  0222  00A1               	movwf	_massage_timer+1
  4350  0223                     l2462:	
  4351                           
  4352                           ;main.c: 188:                 mode_btn_state = 1;
  4353  0223  14E4               	bsf	_mode_btn_state/(0+8),_mode_btn_state& (0+7)
  4354  0224                     l2464:	
  4355                           
  4356                           ;main.c: 189:                 if(!massage_intensity_setting){
  4357  0224  087C               	movf	_massage_intensity_setting,w
  4358  0225  1D03               	btfss	3,2
  4359  0226  2A28               	goto	u1621
  4360  0227  2A29               	goto	u1620
  4361  0228                     u1621:	
  4362  0228  2A2C               	goto	l2468
  4363  0229                     u1620:	
  4364  0229                     l2466:	
  4365                           
  4366                           ;main.c: 190:                     massage_intensity_setting = 1;
  4367  0229  01FC               	clrf	_massage_intensity_setting
  4368  022A  0AFC               	incf	_massage_intensity_setting,f
  4369                           
  4370                           ;main.c: 191:                 }else{
  4371  022B  2A3E               	goto	l2476
  4372  022C                     l2468:	
  4373                           
  4374                           ;main.c: 192:                     massage_mode++;
  4375  022C  3001               	movlw	1
  4376  022D  00DD               	movwf	??_Debounce
  4377  022E  085D               	movf	??_Debounce,w
  4378  022F  07AA               	addwf	_massage_mode,f
  4379  0230                     l2470:	
  4380                           
  4381                           ;main.c: 193:                     if(massage_mode > 2){
  4382  0230  3003               	movlw	3
  4383  0231  022A               	subwf	_massage_mode,w
  4384  0232  1C03               	skipc
  4385  0233  2A35               	goto	u1631
  4386  0234  2A36               	goto	u1630
  4387  0235                     u1631:	
  4388  0235  2A38               	goto	l591
  4389  0236                     u1630:	
  4390  0236                     l2472:	
  4391                           
  4392                           ;main.c: 194:                         massage_mode = 0;
  4393  0236  01AA               	clrf	_massage_mode
  4394  0237  2A3E               	goto	l2476
  4395  0238                     l591:	
  4396                           ;main.c: 198:         }
  4397                           
  4398                           
  4399                           ;main.c: 199:     }else{
  4400  0238  2A3E               	goto	l2476
  4401  0239                     l590:	
  4402                           
  4403                           ;main.c: 200:         mode_btn_state = 0;
  4404  0239  10E4               	bcf	_mode_btn_state/(0+8),_mode_btn_state& (0+7)
  4405  023A                     l2474:	
  4406                           
  4407                           ;main.c: 201:         mode_debounce = 30;
  4408  023A  301E               	movlw	30
  4409  023B  00DD               	movwf	??_Debounce
  4410  023C  085D               	movf	??_Debounce,w
  4411  023D  00AE               	movwf	_mode_debounce
  4412  023E                     l2476:	
  4413                           
  4414                           ;main.c: 204:     if(!PORTCbits.RC7){
  4415  023E  1B8E               	btfsc	14,7	;volatile
  4416  023F  2A41               	goto	u1641
  4417  0240  2A42               	goto	u1640
  4418  0241                     u1641:	
  4419  0241  2A60               	goto	l597
  4420  0242                     u1640:	
  4421  0242                     l2478:	
  4422                           
  4423                           ;main.c: 205:         if(intensity_debounce){
  4424  0242  082F               	movf	_intensity_debounce,w
  4425  0243  1903               	btfsc	3,2
  4426  0244  2A46               	goto	u1651
  4427  0245  2A47               	goto	u1650
  4428  0246                     u1651:	
  4429  0246  2A65               	goto	l602
  4430  0247                     u1650:	
  4431  0247                     l2480:	
  4432                           
  4433                           ;main.c: 206:             intensity_debounce--;
  4434  0247  3001               	movlw	1
  4435  0248  02AF               	subwf	_intensity_debounce,f
  4436                           
  4437                           ;main.c: 207:             if(!intensity_debounce){
  4438  0249  082F               	movf	_intensity_debounce,w
  4439  024A  1D03               	btfss	3,2
  4440  024B  2A4D               	goto	u1661
  4441  024C  2A4E               	goto	u1660
  4442  024D                     u1661:	
  4443  024D  2A65               	goto	l602
  4444  024E                     u1660:	
  4445  024E                     l2482:	
  4446                           
  4447                           ;main.c: 208:                 massage_timer = 1200;
  4448  024E  30B0               	movlw	176
  4449  024F  00A0               	movwf	_massage_timer
  4450  0250  3004               	movlw	4
  4451  0251  00A1               	movwf	_massage_timer+1
  4452  0252                     l2484:	
  4453                           
  4454                           ;main.c: 209:                 intensity_btn_state = 1;
  4455  0252  1464               	bsf	_intensity_btn_state/(0+8),_intensity_btn_state& (0+7)
  4456  0253                     l2486:	
  4457                           
  4458                           ;main.c: 210:                 massage_intensity_setting++;
  4459  0253  3001               	movlw	1
  4460  0254  00DD               	movwf	??_Debounce
  4461  0255  085D               	movf	??_Debounce,w
  4462  0256  07FC               	addwf	_massage_intensity_setting,f
  4463  0257                     l2488:	
  4464                           
  4465                           ;main.c: 211:                 if(massage_intensity_setting > 3){
  4466  0257  3004               	movlw	4
  4467  0258  027C               	subwf	_massage_intensity_setting,w
  4468  0259  1C03               	skipc
  4469  025A  2A5C               	goto	u1671
  4470  025B  2A5D               	goto	u1670
  4471  025C                     u1671:	
  4472  025C  2A5F               	goto	l598
  4473  025D                     u1670:	
  4474  025D                     l2490:	
  4475                           
  4476                           ;main.c: 212:                     massage_intensity_setting = 0;
  4477  025D  01FC               	clrf	_massage_intensity_setting
  4478  025E  2A65               	goto	l602
  4479  025F                     l598:	
  4480                           ;main.c: 215:         }
  4481                           
  4482                           
  4483                           ;main.c: 216:     }else{
  4484  025F  2A65               	goto	l602
  4485  0260                     l597:	
  4486                           
  4487                           ;main.c: 217:         intensity_btn_state = 0;
  4488  0260  1064               	bcf	_intensity_btn_state/(0+8),_intensity_btn_state& (0+7)
  4489  0261                     l2492:	
  4490                           
  4491                           ;main.c: 218:         intensity_debounce = 30;
  4492  0261  301E               	movlw	30
  4493  0262  00DD               	movwf	??_Debounce
  4494  0263  085D               	movf	??_Debounce,w
  4495  0264  00AF               	movwf	_intensity_debounce
  4496  0265                     l602:	
  4497  0265  0008               	return
  4498  0266                     __end_of_Debounce:	
  4499                           
  4500                           	psect	intentry
  4501  0004                     __pintentry:	
  4502 ;; *************** function _INTERRUPT_InterruptManager *****************
  4503 ;; Defined at:
  4504 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, pclath, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4518 ;;      Params:         0       0       0       0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    2
  4525 ;; This function calls:
  4526 ;;		_TMR0_ISR
  4527 ;; This function is called by:
  4528 ;;		Interrupt level 1
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532  0004                     _INTERRUPT_InterruptManager:	
  4533                           
  4534                           ;incstack = 0
  4535  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4536                           
  4537                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4538  0005  3180               	pagesel	$
  4539  0006                     i1l2614:	
  4540                           
  4541                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4542  0006  1E8B               	btfss	11,5	;volatile
  4543  0007  2809               	goto	u205_21
  4544  0008  280A               	goto	u205_20
  4545  0009                     u205_21:	
  4546  0009  2811               	goto	i1l304
  4547  000A                     u205_20:	
  4548  000A                     i1l2616:	
  4549  000A  1D0B               	btfss	11,2	;volatile
  4550  000B  280D               	goto	u206_21
  4551  000C  280E               	goto	u206_20
  4552  000D                     u206_21:	
  4553  000D  2811               	goto	i1l304
  4554  000E                     u206_20:	
  4555  000E                     i1l2618:	
  4556                           
  4557                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4558  000E  3182  2266  3180   	fcall	_TMR0_ISR
  4559  0011                     i1l304:	
  4560                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4561                           
  4562  0011  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4563  0012  0009               	retfie
  4564  0013                     __end_of_INTERRUPT_InterruptManager:	
  4565                           
  4566                           	psect	text20
  4567  0266                     __ptext20:	
  4568 ;; *************** function _TMR0_ISR *****************
  4569 ;; Defined at:
  4570 ;;		line 111 in file "mcc_generated_files/tmr0.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0, pclath, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4584 ;;      Params:         0       0       0       0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0
  4586 ;;      Temps:          0       5       0       0       0       0       0       0
  4587 ;;      Totals:         0       5       0       0       0       0       0       0
  4588 ;;Total ram usage:        5 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    1
  4591 ;; This function calls:
  4592 ;;		Absolute function
  4593 ;;		_TMR0_DefaultInterruptHandler
  4594 ;;		___awdiv
  4595 ;;		___wmul
  4596 ;; This function is called by:
  4597 ;;		_INTERRUPT_InterruptManager
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _TMR0_ISR
  4603  0266                     _TMR0_ISR:	
  4604  0266                     i1l2280:	
  4605                           ;incstack = 0
  4606                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4607                           
  4608                           
  4609                           ;mcc_generated_files/tmr0.c: 115:     INTCONbits.TMR0IF = 0;
  4610  0266  110B               	bcf	11,2	;volatile
  4611  0267                     i1l2282:	
  4612                           
  4613                           ;mcc_generated_files/tmr0.c: 117:     TMR0 = timer0ReloadVal;
  4614  0267  0020               	movlb	0	; select bank0
  4615  0268  0863               	movf	_timer0ReloadVal,w	;volatile
  4616  0269  0095               	movwf	21	;volatile
  4617  026A                     i1l2284:	
  4618                           
  4619                           ;mcc_generated_files/tmr0.c: 119:     if(TMR0_InterruptHandler)
  4620  026A  0861               	movf	_TMR0_InterruptHandler,w
  4621  026B  0462               	iorwf	_TMR0_InterruptHandler+1,w
  4622  026C  1903               	btfsc	3,2
  4623  026D  2A6F               	goto	u126_21
  4624  026E  2A70               	goto	u126_20
  4625  026F                     u126_21:	
  4626  026F  2A75               	goto	i1l2288
  4627  0270                     u126_20:	
  4628  0270                     i1l2286:	
  4629                           
  4630                           ;mcc_generated_files/tmr0.c: 120:     {;mcc_generated_files/tmr0.c: 121:         TMR0_In
      +                          terruptHandler();
  4631  0270  0862               	movf	_TMR0_InterruptHandler+1,w
  4632  0271  008A               	movwf	10
  4633  0272  0861               	movf	_TMR0_InterruptHandler,w
  4634  0273  000A               	callw
  4635  0274  3182               	pagesel	$
  4636  0275                     i1l2288:	
  4637                           
  4638                           ;mcc_generated_files/tmr0.c: 124:     if(lift_open_delay){
  4639  0275  0020               	movlb	0	; select bank0
  4640  0276  083D               	movf	_lift_open_delay,w
  4641  0277  1903               	btfsc	3,2
  4642  0278  2A7A               	goto	u127_21
  4643  0279  2A7B               	goto	u127_20
  4644  027A                     u127_21:	
  4645  027A  2A7D               	goto	i1l110
  4646  027B                     u127_20:	
  4647  027B                     i1l2290:	
  4648                           
  4649                           ;mcc_generated_files/tmr0.c: 125:         lift_open_delay--;
  4650  027B  3001               	movlw	1
  4651  027C  02BD               	subwf	_lift_open_delay,f
  4652  027D                     i1l110:	
  4653                           ;mcc_generated_files/tmr0.c: 126:     }
  4654                           
  4655                           
  4656                           ;mcc_generated_files/tmr0.c: 127:     if(lift_close_delay){
  4657  027D  083C               	movf	_lift_close_delay,w
  4658  027E  1903               	btfsc	3,2
  4659  027F  2A81               	goto	u128_21
  4660  0280  2A82               	goto	u128_20
  4661  0281                     u128_21:	
  4662  0281  2A84               	goto	i1l111
  4663  0282                     u128_20:	
  4664  0282                     i1l2292:	
  4665                           
  4666                           ;mcc_generated_files/tmr0.c: 128:         lift_close_delay--;
  4667  0282  3001               	movlw	1
  4668  0283  02BC               	subwf	_lift_close_delay,f
  4669  0284                     i1l111:	
  4670                           ;mcc_generated_files/tmr0.c: 129:     }
  4671                           
  4672                           
  4673                           ;mcc_generated_files/tmr0.c: 130:     if(back_open_delay){
  4674  0284  083B               	movf	_back_open_delay,w
  4675  0285  1903               	btfsc	3,2
  4676  0286  2A88               	goto	u129_21
  4677  0287  2A89               	goto	u129_20
  4678  0288                     u129_21:	
  4679  0288  2A8B               	goto	i1l112
  4680  0289                     u129_20:	
  4681  0289                     i1l2294:	
  4682                           
  4683                           ;mcc_generated_files/tmr0.c: 131:         back_open_delay--;
  4684  0289  3001               	movlw	1
  4685  028A  02BB               	subwf	_back_open_delay,f
  4686  028B                     i1l112:	
  4687                           ;mcc_generated_files/tmr0.c: 132:     }
  4688                           
  4689                           
  4690                           ;mcc_generated_files/tmr0.c: 133:     if(back_close_delay){
  4691  028B  083A               	movf	_back_close_delay,w
  4692  028C  1903               	btfsc	3,2
  4693  028D  2A8F               	goto	u130_21
  4694  028E  2A90               	goto	u130_20
  4695  028F                     u130_21:	
  4696  028F  2A92               	goto	i1l113
  4697  0290                     u130_20:	
  4698  0290                     i1l2296:	
  4699                           
  4700                           ;mcc_generated_files/tmr0.c: 134:         back_close_delay--;
  4701  0290  3001               	movlw	1
  4702  0291  02BA               	subwf	_back_close_delay,f
  4703  0292                     i1l113:	
  4704                           ;mcc_generated_files/tmr0.c: 135:     }
  4705                           
  4706                           
  4707                           ;mcc_generated_files/tmr0.c: 136:     if(second_timer){
  4708  0292  0852               	movf	_second_timer,w
  4709  0293  0453               	iorwf	_second_timer+1,w
  4710  0294  1903               	btfsc	3,2
  4711  0295  2A97               	goto	u131_21
  4712  0296  2A98               	goto	u131_20
  4713  0297                     u131_21:	
  4714  0297  2A9D               	goto	i1l2300
  4715  0298                     u131_20:	
  4716  0298                     i1l2298:	
  4717                           
  4718                           ;mcc_generated_files/tmr0.c: 137:         second_timer--;
  4719  0298  3001               	movlw	1
  4720  0299  02D2               	subwf	_second_timer,f
  4721  029A  3000               	movlw	0
  4722  029B  3BD3               	subwfb	_second_timer+1,f
  4723                           
  4724                           ;mcc_generated_files/tmr0.c: 138:     }else{
  4725  029C  2ABF               	goto	i1l2314
  4726  029D                     i1l2300:	
  4727                           
  4728                           ;mcc_generated_files/tmr0.c: 139:         second_timer = 1000;
  4729  029D  30E8               	movlw	232
  4730  029E  00D2               	movwf	_second_timer
  4731  029F  3003               	movlw	3
  4732  02A0  00D3               	movwf	_second_timer+1
  4733  02A1                     i1l2302:	
  4734                           
  4735                           ;mcc_generated_files/tmr0.c: 140:         if(heat1_timer){
  4736  02A1  0824               	movf	_heat1_timer,w
  4737  02A2  0425               	iorwf	_heat1_timer+1,w
  4738  02A3  1903               	btfsc	3,2
  4739  02A4  2AA6               	goto	u132_21
  4740  02A5  2AA7               	goto	u132_20
  4741  02A6                     u132_21:	
  4742  02A6  2AAB               	goto	i1l2306
  4743  02A7                     u132_20:	
  4744  02A7                     i1l2304:	
  4745                           
  4746                           ;mcc_generated_files/tmr0.c: 141:             heat1_timer--;
  4747  02A7  3001               	movlw	1
  4748  02A8  02A4               	subwf	_heat1_timer,f
  4749  02A9  3000               	movlw	0
  4750  02AA  3BA5               	subwfb	_heat1_timer+1,f
  4751  02AB                     i1l2306:	
  4752                           
  4753                           ;mcc_generated_files/tmr0.c: 143:         if(heat2_timer){
  4754  02AB  0822               	movf	_heat2_timer,w
  4755  02AC  0423               	iorwf	_heat2_timer+1,w
  4756  02AD  1903               	btfsc	3,2
  4757  02AE  2AB0               	goto	u133_21
  4758  02AF  2AB1               	goto	u133_20
  4759  02B0                     u133_21:	
  4760  02B0  2AB5               	goto	i1l2310
  4761  02B1                     u133_20:	
  4762  02B1                     i1l2308:	
  4763                           
  4764                           ;mcc_generated_files/tmr0.c: 144:             heat2_timer--;
  4765  02B1  3001               	movlw	1
  4766  02B2  02A2               	subwf	_heat2_timer,f
  4767  02B3  3000               	movlw	0
  4768  02B4  3BA3               	subwfb	_heat2_timer+1,f
  4769  02B5                     i1l2310:	
  4770                           
  4771                           ;mcc_generated_files/tmr0.c: 147:         if(massage_timer){
  4772  02B5  0820               	movf	_massage_timer,w
  4773  02B6  0421               	iorwf	_massage_timer+1,w
  4774  02B7  1903               	btfsc	3,2
  4775  02B8  2ABA               	goto	u134_21
  4776  02B9  2ABB               	goto	u134_20
  4777  02BA                     u134_21:	
  4778  02BA  2ABF               	goto	i1l2314
  4779  02BB                     u134_20:	
  4780  02BB                     i1l2312:	
  4781                           
  4782                           ;mcc_generated_files/tmr0.c: 148:             massage_timer--;
  4783  02BB  3001               	movlw	1
  4784  02BC  02A0               	subwf	_massage_timer,f
  4785  02BD  3000               	movlw	0
  4786  02BE  3BA1               	subwfb	_massage_timer+1,f
  4787  02BF                     i1l2314:	
  4788                           
  4789                           ;mcc_generated_files/tmr0.c: 153:     if(lock_btn_state){
  4790  02BF  1FFB               	btfss	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  4791  02C0  2AC2               	goto	u135_21
  4792  02C1  2AC3               	goto	u135_20
  4793  02C2                     u135_21:	
  4794  02C2  2AD6               	goto	i1l119
  4795  02C3                     u135_20:	
  4796  02C3                     i1l2316:	
  4797                           
  4798                           ;mcc_generated_files/tmr0.c: 154:         if(!lock_flag){
  4799  02C3  1AFB               	btfsc	_lock_flag/(0+8),_lock_flag& (0+7)
  4800  02C4  2AC6               	goto	u136_21
  4801  02C5  2AC7               	goto	u136_20
  4802  02C6                     u136_21:	
  4803  02C6  2ADB               	goto	i1l2326
  4804  02C7                     u136_20:	
  4805  02C7                     i1l2318:	
  4806                           
  4807                           ;mcc_generated_files/tmr0.c: 155:             if(lock_timer){
  4808  02C7  0828               	movf	_lock_timer,w
  4809  02C8  0429               	iorwf	_lock_timer+1,w
  4810  02C9  1903               	btfsc	3,2
  4811  02CA  2ACC               	goto	u137_21
  4812  02CB  2ACD               	goto	u137_20
  4813  02CC                     u137_21:	
  4814  02CC  2AD2               	goto	i1l121
  4815  02CD                     u137_20:	
  4816  02CD                     i1l2320:	
  4817                           
  4818                           ;mcc_generated_files/tmr0.c: 156:                 lock_timer--;
  4819  02CD  3001               	movlw	1
  4820  02CE  02A8               	subwf	_lock_timer,f
  4821  02CF  3000               	movlw	0
  4822  02D0  3BA9               	subwfb	_lock_timer+1,f
  4823                           
  4824                           ;mcc_generated_files/tmr0.c: 157:             }else{
  4825  02D1  2ADB               	goto	i1l2326
  4826  02D2                     i1l121:	
  4827                           
  4828                           ;mcc_generated_files/tmr0.c: 158:                 lock_flag = 1;
  4829  02D2  16FB               	bsf	_lock_flag/(0+8),_lock_flag& (0+7)
  4830  02D3                     i1l2322:	
  4831                           
  4832                           ;mcc_generated_files/tmr0.c: 159:                 lock_actuators = !lock_actuators;
  4833  02D3  3040               	movlw	(0+1) shl (_lock_actuators& (0+7))
  4834  02D4  06FB               	xorwf	_lock_actuators/(0+8),f
  4835  02D5  2ADB               	goto	i1l2326
  4836  02D6                     i1l119:	
  4837                           
  4838                           ;mcc_generated_files/tmr0.c: 163:         lock_flag = 0;
  4839  02D6  12FB               	bcf	_lock_flag/(0+8),_lock_flag& (0+7)
  4840  02D7                     i1l2324:	
  4841                           
  4842                           ;mcc_generated_files/tmr0.c: 164:         lock_timer = 5000;
  4843  02D7  3088               	movlw	136
  4844  02D8  00A8               	movwf	_lock_timer
  4845  02D9  3013               	movlw	19
  4846  02DA  00A9               	movwf	_lock_timer+1
  4847  02DB                     i1l2326:	
  4848                           
  4849                           ;mcc_generated_files/tmr0.c: 167:     if(pwm_count){
  4850  02DB  087D               	movf	_pwm_count,w
  4851  02DC  1903               	btfsc	3,2
  4852  02DD  2ADF               	goto	u138_21
  4853  02DE  2AE0               	goto	u138_20
  4854  02DF                     u138_21:	
  4855  02DF  2AE3               	goto	i1l2330
  4856  02E0                     u138_20:	
  4857  02E0                     i1l2328:	
  4858                           
  4859                           ;mcc_generated_files/tmr0.c: 168:         pwm_count--;
  4860  02E0  3001               	movlw	1
  4861  02E1  02FD               	subwf	_pwm_count,f
  4862                           
  4863                           ;mcc_generated_files/tmr0.c: 169:     }else{
  4864  02E2  2AE7               	goto	i1l2332
  4865  02E3                     i1l2330:	
  4866                           
  4867                           ;mcc_generated_files/tmr0.c: 170:         pwm_count = 50;
  4868  02E3  3032               	movlw	50
  4869  02E4  00D8               	movwf	??_TMR0_ISR
  4870  02E5  0858               	movf	??_TMR0_ISR,w
  4871  02E6  00FD               	movwf	_pwm_count
  4872  02E7                     i1l2332:	
  4873                           
  4874                           ;mcc_generated_files/tmr0.c: 173:     if(phase_change_timer){
  4875  02E7  0826               	movf	_phase_change_timer,w
  4876  02E8  0427               	iorwf	_phase_change_timer+1,w
  4877  02E9  1903               	btfsc	3,2
  4878  02EA  2AEC               	goto	u139_21
  4879  02EB  2AED               	goto	u139_20
  4880  02EC                     u139_21:	
  4881  02EC  2AF2               	goto	i1l2336
  4882  02ED                     u139_20:	
  4883  02ED                     i1l2334:	
  4884                           
  4885                           ;mcc_generated_files/tmr0.c: 174:         phase_change_timer--;
  4886  02ED  3001               	movlw	1
  4887  02EE  02A6               	subwf	_phase_change_timer,f
  4888  02EF  3000               	movlw	0
  4889  02F0  3BA7               	subwfb	_phase_change_timer+1,f
  4890                           
  4891                           ;mcc_generated_files/tmr0.c: 175:     }else{
  4892  02F1  2B51               	goto	i1l129
  4893  02F2                     i1l2336:	
  4894                           
  4895                           ;mcc_generated_files/tmr0.c: 176:         if(massage_phase >= 11){
  4896  02F2  300B               	movlw	11
  4897  02F3  0236               	subwf	_massage_phase,w
  4898  02F4  1C03               	skipc
  4899  02F5  2AF7               	goto	u140_21
  4900  02F6  2AF8               	goto	u140_20
  4901  02F7                     u140_21:	
  4902  02F7  2B23               	goto	i1l2362
  4903  02F8                     u140_20:	
  4904  02F8                     i1l2338:	
  4905                           
  4906                           ;mcc_generated_files/tmr0.c: 177:             massage_phase = 0;
  4907  02F8  01B6               	clrf	_massage_phase
  4908  02F9                     i1l2340:	
  4909                           
  4910                           ;mcc_generated_files/tmr0.c: 178:                 WavePlaceHolderOn = WaveInOn;
  4911  02F9  084D               	movf	_WaveInOn+1,w
  4912  02FA  00D1               	movwf	_WavePlaceHolderOn+1
  4913  02FB  084C               	movf	_WaveInOn,w
  4914  02FC  00D0               	movwf	_WavePlaceHolderOn
  4915  02FD                     i1l2342:	
  4916                           
  4917                           ;mcc_generated_files/tmr0.c: 179:                 WavePlaceHolderOff = WaveInOff;
  4918  02FD  084B               	movf	_WaveInOff+1,w
  4919  02FE  00CF               	movwf	_WavePlaceHolderOff+1
  4920  02FF  084A               	movf	_WaveInOff,w
  4921  0300  00CE               	movwf	_WavePlaceHolderOff
  4922  0301                     i1l2344:	
  4923                           
  4924                           ;mcc_generated_files/tmr0.c: 180:                 WaveInOn = WaveGap2On;
  4925  0301  0841               	movf	_WaveGap2On+1,w
  4926  0302  00CD               	movwf	_WaveInOn+1
  4927  0303  0840               	movf	_WaveGap2On,w
  4928  0304  00CC               	movwf	_WaveInOn
  4929  0305                     i1l2346:	
  4930                           
  4931                           ;mcc_generated_files/tmr0.c: 181:                 WaveInOff = WaveGap2Off;
  4932  0305  083F               	movf	_WaveGap2Off+1,w
  4933  0306  00CB               	movwf	_WaveInOff+1
  4934  0307  083E               	movf	_WaveGap2Off,w
  4935  0308  00CA               	movwf	_WaveInOff
  4936  0309                     i1l2348:	
  4937                           
  4938                           ;mcc_generated_files/tmr0.c: 182:                 WaveGap2On = WaveGap1On;
  4939  0309  0845               	movf	_WaveGap1On+1,w
  4940  030A  00C1               	movwf	_WaveGap2On+1
  4941  030B  0844               	movf	_WaveGap1On,w
  4942  030C  00C0               	movwf	_WaveGap2On
  4943  030D                     i1l2350:	
  4944                           
  4945                           ;mcc_generated_files/tmr0.c: 183:                 WaveGap2Off = WaveGap1Off;
  4946  030D  0843               	movf	_WaveGap1Off+1,w
  4947  030E  00BF               	movwf	_WaveGap2Off+1
  4948  030F  0842               	movf	_WaveGap1Off,w
  4949  0310  00BE               	movwf	_WaveGap2Off
  4950  0311                     i1l2352:	
  4951                           
  4952                           ;mcc_generated_files/tmr0.c: 184:                 WaveGap1On = WaveOutOn;
  4953  0311  0849               	movf	_WaveOutOn+1,w
  4954  0312  00C5               	movwf	_WaveGap1On+1
  4955  0313  0848               	movf	_WaveOutOn,w
  4956  0314  00C4               	movwf	_WaveGap1On
  4957  0315                     i1l2354:	
  4958                           
  4959                           ;mcc_generated_files/tmr0.c: 185:                 WaveGap1Off = WaveOutOff;
  4960  0315  0847               	movf	_WaveOutOff+1,w
  4961  0316  00C3               	movwf	_WaveGap1Off+1
  4962  0317  0846               	movf	_WaveOutOff,w
  4963  0318  00C2               	movwf	_WaveGap1Off
  4964  0319                     i1l2356:	
  4965                           
  4966                           ;mcc_generated_files/tmr0.c: 186:                 WaveOutOn = WavePlaceHolderOn;
  4967  0319  0851               	movf	_WavePlaceHolderOn+1,w
  4968  031A  00C9               	movwf	_WaveOutOn+1
  4969  031B  0850               	movf	_WavePlaceHolderOn,w
  4970  031C  00C8               	movwf	_WaveOutOn
  4971  031D                     i1l2358:	
  4972                           
  4973                           ;mcc_generated_files/tmr0.c: 187:                 WaveOutOff = WavePlaceHolderOff;
  4974  031D  084F               	movf	_WavePlaceHolderOff+1,w
  4975  031E  00C7               	movwf	_WaveOutOff+1
  4976  031F  084E               	movf	_WavePlaceHolderOff,w
  4977  0320  00C6               	movwf	_WaveOutOff
  4978  0321                     i1l2360:	
  4979                           
  4980                           ;mcc_generated_files/tmr0.c: 188:                 pulse_direction = !pulse_direction;
  4981  0321  3010               	movlw	(0+1) shl (_pulse_direction& (0+7))
  4982  0322  06FB               	xorwf	_pulse_direction/(0+8),f
  4983  0323                     i1l2362:	
  4984                           
  4985                           ;mcc_generated_files/tmr0.c: 190:         massage_phase++;
  4986  0323  3001               	movlw	1
  4987  0324  00D8               	movwf	??_TMR0_ISR
  4988  0325  0858               	movf	??_TMR0_ISR,w
  4989  0326  07B6               	addwf	_massage_phase,f
  4990  0327                     i1l2364:	
  4991                           
  4992                           ;mcc_generated_files/tmr0.c: 191:         phase_change_timer = 100;
  4993  0327  3064               	movlw	100
  4994  0328  00A6               	movwf	_phase_change_timer
  4995  0329  3000               	movlw	0
  4996  032A  00A7               	movwf	_phase_change_timer+1
  4997  032B                     i1l2366:	
  4998                           
  4999                           ;mcc_generated_files/tmr0.c: 194:         pulse_wave_in_intensity = massage_intensity*ma
      +                          ssage_phase/11;
  5000  032B  300B               	movlw	11
  5001  032C  00F6               	movwf	___awdiv@divisor
  5002  032D  3000               	movlw	0
  5003  032E  00F7               	movwf	___awdiv@divisor+1
  5004  032F  0839               	movf	_massage_intensity,w
  5005  0330  00D8               	movwf	??_TMR0_ISR
  5006  0331  01D9               	clrf	??_TMR0_ISR+1
  5007  0332  0858               	movf	??_TMR0_ISR,w
  5008  0333  00F0               	movwf	___wmul@multiplier
  5009  0334  0859               	movf	??_TMR0_ISR+1,w
  5010  0335  00F1               	movwf	___wmul@multiplier+1
  5011  0336  0836               	movf	_massage_phase,w
  5012  0337  00DA               	movwf	??_TMR0_ISR+2
  5013  0338  01DB               	clrf	??_TMR0_ISR+3
  5014  0339  085A               	movf	??_TMR0_ISR+2,w
  5015  033A  00F2               	movwf	___wmul@multiplicand
  5016  033B  085B               	movf	??_TMR0_ISR+3,w
  5017  033C  00F3               	movwf	___wmul@multiplicand+1
  5018  033D  3185  251C  3182   	fcall	___wmul
  5019  0340  0871               	movf	?___wmul+1,w
  5020  0341  00F9               	movwf	___awdiv@dividend+1
  5021  0342  0870               	movf	?___wmul,w
  5022  0343  00F8               	movwf	___awdiv@dividend
  5023  0344  3184  249A  3182   	fcall	___awdiv
  5024  0347  0876               	movf	?___awdiv,w
  5025  0348  0020               	movlb	0	; select bank0
  5026  0349  00DC               	movwf	??_TMR0_ISR+4
  5027  034A  085C               	movf	??_TMR0_ISR+4,w
  5028  034B  00B8               	movwf	_pulse_wave_in_intensity
  5029  034C                     i1l2368:	
  5030                           
  5031                           ;mcc_generated_files/tmr0.c: 195:         pulse_wave_out_intensity = massage_intensity -
      +                           pulse_wave_in_intensity;
  5032  034C  0838               	movf	_pulse_wave_in_intensity,w
  5033  034D  0239               	subwf	_massage_intensity,w
  5034  034E  00D8               	movwf	??_TMR0_ISR
  5035  034F  0858               	movf	??_TMR0_ISR,w
  5036  0350  00B7               	movwf	_pulse_wave_out_intensity
  5037  0351                     i1l129:	
  5038  0351  0008               	return
  5039  0352                     __end_of_TMR0_ISR:	
  5040                           
  5041                           	psect	text21
  5042  051C                     __ptext21:	
  5043 ;; *************** function ___wmul *****************
  5044 ;; Defined at:
  5045 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  multiplier      2    0[COMMON] unsigned int 
  5048 ;;  multiplicand    2    2[COMMON] unsigned int 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  product         2    4[COMMON] unsigned int 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  2    0[COMMON] unsigned int 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5060 ;;      Params:         4       0       0       0       0       0       0       0
  5061 ;;      Locals:         2       0       0       0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0       0
  5063 ;;      Totals:         6       0       0       0       0       0       0       0
  5064 ;;Total ram usage:        6 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_TMR0_ISR
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function ___wmul
  5075  051C                     ___wmul:	
  5076  051C                     i1l2222:	
  5077                           ;incstack = 0
  5078                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5079                           
  5080  051C  01F4               	clrf	___wmul@product
  5081  051D  01F5               	clrf	___wmul@product+1
  5082  051E                     i1l2224:	
  5083  051E  1C70               	btfss	___wmul@multiplier,0
  5084  051F  2D21               	goto	u112_21
  5085  0520  2D22               	goto	u112_20
  5086  0521                     u112_21:	
  5087  0521  2D26               	goto	i1l1070
  5088  0522                     u112_20:	
  5089  0522                     i1l2226:	
  5090  0522  0872               	movf	___wmul@multiplicand,w
  5091  0523  07F4               	addwf	___wmul@product,f
  5092  0524  0873               	movf	___wmul@multiplicand+1,w
  5093  0525  3DF5               	addwfc	___wmul@product+1,f
  5094  0526                     i1l1070:	
  5095  0526  3001               	movlw	1
  5096  0527                     u113_25:	
  5097  0527  35F2               	lslf	___wmul@multiplicand,f
  5098  0528  0DF3               	rlf	___wmul@multiplicand+1,f
  5099  0529  0B89               	decfsz	9,f
  5100  052A  2D27               	goto	u113_25
  5101  052B                     i1l2228:	
  5102  052B  3001               	movlw	1
  5103  052C                     u114_25:	
  5104  052C  36F1               	lsrf	___wmul@multiplier+1,f
  5105  052D  0CF0               	rrf	___wmul@multiplier,f
  5106  052E  0B89               	decfsz	9,f
  5107  052F  2D2C               	goto	u114_25
  5108  0530                     i1l2230:	
  5109  0530  0870               	movf	___wmul@multiplier,w
  5110  0531  0471               	iorwf	___wmul@multiplier+1,w
  5111  0532  1D03               	btfss	3,2
  5112  0533  2D35               	goto	u115_21
  5113  0534  2D36               	goto	u115_20
  5114  0535                     u115_21:	
  5115  0535  2D1E               	goto	i1l2224
  5116  0536                     u115_20:	
  5117  0536                     i1l2232:	
  5118  0536  0875               	movf	___wmul@product+1,w
  5119  0537  00F1               	movwf	?___wmul+1
  5120  0538  0874               	movf	___wmul@product,w
  5121  0539  00F0               	movwf	?___wmul
  5122  053A                     i1l1072:	
  5123  053A  0008               	return
  5124  053B                     __end_of___wmul:	
  5125                           
  5126                           	psect	text22
  5127  049A                     __ptext22:	
  5128 ;; *************** function ___awdiv *****************
  5129 ;; Defined at:
  5130 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  divisor         2    6[COMMON] int 
  5133 ;;  dividend        2    8[COMMON] int 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  quotient        2    2[BANK0 ] int 
  5136 ;;  sign            1    1[BANK0 ] unsigned char 
  5137 ;;  counter         1    0[BANK0 ] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  2    6[COMMON] int 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5147 ;;      Params:         4       0       0       0       0       0       0       0
  5148 ;;      Locals:         0       4       0       0       0       0       0       0
  5149 ;;      Temps:          1       0       0       0       0       0       0       0
  5150 ;;      Totals:         5       4       0       0       0       0       0       0
  5151 ;;Total ram usage:        9 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_TMR0_ISR
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           
  5161                           ;psect for function ___awdiv
  5162  049A                     ___awdiv:	
  5163  049A                     i1l2236:	
  5164                           ;incstack = 0
  5165                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5166                           
  5167  049A  0020               	movlb	0	; select bank0
  5168  049B  01D5               	clrf	___awdiv@sign
  5169  049C                     i1l2238:	
  5170  049C  1FF7               	btfss	___awdiv@divisor+1,7
  5171  049D  2C9F               	goto	u116_21
  5172  049E  2CA0               	goto	u116_20
  5173  049F                     u116_21:	
  5174  049F  2CA7               	goto	i1l2244
  5175  04A0                     u116_20:	
  5176  04A0                     i1l2240:	
  5177  04A0  09F6               	comf	___awdiv@divisor,f
  5178  04A1  09F7               	comf	___awdiv@divisor+1,f
  5179  04A2  0AF6               	incf	___awdiv@divisor,f
  5180  04A3  1903               	skipnz
  5181  04A4  0AF7               	incf	___awdiv@divisor+1,f
  5182  04A5                     i1l2242:	
  5183  04A5  01D5               	clrf	___awdiv@sign
  5184  04A6  0AD5               	incf	___awdiv@sign,f
  5185  04A7                     i1l2244:	
  5186  04A7  1FF9               	btfss	___awdiv@dividend+1,7
  5187  04A8  2CAA               	goto	u117_21
  5188  04A9  2CAB               	goto	u117_20
  5189  04AA                     u117_21:	
  5190  04AA  2CB4               	goto	i1l2250
  5191  04AB                     u117_20:	
  5192  04AB                     i1l2246:	
  5193  04AB  09F8               	comf	___awdiv@dividend,f
  5194  04AC  09F9               	comf	___awdiv@dividend+1,f
  5195  04AD  0AF8               	incf	___awdiv@dividend,f
  5196  04AE  1903               	skipnz
  5197  04AF  0AF9               	incf	___awdiv@dividend+1,f
  5198  04B0                     i1l2248:	
  5199  04B0  3001               	movlw	1
  5200  04B1  00FA               	movwf	??___awdiv
  5201  04B2  087A               	movf	??___awdiv,w
  5202  04B3  06D5               	xorwf	___awdiv@sign,f
  5203  04B4                     i1l2250:	
  5204  04B4  01D6               	clrf	___awdiv@quotient
  5205  04B5  01D7               	clrf	___awdiv@quotient+1
  5206  04B6                     i1l2252:	
  5207  04B6  0876               	movf	___awdiv@divisor,w
  5208  04B7  0477               	iorwf	___awdiv@divisor+1,w
  5209  04B8  1903               	btfsc	3,2
  5210  04B9  2CBB               	goto	u118_21
  5211  04BA  2CBC               	goto	u118_20
  5212  04BB                     u118_21:	
  5213  04BB  2CEB               	goto	i1l2272
  5214  04BC                     u118_20:	
  5215  04BC                     i1l2254:	
  5216  04BC  01D4               	clrf	___awdiv@counter
  5217  04BD  0AD4               	incf	___awdiv@counter,f
  5218  04BE  2CC8               	goto	i1l2260
  5219  04BF                     i1l2256:	
  5220  04BF  3001               	movlw	1
  5221  04C0                     u119_25:	
  5222  04C0  35F6               	lslf	___awdiv@divisor,f
  5223  04C1  0DF7               	rlf	___awdiv@divisor+1,f
  5224  04C2  0B89               	decfsz	9,f
  5225  04C3  2CC0               	goto	u119_25
  5226  04C4                     i1l2258:	
  5227  04C4  3001               	movlw	1
  5228  04C5  00FA               	movwf	??___awdiv
  5229  04C6  087A               	movf	??___awdiv,w
  5230  04C7  07D4               	addwf	___awdiv@counter,f
  5231  04C8                     i1l2260:	
  5232  04C8  1FF7               	btfss	___awdiv@divisor+1,7
  5233  04C9  2CCB               	goto	u120_21
  5234  04CA  2CCC               	goto	u120_20
  5235  04CB                     u120_21:	
  5236  04CB  2CBF               	goto	i1l2256
  5237  04CC                     u120_20:	
  5238  04CC                     i1l2262:	
  5239  04CC  3001               	movlw	1
  5240  04CD                     u121_25:	
  5241  04CD  35D6               	lslf	___awdiv@quotient,f
  5242  04CE  0DD7               	rlf	___awdiv@quotient+1,f
  5243  04CF  0B89               	decfsz	9,f
  5244  04D0  2CCD               	goto	u121_25
  5245  04D1  0877               	movf	___awdiv@divisor+1,w
  5246  04D2  0279               	subwf	___awdiv@dividend+1,w
  5247  04D3  1D03               	skipz
  5248  04D4  2CD7               	goto	u122_25
  5249  04D5  0876               	movf	___awdiv@divisor,w
  5250  04D6  0278               	subwf	___awdiv@dividend,w
  5251  04D7                     u122_25:	
  5252  04D7  1C03               	skipc
  5253  04D8  2CDA               	goto	u122_21
  5254  04D9  2CDB               	goto	u122_20
  5255  04DA                     u122_21:	
  5256  04DA  2CE0               	goto	i1l2268
  5257  04DB                     u122_20:	
  5258  04DB                     i1l2264:	
  5259  04DB  0876               	movf	___awdiv@divisor,w
  5260  04DC  02F8               	subwf	___awdiv@dividend,f
  5261  04DD  0877               	movf	___awdiv@divisor+1,w
  5262  04DE  3BF9               	subwfb	___awdiv@dividend+1,f
  5263  04DF                     i1l2266:	
  5264  04DF  1456               	bsf	___awdiv@quotient,0
  5265  04E0                     i1l2268:	
  5266  04E0  3001               	movlw	1
  5267  04E1                     u123_25:	
  5268  04E1  36F7               	lsrf	___awdiv@divisor+1,f
  5269  04E2  0CF6               	rrf	___awdiv@divisor,f
  5270  04E3  0B89               	decfsz	9,f
  5271  04E4  2CE1               	goto	u123_25
  5272  04E5                     i1l2270:	
  5273  04E5  3001               	movlw	1
  5274  04E6  02D4               	subwf	___awdiv@counter,f
  5275  04E7  1D03               	btfss	3,2
  5276  04E8  2CEA               	goto	u124_21
  5277  04E9  2CEB               	goto	u124_20
  5278  04EA                     u124_21:	
  5279  04EA  2CCC               	goto	i1l2262
  5280  04EB                     u124_20:	
  5281  04EB                     i1l2272:	
  5282  04EB  0855               	movf	___awdiv@sign,w
  5283  04EC  1903               	btfsc	3,2
  5284  04ED  2CEF               	goto	u125_21
  5285  04EE  2CF0               	goto	u125_20
  5286  04EF                     u125_21:	
  5287  04EF  2CF5               	goto	i1l2276
  5288  04F0                     u125_20:	
  5289  04F0                     i1l2274:	
  5290  04F0  09D6               	comf	___awdiv@quotient,f
  5291  04F1  09D7               	comf	___awdiv@quotient+1,f
  5292  04F2  0AD6               	incf	___awdiv@quotient,f
  5293  04F3  1903               	skipnz
  5294  04F4  0AD7               	incf	___awdiv@quotient+1,f
  5295  04F5                     i1l2276:	
  5296  04F5  0857               	movf	___awdiv@quotient+1,w
  5297  04F6  00F7               	movwf	?___awdiv+1
  5298  04F7  0856               	movf	___awdiv@quotient,w
  5299  04F8  00F6               	movwf	?___awdiv
  5300  04F9                     i1l1223:	
  5301  04F9  0008               	return
  5302  04FA                     __end_of___awdiv:	
  5303                           
  5304                           	psect	text23
  5305  05BA                     __ptext23:	
  5306 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5307 ;; Defined at:
  5308 ;;		line 206 in file "mcc_generated_files/tmr0.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		None
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5322 ;;      Params:         0       0       0       0       0       0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0
  5325 ;;      Totals:         0       0       0       0       0       0       0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		_TMR0_Initialize
  5332 ;;		_TMR0_ISR
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           
  5337                           ;psect for function _TMR0_DefaultInterruptHandler
  5338  05BA                     _TMR0_DefaultInterruptHandler:	
  5339  05BA                     i1l135:	
  5340                           ;incstack = 0
  5341                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5342                           
  5343  05BA  0008               	return
  5344  05BB                     __end_of_TMR0_DefaultInterruptHandler:	
  5345  007E                     btemp	set	126	;btemp
  5346  007E                     int$flags	set	126
  5347  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        23
    BSS         31
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     13      69
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    WaveGap2Off	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WaveGap2On	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 

    WaveGap1Off	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WaveGap1On	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 

    WaveOutOff	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WaveOutOn	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 

    WaveInOff	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WaveInOn	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 

    WavePlaceHolderOff	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WavePlaceHolderOn	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_Execute
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _Execute->_Massage

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                           _Debounce
                            _Execute
                               _LEDs
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      98
                                             11 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDs                                                 2     2      0       0
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Execute                                              2     2      0       0
                                             11 BANK0      2     2      0
                            _Massage
 ---------------------------------------------------------------------------------
 (2) _Massage                                              2     2      0       0
                                              9 BANK0      2     2      0
                          _Z1SetHigh *
                           _Z1SetLow *
                          _Z2SetHigh *
                           _Z2SetLow *
                          _Z3SetHigh *
                           _Z3SetLow *
                          _Z4SetHigh *
                           _Z4SetLow *
 ---------------------------------------------------------------------------------
 (3) _Z4SetLow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z4SetHigh                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z3SetLow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z3SetHigh                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z2SetLow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z2SetHigh                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z1SetLow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z1SetHigh                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     696
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             5     5      0     696
                                              4 BANK0      5     5      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Debounce
   _Execute
     _Massage
       _Z1SetHigh *
       _Z1SetLow *
       _Z2SetHigh *
       _Z2SetLow *
       _Z3SetHigh *
       _Z3SetLow *
       _Z4SetHigh *
       _Z4SetLow *
   _LEDs
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     ___awdiv *
       ___wmul (ARG)
     ___wmul *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       1       5        1.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      D      45       6       86.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      53      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 28 09:24:13 2020

                              __CFG_CP$ON 0000                                        l97 0566  
                             __CFG_CPD$ON 0000                              ___awdiv@sign 0055  
                     ___wmul@multiplicand 0072                           _timer0ReloadVal 0063  
                                     l140 05B2                                       l132 059C  
                                     l150 05B5                                       l214 051B  
                                     l143 05A4                                       l160 05AF  
                                     l153 05A7                                       l145 05A6  
                                     l170 05B8                                       l138 05B0  
                                     l402 058A                                       l155 05A9  
                                     l163 05A1                                       l148 05B3  
                                     l173 05AA                                       l165 05A3  
                                     l405 05A0                                       l158 05AD  
                                     l175 05AC                                       l168 05B6  
                                     l602 0265                                       l610 0051  
                                     l620 0062                                       l613 006A  
                                     l605 0053                                       l702 0133  
                                     l630 0079                                       l614 0057  
                                     l640 00B6                                       l632 009F  
                                     l624 006E                                       l608 004F  
                                     l720 0359                                       l561 0172  
                                     l713 0164                                       l705 0136  
                                     l641 00A3                                       l617 005F  
                                     l801 03DD                                       l554 056B  
                                     l651 00BA                                       l635 009B  
                                     l627 0076                                       l811 03E3  
                                     l803 03DE                                       l900 0479  
                                     l644 00AB                                       l740 0378  
                                     l573 01AB                                       l565 0185  
                                     l637 009D                                       l733 0372  
                                     l725 0364                                       l717 0356  
                                     l590 0239                                       l582 01F7  
                                     l670 00F5                                       l654 00C2  
                                     l830 0402                                       l814 03E5  
                                     l822 03FE                                       l742 037A  
                                     l591 0238                                       l903 047B  
                                     l647 00AE                                       l807 03E0  
                                     l751 0380                                       l727 0369  
                                     l719 035B                                       l399 0583  
                                     l920 0499                                       l912 0494  
                                     l680 0109                                       l664 00EB  
                                     l832 0403                                       l824 03FF  
                                     l816 03E7                                       l736 0375  
                                     l728 0367                                       l577 01D2  
                                     l569 0198                                       l905 047D  
                                     l673 00FD                                       l657 00C5  
                                     l809 03E2                                       l753 0382  
                                     l914 0496                                       l842 041D  
                                     l690 011D                                       l666 00ED  
                                     l826 0400                                       l818 03E8  
                                     l834 0404                                       l770 039F  
                                     l746 037C                                       l587 0208  
                                     l907 047E                                       l851 0423  
                                     l683 0111                                       l763 0399  
                                     l916 0497                                       l844 041F  
                                     l676 0100                                       l828 0401  
                                     l748 037E                                       l597 0260  
                                     l909 047F                                       l853 0425  
                                     l693 0125                                       l765 039B  
                                     l757 0395                                       l598 025F  
                                     l918 0498                                       l870 0460  
                                     l862 0446                                       l846 0420  
                                     l686 0114                                       l790 03C2  
                                     l863 0453                                       l855 0426  
                                     l783 03BD                                       l775 03B8  
                                     l759 0397                                       l872 0461  
                                     l848 0421                                       l696 0128  
                                     l792 03C4                                       l768 039D  
                                     l881 0467                                       l857 0427  
                                     l785 03BF                                       l777 03BA  
                                     l866 045D                                       l794 03C5  
                                     l891 0473                                       l875 0463  
                                     l699 012B                                       l787 03C0  
                                     l779 03BB                                       l868 045F  
                                     l885 046F                                       l877 0465  
                                     l894 0475                                       l887 0471  
                                     l879 0466                                       l799 03DB  
                                     l896 0477                                       l889 0472  
                                     l898 0478                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_LVP$OFF 0000  
                                    l2200 0417                                      l2210 0469  
                                    l2202 0429                                      l2204 042F  
                                    l2206 043B                                      l2214 0481  
                                    l2400 019E                                      l2208 0457  
                                    l2152 0597                                      l2160 055D  
                                    l2410 01B1                                      l2402 019F  
                                    l2170 0504                                      l2162 055E  
                                    l2154 0551                                      l2420 01C6  
                                    l2412 01B2                                      l2404 01A3  
                                    l2500 0059                                      l2180 0517  
                                    l2172 0507                                      l2164 055F  
                                    l2156 0556                                      l2430 01DB  
                                    l2422 01CA                                      l2414 01B6  
                                    l2406 01A8                                      l2190 0405  
                                    l2510 0084                                      l2502 0064  
                                    l2182 0584                                      l2174 0509  
                                    l2166 04FA                                      l2158 0559  
                                    l2440 01F5                                      l2432 01E0  
                                    l2424 01D0                                      l2416 01BB  
                                    l2408 01AD                                      l2192 040C  
                                    l2520 00C7                                      l2512 0088  
                                    l2504 0070                                      l2184 0587  
                                    l2176 050B                                      l2168 0503  
                                    l2450 020A                                      l2434 01E7  
                                    l2442 01F8                                      l2418 01C2  
                                    l2426 01D3                                      l2194 040D  
                                    l2530 00DB                                      l2514 00A5  
                                    l2522 00CC                                      l2506 007B  
                                    l2186 0588                                      l2178 050D  
                                    l2370 0577                                      l2460 021F  
                                    l2452 020E                                      l2436 01EB  
                                    l2444 01FC                                      l2428 01D7  
                                    l2380 0178                                      l2372 0165  
                                    l2196 0412                                      l2540 00F7  
                                    l2532 00DF                                      l2524 00D3  
                                    l2516 00B0                                      l2508 0080  
                                    l2188 059D                                      l2620 0567  
                                    l2470 0230                                      l2462 0223  
                                    l2454 020F                                      l2446 0200  
                                    l2438 01EF                                      l2390 018B  
                                    l2382 0179                                      l2374 016A  
                                    l2550 012D                                      l2542 0103  
                                    l2534 00E3                                      l2526 00D4  
                                    l2518 00BC                                      l2622 056A  
                                    l2480 0247                                      l2472 0236  
                                    l2464 0224                                      l2456 0213  
                                    l2448 0205                                      l2392 018C  
                                    l2384 017D                                      l2376 016F  
                                    l2552 0139                                      l2544 010B  
                                    l2536 00E7                                      l2528 00DA  
                                    l2624 056E                                      l2490 025D  
                                    l2482 024E                                      l2474 023A  
                                    l2466 0229                                      l2458 0218  
                                    l2394 0190                                      l2386 0182  
                                    l2378 0174                                      l2554 013B  
                                    l2546 0117                                      l2562 014A  
                                    l2538 00EF                                      l2570 0352  
                                    l2626 0571                                      l2492 0261  
                                    l2484 0252                                      l2468 022C  
                                    l2476 023E                                      l2396 0195  
                                    l2388 0187                                      l2556 0140  
                                    l2564 0161                                      l2548 011F  
                                    l2572 0360                                      l2486 0253  
                                    l2478 0242                                      l2398 019A  
                                    l2558 0145                                      l2494 0034  
                                    l2590 03C7                                      l2582 03A1  
                                    l2574 036E                                      l2488 0257  
                                    l2496 0038                                      l2760 03AA  
                                    l2584 03B2                                      l2498 003C  
                                    l2762 03D0                                      l2594 03EA  
                                    l2578 0384                                      l2764 03F3  
                                    l2766 0153                                      l2758 038D  
                                    l2768 0489                                      u1100 045D  
                                    u1101 045C                                      u1110 046F  
                                    u1111 046E                                      u1040 040C  
                                    u2000 0360                                      u1041 040B  
                                    u2001 035F                                      u1050 0412  
                                    u2010 0364                                      u1051 0411  
                                    u2011 0363                                      u1060 0416  
                                    u2020 036E                                      u1061 0415  
                                    u2021 036D                                      u1070 041D  
                                    u2030 0372                                      u1071 041C  
                                    u2031 0371                                      u1080 042F  
                                    u2040 03B7                                      u1081 042E  
                                    u2041 03B6                                      u1410 016A  
                                    u1090 0457                                      u1411 0169  
                                    u1091 0456                                      u1500 01BB  
                                    u1420 016F                                      u1501 01BA  
                                    u1421 016E                                      _LATA 010C  
                                    u1510 01C2                                      u1430 017D  
                                    _LATB 010D                                      u1511 01C1  
                                    u1431 017C                                      _LATC 010E  
                                    u1600 0218                                      u1520 01D0  
                                    u1440 0182                                      _LATD 010F  
                                    u1601 0217                                      u1521 01CF  
                                    u1441 0181                                      _LATE 0110  
                                    u1610 021F                                      u1530 01DB  
                                    u1450 0190                                      u1611 021E  
                                    u1531 01DA                                      u1451 018F  
                                    u1620 0229                                      u1540 01E0  
                                    u1460 0195                                      u1700 0041  
                                    u1621 0228                                      u1541 01DF  
                                    u1461 0194                                      u1701 003F  
                                    u1630 0236                                      u1550 01E7  
                                    u1470 01A3                                      u1710 0049  
                                    u1702 0042                                      u1631 0235  
                                    u1551 01E6                                      u1471 01A2  
                                    u1711 0047                                      u1640 0242  
                                    u1560 01F5                                      u1480 01A8  
                                    u1800 0095                                      u1720 004F  
                                    u1712 004A                                      u1641 0241  
                                    u1561 01F4                                      u1481 01A7  
                                    u1801 0093                                      u1721 004E  
                                    u1650 0247                                      u1570 0200  
                                    u1490 01B6                                      u1810 009B  
                                    u1802 0096                                      u1730 0057  
                                    u1651 0246                                      u1571 01FF  
                                    u1491 01B5                                      u1811 009A  
                                    u1731 0056                                      u1660 024E  
                                    u1580 0205                                      u1900 00E7  
                                    u1820 00A3                                      u1740 005F  
                                    u1661 024D                                      u1581 0204  
                                    u1901 00E6                                      u1821 00A2  
                                    u1741 005E                                      u1670 025D  
                                    u1590 0213                                      u1910 00EB  
                                    u1830 00AB                                      u1750 006E  
                                    u1671 025C                                      u1591 0212  
                                    u1911 00EA                                      u1831 00AA  
                                    u1751 006D                                      u1920 00F5  
                                    u1840 00BA                                      u1760 0076  
                                    u1680 0038                                      u1921 00F4  
                                    u1841 00B9                                      u1761 0075  
                                    u1681 0037                                      u1930 00FD  
                                    u1850 00C2                                      u1770 0084  
                                    u1690 003C                                      u1931 00FC  
                                    u1851 00C1                                      u1771 0083  
                                    u1691 003B                                      u1940 0109  
                                    u1860 00D3                                      u1780 0088  
                                    u1941 0108                                      u1861 00D2  
                                    u1781 0087                                      u1950 0111  
                                    u1870 00DA                                      u1790 008D  
                                    u1951 0110                                      u1871 00D9  
                                    u1791 008B                                      u1960 011D  
                                    u1880 00DF                                      u1792 008E  
                                    u1961 011C                                      u1881 00DE  
                                    u1970 0125                                      u1890 00E3  
                                    u1971 0124                                      u1891 00E2  
                                    u1980 0133                                      u1981 0132  
                                    u1990 0356                                      u1991 0355  
                                    _LEDs 0352                                      _TMR0 0015  
                                    _WPUB 020D                                      _WPUE 0210  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 0567                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      fsr1l 0006  
                                    btemp 007E                       _lift_close_debounce 0034  
                           __CFG_BOREN$ON 0000                                      start 0013  
                           __CFG_IESO$OFF 0000                           __end_of_Execute 0165  
                         __end_of_Massage 049A                   __end_of_TMR0_Initialize 0567  
                                   ?_LEDs 0070            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 058B  
                                   ?_main 0070                           __end_of___awdiv 04FA  
                           __CFG_WDTE$OFF 0000                           ___awdiv@divisor 0076  
                                   i1l110 027D                                     i1l111 0284  
                                   i1l112 028B                                     i1l121 02D2  
                                   i1l113 0292                                     i1l135 05BA  
                                   i1l119 02D6                                     i1l304 0011  
                                   i1l129 0351                           ___awdiv@counter 0054  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                                     _TRISD 008F  
                                   _TRISE 0090         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 005D                          __end_of_TMR0_ISR 0352  
                      __size_of_Z1SetHigh 0003                          __end_of_Z1SetLow 05A7  
                        __end_of_Z2SetLow 05AA                        __size_of_Z2SetHigh 0003  
                        __end_of_Z3SetLow 05A4                            _WDT_Initialize 059D  
                        __end_of_Z4SetLow 05AD                        __size_of_Z3SetHigh 0003  
                      __size_of_Z4SetHigh 0003                            __pbitbssCOMMON 03D8  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                          __end_of_Debounce 0266  
                            __end_of_LEDs 0405                            __CFG_MCLRE$OFF 0000  
                         __initialization 0015                              __end_of_main 0577  
                                  ??_LEDs 005D                            _heat1_debounce 0031  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 0061  
                          _heat2_debounce 0030                            __CFG_PLLEN$OFF 0000  
                  __end_of_WDT_Initialize 05A1                 _massage_intensity_setting 007C  
                        ___awdiv@dividend 0078                                    _APFCON 011D  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELD 018F                                    _ANSELE 0190  
                                  _BORCON 0116                                    i1l1070 0526  
                                  i1l1223 04F9                                    i1l1072 053A  
                                  i1l2300 029D                                    i1l2230 0530  
                                  i1l2222 051C                                    i1l2310 02B5  
                                  i1l2302 02A1                                    u120_20 04CC  
                                  i1l2240 04A0                                    i1l2232 0536  
                                  u112_20 0522                                    i1l2224 051E  
                                  i1l2320 02CD                                    i1l2312 02BB  
                                  i1l2304 02A7                                    u120_21 04CB  
                                  u112_21 0521                                    i1l2250 04B4  
                                  i1l2242 04A5                                    i1l2226 0522  
                                  i1l2330 02E3                                    i1l2322 02D3  
                                  i1l2306 02AB                                    i1l2314 02BF  
                                  i1l2260 04C8                                    i1l2252 04B6  
                                  i1l2244 04A7                                    i1l2236 049A  
                                  i1l2228 052B                                    i1l2340 02F9  
                                  i1l2332 02E7                                    i1l2324 02D7  
                                  i1l2316 02C3                                    i1l2308 02B1  
                                  i1l2270 04E5                                    i1l2262 04CC  
                                  i1l2254 04BC                                    i1l2246 04AB  
                                  i1l2238 049C                                    i1l2350 030D  
                                  i1l2342 02FD                                    i1l2334 02ED  
                                  i1l2318 02C7                                    i1l2326 02DB  
                                  i1l2264 04DB                                    i1l2256 04BF  
                                  i1l2272 04EB                                    i1l2248 04B0  
                                  i1l2360 0321                                    i1l2352 0311  
                                  i1l2344 0301                                    i1l2336 02F2  
                                  i1l2328 02E0                                    i1l2280 0266  
                                  i1l2274 04F0                                    i1l2266 04DF  
                                  i1l2258 04C4                                    i1l2354 0315  
                                  i1l2346 0305                                    i1l2338 02F8  
                                  i1l2362 0323                                    i1l2290 027B  
                                  i1l2282 0267                                    i1l2276 04F5  
                                  i1l2268 04E0                                    i1l2364 0327  
                                  i1l2356 0319                                    i1l2348 0309  
                                  i1l2292 0282                                    i1l2284 026A  
                                  u121_25 04CD                                    u113_25 0527  
                                  i1l2366 032B                                    i1l2358 031D  
                                  i1l2294 0289                                    i1l2286 0270  
                                  i1l2614 0006                                    u122_20 04DB  
                                  i1l2368 034C                                    i1l2296 0290  
                                  u130_20 0290                                    i1l2288 0275  
                                  i1l2616 000A                                    u122_21 04DA  
                                  u130_21 028F                                    i1l2298 0298  
                                  i1l2618 000E                                    u122_25 04D7  
                                  u114_25 052C                                    u115_20 0536  
                                  u131_20 0298                                    u115_21 0535  
                                  u131_21 0297                                    u123_25 04E1  
                                  u124_20 04EB                                    u116_20 04A0  
                                  u140_20 02F8                                    u132_20 02A7  
                                  u124_21 04EA                                    u116_21 049F  
                                  u140_21 02F7                                    u132_21 02A6  
                                  u125_20 04F0                                    u117_20 04AB  
                                  u133_20 02B1                                    u205_20 000A  
                                  u125_21 04EF                                    u117_21 04AA  
                                  u133_21 02B0                                    u205_21 0009  
                                  u118_20 04BC                                    u134_20 02BB  
                                  u126_20 0270                                    u206_20 000E  
                                  u118_21 04BB                                    u134_21 02BA  
                                  u126_21 026F                                    u206_21 000D  
                                  u135_20 02C3                                    u127_20 027B  
                                  u135_21 02C2                                    u127_21 027A  
                                  u119_25 04C0                                    u136_20 02C7  
                                  u128_20 0282                                    u136_21 02C6  
                                  u128_21 0281                                    u137_20 02CD  
                                  u129_20 0289                                    u137_21 02CC  
                                  u129_21 0288                                    u138_20 02E0  
                                  u138_21 02DF                                    u139_20 02ED  
                                  u139_21 02EC                                    _OSCCON 0099  
                                  _WDTCON 0097                                 ??_Execute 005F  
                               ??_Massage 005D                            __CFG_PWRTE$OFF 0000  
                              _WaveGap1On 0044                                _WaveGap2On 0040  
                       __end_of_Z1SetHigh 05B3                                    ___wmul 051C  
                       __end_of_Z2SetHigh 05B6                                 ??___awdiv 007A  
                          __CFG_STVREN$ON 0000                         __end_of_Z3SetHigh 05B0  
                       __end_of_Z4SetHigh 05B9                                _WaveOutOff 0046  
                        ?_TMR0_Initialize 0070                          ___awdiv@quotient 0056  
                         _lift_open_delay 003D                           _lift_open_state 03DB  
                            __pdataCOMMON 007D                           ?_WDT_Initialize 0070  
                     _intensity_btn_state 0320                           _pulse_direction 03DC  
TMR0_SetInterruptHandler@InterruptHandler 005D                         _SYSTEM_Initialize 0577  
                 __end_of__initialization 0030                        ?_SYSTEM_Initialize 0070  
                        _lift_close_delay 003C                       _back_close_debounce 0032  
                        _lift_close_state 03DA                        _WavePlaceHolderOff 004E  
                          __pcstackCOMMON 0070                              __pidataBANK0 053B  
                     ??_SYSTEM_Initialize 0060                                 ?_TMR0_ISR 0070  
                               ?_Z1SetLow 0070                                 ?_Z2SetLow 0070  
                               ?_Z3SetLow 0070                                 ?_Z4SetLow 0070  
                           _massage_phase 0036                             _massage_timer 0020  
                          _OPTION_REGbits 0095                                 ?_Debounce 0070  
               __end_of_SYSTEM_Initialize 0584                                __pbssBANK0 0020  
                         __CFG_VCAPEN$OFF 0000                   _pulse_wave_in_intensity 0038  
                              __pmaintext 0567          __end_of_TMR0_SetInterruptHandler 059D  
                                 ?___wmul 0070                                ??_TMR0_ISR 0058  
                              ??_Z1SetLow 005D                                __pintentry 0004  
                              ??_Z2SetLow 005D                                ??_Z3SetLow 005D  
                              ??_Z4SetLow 005D                             _lock_debounce 002D  
                      _back_open_debounce 0033                                ??_Debounce 005D  
                                 _OSCTUNE 0098                             _mode_debounce 002E  
                                 _Execute 0034                                   _Massage 0405  
                             _WaveGap1Off 0042                               _WaveGap2Off 003E  
                                 ___awdiv 049A                           __size_of___wmul 001F  
                                 __ptext1 0577                                   __ptext2 059D  
                                 __ptext3 0551                                   __ptext4 0597  
                                 __ptext5 04FA                                   __ptext6 0584  
                                 __ptext7 0352                                   __ptext8 0034  
                                 __ptext9 0405                                _lock_timer 0028  
                   _OSCILLATOR_Initialize 0584                  ??_PIN_MANAGER_Initialize 005D  
              __size_of_SYSTEM_Initialize 000D                                   clrloop0 0592  
                    end_of_initialization 0030                                   init_ram 058B  
                                 initloop 058C                                 _Z1SetHigh 05B0  
                        ??_WDT_Initialize 005D                  _TMR0_SetInterruptHandler 0597  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                               _Z2SetHigh 05B3                                 _PORTCbits 000E  
                               _PORTDbits 000F                                 _PORTEbits 0010  
                               _Z3SetHigh 05AD                                 _Z4SetHigh 05B6  
                        __CFG_FOSC$INTOSC 0000                            __end_of___wmul 053B  
                           __pidataCOMMON 05B9                         __size_of_TMR0_ISR 00EC  
                              ?_Z1SetHigh 0070                         __size_of_Z1SetLow 0003  
                              ?_Z2SetHigh 0070                         __size_of_Z2SetLow 0003  
                  ?_OSCILLATOR_Initialize 0070                             __pbitbssBANK0 0320  
                       __size_of_Z3SetLow 0003                                ?_Z3SetHigh 0070  
                       __size_of_Z4SetLow 0003                  _pulse_wave_out_intensity 0037  
                              ?_Z4SetHigh 0070                       start_initialization 0015  
                __size_of_TMR0_Initialize 0016           __size_of_PIN_MANAGER_Initialize 0022  
                       __size_of_Debounce 0101                                 _WaveInOff 004A  
                      _intensity_debounce 002F                                 _WaveOutOn 0048  
                                ??___wmul 0074                               __pdataBANK0 003E  
                             __pbssCOMMON 007C                                 ___latbits 0002  
                           __pcstackBANK0 0054                         _WavePlaceHolderOn 0050  
                            _massage_mode 002A                               _heat1_timer 0024  
                             _heat1_state 002C                               _heat2_timer 0022  
                             _heat2_state 002B                        _phase_change_timer 0026  
                   _TMR0_InterruptHandler 0061                          _back_close_delay 003A  
                               __pnvBANK0 0061                                  ?_Execute 0070  
                                ?_Massage 0070                          _back_close_state 03D8  
                  _PIN_MANAGER_Initialize 04FA                         _massage_intensity 0039  
                                ?___awdiv 0076                               ??_Z1SetHigh 005D  
            ??_INTERRUPT_InterruptManager 007B                               ??_Z2SetHigh 005D  
                             ??_Z3SetHigh 005D                               ??_Z4SetHigh 005D  
                          _lock_actuators 03DE                                 _lock_flag 03DD  
                       ??_TMR0_Initialize 005F                            ___wmul@product 0074  
                                _LATAbits 010C                                  _LATBbits 010D  
                                _LATCbits 010E                                  _LATDbits 010F  
                                _LATEbits 0110                                 clear_ram0 0591  
                          _lock_btn_state 03DF       __size_of_INTERRUPT_InterruptManager 000F  
              ??_TMR0_SetInterruptHandler 005F                                  _TMR0_ISR 0266  
                                _Z1SetLow 05A4                                  _Z2SetLow 05A7  
                                _Z3SetLow 05A1                                  _Z4SetLow 05AA  
                               _pwm_count 007D                        _lift_open_debounce 0035  
                       ___wmul@multiplier 0070                                  _Debounce 0165  
                            _second_timer 0052                            _mode_btn_state 0321  
                        __size_of_Execute 0131                          __size_of_Massage 0095  
                                _WaveInOn 004C                   ??_OSCILLATOR_Initialize 005D  
                        __size_of___awdiv 0060                                  __ptext10 05A1  
                                __ptext11 05A4                                  __ptext20 0266  
                                __ptext12 05A7                                  __ptext21 051C  
                                __ptext13 05AA                                  __ptext22 049A  
                                __ptext14 05AD                                  __ptext23 05BA  
                                __ptext15 05B0                                  __ptext16 05B3  
                                __ptext17 05B6                                  __ptext18 0165  
                           __size_of_LEDs 00B3                             __size_of_main 0010  
    __end_of_TMR0_DefaultInterruptHandler 05BB     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 05BA                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0013                _INTERRUPT_InterruptManager 0004  
                              _INTCONbits 000B                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                           _back_open_delay 003B  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                         _back_open_state 03D9             ?_TMR0_DefaultInterruptHandler 0070  
                              _OPTION_REG 0095                           _TMR0_Initialize 0551  
          __end_of_PIN_MANAGER_Initialize 051C  
