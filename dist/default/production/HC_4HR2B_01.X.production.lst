

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 04 15:41:14 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.10
    44                           ; Generated 31/07/2019 GMT
    45                           ; 
    46                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F1937 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0110                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018F                     	;# 
   147  0190                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  020D                     	;# 
   169  0210                     	;# 
   170  0211                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0291                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0294                     	;# 
   183  0295                     	;# 
   184  0295                     	;# 
   185  0296                     	;# 
   186  0298                     	;# 
   187  0298                     	;# 
   188  0299                     	;# 
   189  029A                     	;# 
   190  029B                     	;# 
   191  029C                     	;# 
   192  029C                     	;# 
   193  029D                     	;# 
   194  029E                     	;# 
   195  029F                     	;# 
   196  0311                     	;# 
   197  0311                     	;# 
   198  0312                     	;# 
   199  0313                     	;# 
   200  0314                     	;# 
   201  0315                     	;# 
   202  0315                     	;# 
   203  0316                     	;# 
   204  0318                     	;# 
   205  0318                     	;# 
   206  0319                     	;# 
   207  031A                     	;# 
   208  031C                     	;# 
   209  031C                     	;# 
   210  031D                     	;# 
   211  031E                     	;# 
   212  0394                     	;# 
   213  0395                     	;# 
   214  0396                     	;# 
   215  0415                     	;# 
   216  0416                     	;# 
   217  0417                     	;# 
   218  041C                     	;# 
   219  041D                     	;# 
   220  041E                     	;# 
   221  0791                     	;# 
   222  0792                     	;# 
   223  0793                     	;# 
   224  0794                     	;# 
   225  0795                     	;# 
   226  0798                     	;# 
   227  0799                     	;# 
   228  079A                     	;# 
   229  07A0                     	;# 
   230  07A1                     	;# 
   231  07A2                     	;# 
   232  07A3                     	;# 
   233  07A4                     	;# 
   234  07A5                     	;# 
   235  07A6                     	;# 
   236  07A7                     	;# 
   237  07A8                     	;# 
   238  07A9                     	;# 
   239  07AA                     	;# 
   240  07AB                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0110                     	;# 
   307  0111                     	;# 
   308  0112                     	;# 
   309  0113                     	;# 
   310  0114                     	;# 
   311  0115                     	;# 
   312  0116                     	;# 
   313  0117                     	;# 
   314  0118                     	;# 
   315  0119                     	;# 
   316  011A                     	;# 
   317  011B                     	;# 
   318  011D                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  018F                     	;# 
   322  0190                     	;# 
   323  0191                     	;# 
   324  0191                     	;# 
   325  0192                     	;# 
   326  0193                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0194                     	;# 
   330  0195                     	;# 
   331  0196                     	;# 
   332  0199                     	;# 
   333  019A                     	;# 
   334  019B                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019B                     	;# 
   338  019C                     	;# 
   339  019C                     	;# 
   340  019D                     	;# 
   341  019E                     	;# 
   342  019F                     	;# 
   343  020D                     	;# 
   344  0210                     	;# 
   345  0211                     	;# 
   346  0212                     	;# 
   347  0213                     	;# 
   348  0214                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0217                     	;# 
   353  0291                     	;# 
   354  0291                     	;# 
   355  0292                     	;# 
   356  0293                     	;# 
   357  0294                     	;# 
   358  0295                     	;# 
   359  0295                     	;# 
   360  0296                     	;# 
   361  0298                     	;# 
   362  0298                     	;# 
   363  0299                     	;# 
   364  029A                     	;# 
   365  029B                     	;# 
   366  029C                     	;# 
   367  029C                     	;# 
   368  029D                     	;# 
   369  029E                     	;# 
   370  029F                     	;# 
   371  0311                     	;# 
   372  0311                     	;# 
   373  0312                     	;# 
   374  0313                     	;# 
   375  0314                     	;# 
   376  0315                     	;# 
   377  0315                     	;# 
   378  0316                     	;# 
   379  0318                     	;# 
   380  0318                     	;# 
   381  0319                     	;# 
   382  031A                     	;# 
   383  031C                     	;# 
   384  031C                     	;# 
   385  031D                     	;# 
   386  031E                     	;# 
   387  0394                     	;# 
   388  0395                     	;# 
   389  0396                     	;# 
   390  0415                     	;# 
   391  0416                     	;# 
   392  0417                     	;# 
   393  041C                     	;# 
   394  041D                     	;# 
   395  041E                     	;# 
   396  0791                     	;# 
   397  0792                     	;# 
   398  0793                     	;# 
   399  0794                     	;# 
   400  0795                     	;# 
   401  0798                     	;# 
   402  0799                     	;# 
   403  079A                     	;# 
   404  07A0                     	;# 
   405  07A1                     	;# 
   406  07A2                     	;# 
   407  07A3                     	;# 
   408  07A4                     	;# 
   409  07A5                     	;# 
   410  07A6                     	;# 
   411  07A7                     	;# 
   412  07A8                     	;# 
   413  07A9                     	;# 
   414  07AA                     	;# 
   415  07AB                     	;# 
   416  0FE4                     	;# 
   417  0FE5                     	;# 
   418  0FE6                     	;# 
   419  0FE7                     	;# 
   420  0FE8                     	;# 
   421  0FE9                     	;# 
   422  0FEA                     	;# 
   423  0FEB                     	;# 
   424  0FED                     	;# 
   425  0FEE                     	;# 
   426  0FEF                     	;# 
   427  0000                     	;# 
   428  0001                     	;# 
   429  0002                     	;# 
   430  0003                     	;# 
   431  0004                     	;# 
   432  0005                     	;# 
   433  0006                     	;# 
   434  0007                     	;# 
   435  0008                     	;# 
   436  0009                     	;# 
   437  000A                     	;# 
   438  000B                     	;# 
   439  000C                     	;# 
   440  000D                     	;# 
   441  000E                     	;# 
   442  000F                     	;# 
   443  0010                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0015                     	;# 
   448  0016                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001C                     	;# 
   456  001E                     	;# 
   457  001F                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0095                     	;# 
   467  0096                     	;# 
   468  0097                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009A                     	;# 
   472  009B                     	;# 
   473  009B                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  010C                     	;# 
   478  010D                     	;# 
   479  010E                     	;# 
   480  010F                     	;# 
   481  0110                     	;# 
   482  0111                     	;# 
   483  0112                     	;# 
   484  0113                     	;# 
   485  0114                     	;# 
   486  0115                     	;# 
   487  0116                     	;# 
   488  0117                     	;# 
   489  0118                     	;# 
   490  0119                     	;# 
   491  011A                     	;# 
   492  011B                     	;# 
   493  011D                     	;# 
   494  018C                     	;# 
   495  018D                     	;# 
   496  018F                     	;# 
   497  0190                     	;# 
   498  0191                     	;# 
   499  0191                     	;# 
   500  0192                     	;# 
   501  0193                     	;# 
   502  0193                     	;# 
   503  0193                     	;# 
   504  0194                     	;# 
   505  0195                     	;# 
   506  0196                     	;# 
   507  0199                     	;# 
   508  019A                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019C                     	;# 
   514  019C                     	;# 
   515  019D                     	;# 
   516  019E                     	;# 
   517  019F                     	;# 
   518  020D                     	;# 
   519  0210                     	;# 
   520  0211                     	;# 
   521  0212                     	;# 
   522  0213                     	;# 
   523  0214                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0216                     	;# 
   527  0217                     	;# 
   528  0291                     	;# 
   529  0291                     	;# 
   530  0292                     	;# 
   531  0293                     	;# 
   532  0294                     	;# 
   533  0295                     	;# 
   534  0295                     	;# 
   535  0296                     	;# 
   536  0298                     	;# 
   537  0298                     	;# 
   538  0299                     	;# 
   539  029A                     	;# 
   540  029B                     	;# 
   541  029C                     	;# 
   542  029C                     	;# 
   543  029D                     	;# 
   544  029E                     	;# 
   545  029F                     	;# 
   546  0311                     	;# 
   547  0311                     	;# 
   548  0312                     	;# 
   549  0313                     	;# 
   550  0314                     	;# 
   551  0315                     	;# 
   552  0315                     	;# 
   553  0316                     	;# 
   554  0318                     	;# 
   555  0318                     	;# 
   556  0319                     	;# 
   557  031A                     	;# 
   558  031C                     	;# 
   559  031C                     	;# 
   560  031D                     	;# 
   561  031E                     	;# 
   562  0394                     	;# 
   563  0395                     	;# 
   564  0396                     	;# 
   565  0415                     	;# 
   566  0416                     	;# 
   567  0417                     	;# 
   568  041C                     	;# 
   569  041D                     	;# 
   570  041E                     	;# 
   571  0791                     	;# 
   572  0792                     	;# 
   573  0793                     	;# 
   574  0794                     	;# 
   575  0795                     	;# 
   576  0798                     	;# 
   577  0799                     	;# 
   578  079A                     	;# 
   579  07A0                     	;# 
   580  07A1                     	;# 
   581  07A2                     	;# 
   582  07A3                     	;# 
   583  07A4                     	;# 
   584  07A5                     	;# 
   585  07A6                     	;# 
   586  07A7                     	;# 
   587  07A8                     	;# 
   588  07A9                     	;# 
   589  07AA                     	;# 
   590  07AB                     	;# 
   591  0FE4                     	;# 
   592  0FE5                     	;# 
   593  0FE6                     	;# 
   594  0FE7                     	;# 
   595  0FE8                     	;# 
   596  0FE9                     	;# 
   597  0FEA                     	;# 
   598  0FEB                     	;# 
   599  0FED                     	;# 
   600  0FEE                     	;# 
   601  0FEF                     	;# 
   602  0000                     	;# 
   603  0001                     	;# 
   604  0002                     	;# 
   605  0003                     	;# 
   606  0004                     	;# 
   607  0005                     	;# 
   608  0006                     	;# 
   609  0007                     	;# 
   610  0008                     	;# 
   611  0009                     	;# 
   612  000A                     	;# 
   613  000B                     	;# 
   614  000C                     	;# 
   615  000D                     	;# 
   616  000E                     	;# 
   617  000F                     	;# 
   618  0010                     	;# 
   619  0011                     	;# 
   620  0012                     	;# 
   621  0013                     	;# 
   622  0015                     	;# 
   623  0016                     	;# 
   624  0016                     	;# 
   625  0017                     	;# 
   626  0018                     	;# 
   627  0019                     	;# 
   628  001A                     	;# 
   629  001B                     	;# 
   630  001C                     	;# 
   631  001E                     	;# 
   632  001F                     	;# 
   633  008C                     	;# 
   634  008D                     	;# 
   635  008E                     	;# 
   636  008F                     	;# 
   637  0090                     	;# 
   638  0091                     	;# 
   639  0092                     	;# 
   640  0093                     	;# 
   641  0095                     	;# 
   642  0096                     	;# 
   643  0097                     	;# 
   644  0098                     	;# 
   645  0099                     	;# 
   646  009A                     	;# 
   647  009B                     	;# 
   648  009B                     	;# 
   649  009C                     	;# 
   650  009D                     	;# 
   651  009E                     	;# 
   652  010C                     	;# 
   653  010D                     	;# 
   654  010E                     	;# 
   655  010F                     	;# 
   656  0110                     	;# 
   657  0111                     	;# 
   658  0112                     	;# 
   659  0113                     	;# 
   660  0114                     	;# 
   661  0115                     	;# 
   662  0116                     	;# 
   663  0117                     	;# 
   664  0118                     	;# 
   665  0119                     	;# 
   666  011A                     	;# 
   667  011B                     	;# 
   668  011D                     	;# 
   669  018C                     	;# 
   670  018D                     	;# 
   671  018F                     	;# 
   672  0190                     	;# 
   673  0191                     	;# 
   674  0191                     	;# 
   675  0192                     	;# 
   676  0193                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0194                     	;# 
   680  0195                     	;# 
   681  0196                     	;# 
   682  0199                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019C                     	;# 
   689  019C                     	;# 
   690  019D                     	;# 
   691  019E                     	;# 
   692  019F                     	;# 
   693  020D                     	;# 
   694  0210                     	;# 
   695  0211                     	;# 
   696  0212                     	;# 
   697  0213                     	;# 
   698  0214                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0216                     	;# 
   702  0217                     	;# 
   703  0291                     	;# 
   704  0291                     	;# 
   705  0292                     	;# 
   706  0293                     	;# 
   707  0294                     	;# 
   708  0295                     	;# 
   709  0295                     	;# 
   710  0296                     	;# 
   711  0298                     	;# 
   712  0298                     	;# 
   713  0299                     	;# 
   714  029A                     	;# 
   715  029B                     	;# 
   716  029C                     	;# 
   717  029C                     	;# 
   718  029D                     	;# 
   719  029E                     	;# 
   720  029F                     	;# 
   721  0311                     	;# 
   722  0311                     	;# 
   723  0312                     	;# 
   724  0313                     	;# 
   725  0314                     	;# 
   726  0315                     	;# 
   727  0315                     	;# 
   728  0316                     	;# 
   729  0318                     	;# 
   730  0318                     	;# 
   731  0319                     	;# 
   732  031A                     	;# 
   733  031C                     	;# 
   734  031C                     	;# 
   735  031D                     	;# 
   736  031E                     	;# 
   737  0394                     	;# 
   738  0395                     	;# 
   739  0396                     	;# 
   740  0415                     	;# 
   741  0416                     	;# 
   742  0417                     	;# 
   743  041C                     	;# 
   744  041D                     	;# 
   745  041E                     	;# 
   746  0791                     	;# 
   747  0792                     	;# 
   748  0793                     	;# 
   749  0794                     	;# 
   750  0795                     	;# 
   751  0798                     	;# 
   752  0799                     	;# 
   753  079A                     	;# 
   754  07A0                     	;# 
   755  07A1                     	;# 
   756  07A2                     	;# 
   757  07A3                     	;# 
   758  07A4                     	;# 
   759  07A5                     	;# 
   760  07A6                     	;# 
   761  07A7                     	;# 
   762  07A8                     	;# 
   763  07A9                     	;# 
   764  07AA                     	;# 
   765  07AB                     	;# 
   766  0FE4                     	;# 
   767  0FE5                     	;# 
   768  0FE6                     	;# 
   769  0FE7                     	;# 
   770  0FE8                     	;# 
   771  0FE9                     	;# 
   772  0FEA                     	;# 
   773  0FEB                     	;# 
   774  0FED                     	;# 
   775  0FEE                     	;# 
   776  0FEF                     	;# 
   777  0000                     	;# 
   778  0001                     	;# 
   779  0002                     	;# 
   780  0003                     	;# 
   781  0004                     	;# 
   782  0005                     	;# 
   783  0006                     	;# 
   784  0007                     	;# 
   785  0008                     	;# 
   786  0009                     	;# 
   787  000A                     	;# 
   788  000B                     	;# 
   789  000C                     	;# 
   790  000D                     	;# 
   791  000E                     	;# 
   792  000F                     	;# 
   793  0010                     	;# 
   794  0011                     	;# 
   795  0012                     	;# 
   796  0013                     	;# 
   797  0015                     	;# 
   798  0016                     	;# 
   799  0016                     	;# 
   800  0017                     	;# 
   801  0018                     	;# 
   802  0019                     	;# 
   803  001A                     	;# 
   804  001B                     	;# 
   805  001C                     	;# 
   806  001E                     	;# 
   807  001F                     	;# 
   808  008C                     	;# 
   809  008D                     	;# 
   810  008E                     	;# 
   811  008F                     	;# 
   812  0090                     	;# 
   813  0091                     	;# 
   814  0092                     	;# 
   815  0093                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0097                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009A                     	;# 
   822  009B                     	;# 
   823  009B                     	;# 
   824  009C                     	;# 
   825  009D                     	;# 
   826  009E                     	;# 
   827  010C                     	;# 
   828  010D                     	;# 
   829  010E                     	;# 
   830  010F                     	;# 
   831  0110                     	;# 
   832  0111                     	;# 
   833  0112                     	;# 
   834  0113                     	;# 
   835  0114                     	;# 
   836  0115                     	;# 
   837  0116                     	;# 
   838  0117                     	;# 
   839  0118                     	;# 
   840  0119                     	;# 
   841  011A                     	;# 
   842  011B                     	;# 
   843  011D                     	;# 
   844  018C                     	;# 
   845  018D                     	;# 
   846  018F                     	;# 
   847  0190                     	;# 
   848  0191                     	;# 
   849  0191                     	;# 
   850  0192                     	;# 
   851  0193                     	;# 
   852  0193                     	;# 
   853  0193                     	;# 
   854  0194                     	;# 
   855  0195                     	;# 
   856  0196                     	;# 
   857  0199                     	;# 
   858  019A                     	;# 
   859  019B                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019C                     	;# 
   864  019C                     	;# 
   865  019D                     	;# 
   866  019E                     	;# 
   867  019F                     	;# 
   868  020D                     	;# 
   869  0210                     	;# 
   870  0211                     	;# 
   871  0212                     	;# 
   872  0213                     	;# 
   873  0214                     	;# 
   874  0215                     	;# 
   875  0215                     	;# 
   876  0216                     	;# 
   877  0217                     	;# 
   878  0291                     	;# 
   879  0291                     	;# 
   880  0292                     	;# 
   881  0293                     	;# 
   882  0294                     	;# 
   883  0295                     	;# 
   884  0295                     	;# 
   885  0296                     	;# 
   886  0298                     	;# 
   887  0298                     	;# 
   888  0299                     	;# 
   889  029A                     	;# 
   890  029B                     	;# 
   891  029C                     	;# 
   892  029C                     	;# 
   893  029D                     	;# 
   894  029E                     	;# 
   895  029F                     	;# 
   896  0311                     	;# 
   897  0311                     	;# 
   898  0312                     	;# 
   899  0313                     	;# 
   900  0314                     	;# 
   901  0315                     	;# 
   902  0315                     	;# 
   903  0316                     	;# 
   904  0318                     	;# 
   905  0318                     	;# 
   906  0319                     	;# 
   907  031A                     	;# 
   908  031C                     	;# 
   909  031C                     	;# 
   910  031D                     	;# 
   911  031E                     	;# 
   912  0394                     	;# 
   913  0395                     	;# 
   914  0396                     	;# 
   915  0415                     	;# 
   916  0416                     	;# 
   917  0417                     	;# 
   918  041C                     	;# 
   919  041D                     	;# 
   920  041E                     	;# 
   921  0791                     	;# 
   922  0792                     	;# 
   923  0793                     	;# 
   924  0794                     	;# 
   925  0795                     	;# 
   926  0798                     	;# 
   927  0799                     	;# 
   928  079A                     	;# 
   929  07A0                     	;# 
   930  07A1                     	;# 
   931  07A2                     	;# 
   932  07A3                     	;# 
   933  07A4                     	;# 
   934  07A5                     	;# 
   935  07A6                     	;# 
   936  07A7                     	;# 
   937  07A8                     	;# 
   938  07A9                     	;# 
   939  07AA                     	;# 
   940  07AB                     	;# 
   941  0FE4                     	;# 
   942  0FE5                     	;# 
   943  0FE6                     	;# 
   944  0FE7                     	;# 
   945  0FE8                     	;# 
   946  0FE9                     	;# 
   947  0FEA                     	;# 
   948  0FEB                     	;# 
   949  0FED                     	;# 
   950  0FEE                     	;# 
   951  0FEF                     	;# 
   952  0000                     	;# 
   953  0001                     	;# 
   954  0002                     	;# 
   955  0003                     	;# 
   956  0004                     	;# 
   957  0005                     	;# 
   958  0006                     	;# 
   959  0007                     	;# 
   960  0008                     	;# 
   961  0009                     	;# 
   962  000A                     	;# 
   963  000B                     	;# 
   964  000C                     	;# 
   965  000D                     	;# 
   966  000E                     	;# 
   967  000F                     	;# 
   968  0010                     	;# 
   969  0011                     	;# 
   970  0012                     	;# 
   971  0013                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  001E                     	;# 
   982  001F                     	;# 
   983  008C                     	;# 
   984  008D                     	;# 
   985  008E                     	;# 
   986  008F                     	;# 
   987  0090                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0093                     	;# 
   991  0095                     	;# 
   992  0096                     	;# 
   993  0097                     	;# 
   994  0098                     	;# 
   995  0099                     	;# 
   996  009A                     	;# 
   997  009B                     	;# 
   998  009B                     	;# 
   999  009C                     	;# 
  1000  009D                     	;# 
  1001  009E                     	;# 
  1002  010C                     	;# 
  1003  010D                     	;# 
  1004  010E                     	;# 
  1005  010F                     	;# 
  1006  0110                     	;# 
  1007  0111                     	;# 
  1008  0112                     	;# 
  1009  0113                     	;# 
  1010  0114                     	;# 
  1011  0115                     	;# 
  1012  0116                     	;# 
  1013  0117                     	;# 
  1014  0118                     	;# 
  1015  0119                     	;# 
  1016  011A                     	;# 
  1017  011B                     	;# 
  1018  011D                     	;# 
  1019  018C                     	;# 
  1020  018D                     	;# 
  1021  018F                     	;# 
  1022  0190                     	;# 
  1023  0191                     	;# 
  1024  0191                     	;# 
  1025  0192                     	;# 
  1026  0193                     	;# 
  1027  0193                     	;# 
  1028  0193                     	;# 
  1029  0194                     	;# 
  1030  0195                     	;# 
  1031  0196                     	;# 
  1032  0199                     	;# 
  1033  019A                     	;# 
  1034  019B                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019C                     	;# 
  1039  019C                     	;# 
  1040  019D                     	;# 
  1041  019E                     	;# 
  1042  019F                     	;# 
  1043  020D                     	;# 
  1044  0210                     	;# 
  1045  0211                     	;# 
  1046  0212                     	;# 
  1047  0213                     	;# 
  1048  0214                     	;# 
  1049  0215                     	;# 
  1050  0215                     	;# 
  1051  0216                     	;# 
  1052  0217                     	;# 
  1053  0291                     	;# 
  1054  0291                     	;# 
  1055  0292                     	;# 
  1056  0293                     	;# 
  1057  0294                     	;# 
  1058  0295                     	;# 
  1059  0295                     	;# 
  1060  0296                     	;# 
  1061  0298                     	;# 
  1062  0298                     	;# 
  1063  0299                     	;# 
  1064  029A                     	;# 
  1065  029B                     	;# 
  1066  029C                     	;# 
  1067  029C                     	;# 
  1068  029D                     	;# 
  1069  029E                     	;# 
  1070  029F                     	;# 
  1071  0311                     	;# 
  1072  0311                     	;# 
  1073  0312                     	;# 
  1074  0313                     	;# 
  1075  0314                     	;# 
  1076  0315                     	;# 
  1077  0315                     	;# 
  1078  0316                     	;# 
  1079  0318                     	;# 
  1080  0318                     	;# 
  1081  0319                     	;# 
  1082  031A                     	;# 
  1083  031C                     	;# 
  1084  031C                     	;# 
  1085  031D                     	;# 
  1086  031E                     	;# 
  1087  0394                     	;# 
  1088  0395                     	;# 
  1089  0396                     	;# 
  1090  0415                     	;# 
  1091  0416                     	;# 
  1092  0417                     	;# 
  1093  041C                     	;# 
  1094  041D                     	;# 
  1095  041E                     	;# 
  1096  0791                     	;# 
  1097  0792                     	;# 
  1098  0793                     	;# 
  1099  0794                     	;# 
  1100  0795                     	;# 
  1101  0798                     	;# 
  1102  0799                     	;# 
  1103  079A                     	;# 
  1104  07A0                     	;# 
  1105  07A1                     	;# 
  1106  07A2                     	;# 
  1107  07A3                     	;# 
  1108  07A4                     	;# 
  1109  07A5                     	;# 
  1110  07A6                     	;# 
  1111  07A7                     	;# 
  1112  07A8                     	;# 
  1113  07A9                     	;# 
  1114  07AA                     	;# 
  1115  07AB                     	;# 
  1116  0FE4                     	;# 
  1117  0FE5                     	;# 
  1118  0FE6                     	;# 
  1119  0FE7                     	;# 
  1120  0FE8                     	;# 
  1121  0FE9                     	;# 
  1122  0FEA                     	;# 
  1123  0FEB                     	;# 
  1124  0FED                     	;# 
  1125  0FEE                     	;# 
  1126  0FEF                     	;# 
  1127                           
  1128                           	psect	idataCOMMON
  1129  06AC                     __pidataCOMMON:	
  1130                           
  1131                           ;initializer for _pwm_count
  1132  06AC  3428               	retlw	40
  1133                           
  1134                           	psect	idataBANK0
  1135  0625                     __pidataBANK0:	
  1136                           
  1137                           ;initializer for _WaveGap2Off
  1138  0625  3494               	retlw	low _Z3SetLow
  1139  0626  3406               	retlw	high _Z3SetLow
  1140                           
  1141                           ;initializer for _WaveGap2On
  1142  0627  34A0               	retlw	low _Z3SetHigh
  1143  0628  3406               	retlw	high _Z3SetHigh
  1144                           
  1145                           ;initializer for _WaveGap1Off
  1146  0629  349D               	retlw	low _Z4SetLow
  1147  062A  3406               	retlw	high _Z4SetLow
  1148                           
  1149                           ;initializer for _WaveGap1On
  1150  062B  34A9               	retlw	low _Z4SetHigh
  1151  062C  3406               	retlw	high _Z4SetHigh
  1152                           
  1153                           ;initializer for _WaveOutOff
  1154  062D  3497               	retlw	low _Z1SetLow
  1155  062E  3406               	retlw	high _Z1SetLow
  1156                           
  1157                           ;initializer for _WaveOutOn
  1158  062F  34A3               	retlw	low _Z1SetHigh
  1159  0630  3406               	retlw	high _Z1SetHigh
  1160                           
  1161                           ;initializer for _WaveInOff
  1162  0631  349A               	retlw	low _Z2SetLow
  1163  0632  3406               	retlw	high _Z2SetLow
  1164                           
  1165                           ;initializer for _WaveInOn
  1166  0633  34A6               	retlw	low _Z2SetHigh
  1167  0634  3406               	retlw	high _Z2SetHigh
  1168                           
  1169                           ;initializer for _WavePlaceHolderOff
  1170  0635  349D               	retlw	low _Z4SetLow
  1171  0636  3406               	retlw	high _Z4SetLow
  1172                           
  1173                           ;initializer for _WavePlaceHolderOn
  1174  0637  34A9               	retlw	low _Z4SetHigh
  1175  0638  3406               	retlw	high _Z4SetHigh
  1176                           
  1177                           ;initializer for _led_flash_timer
  1178  0639  34F4               	retlw	244
  1179  063A  3401               	retlw	1
  1180                           
  1181                           ;initializer for _massage_hold_timer
  1182  063B  34D0               	retlw	208
  1183  063C  3407               	retlw	7
  1184                           
  1185                           ;initializer for _second_timer
  1186  063D  34E8               	retlw	232
  1187  063E  3403               	retlw	3
  1188                           
  1189                           ;initializer for _massage_intensity_setting
  1190  063F  3401               	retlw	1
  1191                           
  1192                           	psect	nvBANK0
  1193  0064                     __pnvBANK0:	
  1194  0064                     _TMR0_InterruptHandler:	
  1195  0064                     	ds	2
  1196  0066                     _timer0ReloadVal:	
  1197  0066                     	ds	1
  1198  000E                     _PORTCbits	set	14
  1199  000F                     _PORTDbits	set	15
  1200  000D                     _PORTBbits	set	13
  1201  0010                     _PORTEbits	set	16
  1202  000C                     _PORTAbits	set	12
  1203  000B                     _INTCONbits	set	11
  1204  0015                     _TMR0	set	21
  1205  0097                     _WDTCON	set	151
  1206  0098                     _OSCTUNE	set	152
  1207  0099                     _OSCCON	set	153
  1208  0095                     _OPTION_REGbits	set	149
  1209  008F                     _TRISD	set	143
  1210  008E                     _TRISC	set	142
  1211  008D                     _TRISB	set	141
  1212  008C                     _TRISA	set	140
  1213  0090                     _TRISE	set	144
  1214  0095                     _OPTION_REG	set	149
  1215  010D                     _LATBbits	set	269
  1216  0110                     _LATEbits	set	272
  1217  010C                     _LATAbits	set	268
  1218  0116                     _BORCON	set	278
  1219  011D                     _APFCON	set	285
  1220  010E                     _LATC	set	270
  1221  010D                     _LATB	set	269
  1222  010C                     _LATA	set	268
  1223  010F                     _LATD	set	271
  1224  0110                     _LATE	set	272
  1225  010F                     _LATDbits	set	271
  1226  010E                     _LATCbits	set	270
  1227  018C                     _ANSELA	set	396
  1228  0190                     _ANSELE	set	400
  1229  018D                     _ANSELB	set	397
  1230  018F                     _ANSELD	set	399
  1231  020D                     _WPUB	set	525
  1232  0210                     _WPUE	set	528
  1233                           
  1234                           ; #config settings
  1235  0000                     
  1236                           	psect	cinit
  1237  0015                     start_initialization:	
  1238  0015                     __initialization:	
  1239                           
  1240                           ; Initialize objects allocated to COMMON
  1241  0015  3186  26AC  3180   	fcall	__pidataCOMMON	;fetch initializer
  1242  0018  00FD               	movwf	__pdataCOMMON& (0+127)
  1243                           
  1244                           ; Initialize objects allocated to BANK0
  1245  0019  3025               	movlw	low __pidataBANK0
  1246  001A  0084               	movwf	4
  1247  001B  3086               	movlw	(high __pidataBANK0)| (0+128)
  1248  001C  0085               	movwf	5
  1249  001D  303F               	movlw	low __pdataBANK0
  1250  001E  0086               	movwf	6
  1251  001F  3000               	movlw	high __pdataBANK0
  1252  0020  0087               	movwf	7
  1253  0021  301B               	movlw	27
  1254  0022  3186  2684  3180   	fcall	init_ram
  1255                           
  1256                           ; Clear objects allocated to BITCOMMON
  1257  0025  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1258  0026  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  1259                           
  1260                           ; Clear objects allocated to BANK0
  1261  0027  3020               	movlw	low __pbssBANK0
  1262  0028  0084               	movwf	4
  1263  0029  3000               	movlw	high __pbssBANK0
  1264  002A  0085               	movwf	5
  1265  002B  301F               	movlw	31
  1266  002C  3186  268A  3180   	fcall	clear_ram0
  1267  002F                     end_of_initialization:	
  1268                           ;End of C runtime variable initialization code
  1269                           
  1270  002F                     __end_of__initialization:	
  1271  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1272  0030  0020               	movlb	0
  1273  0031  3186  2E57         	ljmp	_main	;jump to C main() function
  1274                           
  1275                           	psect	bitbssCOMMON
  1276  0380                     __pbitbssCOMMON:	
  1277  0380                     _intensity_btn_state:	
  1278  0380                     	ds	1
  1279  0381                     _back_close_state:	
  1280  0381                     	ds	1
  1281  0382                     _back_open_state:	
  1282  0382                     	ds	1
  1283  0383                     _lift_close_state:	
  1284  0383                     	ds	1
  1285  0384                     _lift_open_state:	
  1286  0384                     	ds	1
  1287  0385                     _mode_btn_state:	
  1288  0385                     	ds	1
  1289  0386                     _massage_power:	
  1290  0386                     	ds	1
  1291  0387                     _should_change_mode:	
  1292  0387                     	ds	1
  1293  0388                     _pulse_direction:	
  1294  0388                     	ds	1
  1295  0389                     _lock_flag:	
  1296  0389                     	ds	1
  1297  038A                     _hand_control_locked:	
  1298  038A                     	ds	1
  1299  038B                     _lock_btn_state:	
  1300  038B                     	ds	1
  1301                           
  1302                           	psect	dataCOMMON
  1303  007D                     __pdataCOMMON:	
  1304  007D                     _pwm_count:	
  1305  007D                     	ds	1
  1306                           
  1307                           	psect	bssBANK0
  1308  0020                     __pbssBANK0:	
  1309  0020                     _massage_timer:	
  1310  0020                     	ds	2
  1311  0022                     _heat2_timer:	
  1312  0022                     	ds	2
  1313  0024                     _heat1_timer:	
  1314  0024                     	ds	2
  1315  0026                     _phase_change_timer:	
  1316  0026                     	ds	2
  1317  0028                     _lock_timer:	
  1318  0028                     	ds	2
  1319  002A                     _heat2_state:	
  1320  002A                     	ds	1
  1321  002B                     _heat1_state:	
  1322  002B                     	ds	1
  1323  002C                     _lock_debounce:	
  1324  002C                     	ds	1
  1325  002D                     _mode_debounce:	
  1326  002D                     	ds	1
  1327  002E                     _intensity_debounce:	
  1328  002E                     	ds	1
  1329  002F                     _heat2_debounce:	
  1330  002F                     	ds	1
  1331  0030                     _heat1_debounce:	
  1332  0030                     	ds	1
  1333  0031                     _back_close_debounce:	
  1334  0031                     	ds	1
  1335  0032                     _back_open_debounce:	
  1336  0032                     	ds	1
  1337  0033                     _lift_close_debounce:	
  1338  0033                     	ds	1
  1339  0034                     _lift_open_debounce:	
  1340  0034                     	ds	1
  1341  0035                     _massage_mode:	
  1342  0035                     	ds	1
  1343  0036                     _massage_phase:	
  1344  0036                     	ds	1
  1345  0037                     _steady_massage_intensity:	
  1346  0037                     	ds	1
  1347  0038                     _pulse_wave_out_intensity:	
  1348  0038                     	ds	1
  1349  0039                     _pulse_wave_in_intensity:	
  1350  0039                     	ds	1
  1351  003A                     _massage_intensity:	
  1352  003A                     	ds	1
  1353  003B                     _back_close_delay:	
  1354  003B                     	ds	1
  1355  003C                     _back_open_delay:	
  1356  003C                     	ds	1
  1357  003D                     _lift_close_delay:	
  1358  003D                     	ds	1
  1359  003E                     _lift_open_delay:	
  1360  003E                     	ds	1
  1361                           
  1362                           	psect	dataBANK0
  1363  003F                     __pdataBANK0:	
  1364  003F                     _WaveGap2Off:	
  1365  003F                     	ds	2
  1366  0041                     _WaveGap2On:	
  1367  0041                     	ds	2
  1368  0043                     _WaveGap1Off:	
  1369  0043                     	ds	2
  1370  0045                     _WaveGap1On:	
  1371  0045                     	ds	2
  1372  0047                     _WaveOutOff:	
  1373  0047                     	ds	2
  1374  0049                     _WaveOutOn:	
  1375  0049                     	ds	2
  1376  004B                     _WaveInOff:	
  1377  004B                     	ds	2
  1378  004D                     _WaveInOn:	
  1379  004D                     	ds	2
  1380  004F                     _WavePlaceHolderOff:	
  1381  004F                     	ds	2
  1382  0051                     _WavePlaceHolderOn:	
  1383  0051                     	ds	2
  1384  0053                     _led_flash_timer:	
  1385  0053                     	ds	2
  1386  0055                     _massage_hold_timer:	
  1387  0055                     	ds	2
  1388  0057                     _second_timer:	
  1389  0057                     	ds	2
  1390  0059                     _massage_intensity_setting:	
  1391  0059                     	ds	1
  1392                           
  1393                           	psect	inittext
  1394  0684                     init_ram:	
  1395  0684  00FE               	movwf	btemp
  1396  0685                     initloop:	
  1397  0685  0012               	moviw fsr0++
  1398  0686  001E               	movwi fsr1++
  1399  0687  0BFE               	decfsz	btemp,f
  1400  0688  2E85               	goto	initloop
  1401  0689  3400               	retlw	0
  1402                           
  1403                           	psect	clrtext
  1404  068A                     clear_ram0:	
  1405                           ;	Called with FSR0 containing the base address, and
  1406                           ;	WREG with the size to clear
  1407                           
  1408  068A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1409  068B                     clrloop0:	
  1410  068B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1411  068C  3101               	addfsr 0,1
  1412  068D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1413  068E  2E8B               	goto	clrloop0	;have we reached the end yet?
  1414  068F  3400               	retlw	0	;all done for this memory range, return
  1415                           
  1416                           	psect	cstackBANK1
  1417  00A0                     __pcstackBANK1:	
  1418  00A0                     ?_TMR0_SetInterruptHandler:	
  1419  00A0                     ??_LEDs:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  00A0                     ??_Massage:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428                           
  1429                           ; 2 bytes @ 0x0
  1430  00A0                     	ds	2
  1431                           
  1432                           	psect	cstackCOMMON
  1433  0072                     __pcstackCOMMON:	
  1434  0072                     ?_Z4SetHigh:	
  1435  0072                     ?_Z4SetLow:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0072                     ?_Z2SetHigh:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0072                     ?_Z2SetLow:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0072                     ?_Z1SetHigh:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0072                     ?_Z1SetLow:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0072                     ?_Z3SetHigh:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0072                     ?_Z3SetLow:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0072                     ?_TMR0_DefaultInterruptHandler:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0072                     ??_TMR0_DefaultInterruptHandler:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0072                     ?_OSCILLATOR_Initialize:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0072                     ?_WDT_Initialize:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0072                     ?_Debounce:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0072                     ?_Execute:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0072                     ?_LEDs:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0072                     ?_Massage:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0072                     ?_TMR0_Initialize:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0072                     ?_TMR0_ISR:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0072                     ?_PIN_MANAGER_Initialize:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0072                     ?_INTERRUPT_InterruptManager:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0072                     ?_SYSTEM_Initialize:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0072                     ?_main:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0072                     ?___wmul:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0072                     ___wmul@multiplier:	
  1502                           ; 2 bytes @ 0x0
  1503                           
  1504                           
  1505                           ; 2 bytes @ 0x0
  1506  0072                     	ds	2
  1507  0074                     ___wmul@multiplicand:	
  1508                           
  1509                           ; 2 bytes @ 0x2
  1510  0074                     	ds	2
  1511  0076                     ??___wmul:	
  1512  0076                     ___wmul@product:	
  1513                           ; 1 bytes @ 0x4
  1514                           
  1515                           
  1516                           ; 2 bytes @ 0x4
  1517  0076                     	ds	2
  1518  0078                     ?___awdiv:	
  1519  0078                     ___awdiv@divisor:	
  1520                           ; 2 bytes @ 0x6
  1521                           
  1522                           
  1523                           ; 2 bytes @ 0x6
  1524  0078                     	ds	2
  1525  007A                     ___awdiv@dividend:	
  1526                           
  1527                           ; 2 bytes @ 0x8
  1528  007A                     	ds	2
  1529  007C                     ??___awdiv:	
  1530                           
  1531                           ; 1 bytes @ 0xA
  1532  007C                     	ds	1
  1533  007D                     ??_INTERRUPT_InterruptManager:	
  1534                           
  1535                           	psect	cstackBANK0
  1536  005A                     __pcstackBANK0:	
  1537                           ; 1 bytes @ 0xB
  1538                           
  1539  005A                     ___awdiv@counter:	
  1540                           
  1541                           ; 1 bytes @ 0x0
  1542  005A                     	ds	1
  1543  005B                     ___awdiv@sign:	
  1544                           
  1545                           ; 1 bytes @ 0x1
  1546  005B                     	ds	1
  1547  005C                     ___awdiv@quotient:	
  1548                           
  1549                           ; 2 bytes @ 0x2
  1550  005C                     	ds	2
  1551  005E                     ??_TMR0_ISR:	
  1552                           
  1553                           ; 1 bytes @ 0x4
  1554  005E                     	ds	5
  1555  0063                     ??_Z4SetHigh:	
  1556  0063                     ??_Z4SetLow:	
  1557                           ; 1 bytes @ 0x9
  1558                           
  1559  0063                     ??_Z2SetHigh:	
  1560                           ; 1 bytes @ 0x9
  1561                           
  1562  0063                     ??_Z2SetLow:	
  1563                           ; 1 bytes @ 0x9
  1564                           
  1565  0063                     ??_Z1SetHigh:	
  1566                           ; 1 bytes @ 0x9
  1567                           
  1568  0063                     ??_Z1SetLow:	
  1569                           ; 1 bytes @ 0x9
  1570                           
  1571  0063                     ??_Z3SetHigh:	
  1572                           ; 1 bytes @ 0x9
  1573                           
  1574  0063                     ??_Z3SetLow:	
  1575                           ; 1 bytes @ 0x9
  1576                           
  1577  0063                     ??_TMR0_SetInterruptHandler:	
  1578                           ; 1 bytes @ 0x9
  1579                           
  1580  0063                     ??_OSCILLATOR_Initialize:	
  1581                           ; 1 bytes @ 0x9
  1582                           
  1583  0063                     ??_WDT_Initialize:	
  1584                           ; 1 bytes @ 0x9
  1585                           
  1586  0063                     ??_Debounce:	
  1587                           ; 1 bytes @ 0x9
  1588                           
  1589  0063                     ??_Execute:	
  1590                           ; 1 bytes @ 0x9
  1591                           
  1592  0063                     ??_TMR0_Initialize:	
  1593                           ; 1 bytes @ 0x9
  1594                           
  1595  0063                     ??_PIN_MANAGER_Initialize:	
  1596                           ; 1 bytes @ 0x9
  1597                           
  1598                           
  1599                           ; 1 bytes @ 0x9
  1600  0063                     	ds	1
  1601  0064                     ??_SYSTEM_Initialize:	
  1602  0064                     ??_main:	
  1603                           ; 1 bytes @ 0xA
  1604                           
  1605                           
  1606                           	psect	maintext
  1607  0657                     __pmaintext:	
  1608                           ; 1 bytes @ 0xA
  1609 ;;
  1610 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1611 ;;
  1612 ;; *************** function _main *****************
  1613 ;; Defined at:
  1614 ;;		line 63 in file "main.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : B1F/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1628 ;;      Params:         0       0       0       0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels required when called:    6
  1634 ;; This function calls:
  1635 ;;		_Debounce
  1636 ;;		_Execute
  1637 ;;		_LEDs
  1638 ;;		_SYSTEM_Initialize
  1639 ;; This function is called by:
  1640 ;;		Startup code after reset
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _main
  1646  0657                     _main:	
  1647  0657                     l3450:	
  1648                           ;incstack = 0
  1649                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1650                           
  1651                           
  1652                           ;main.c: 66:     SYSTEM_Initialize();
  1653  0657  3186  2667  3186   	fcall	_SYSTEM_Initialize
  1654  065A                     l3452:	
  1655                           
  1656                           ;main.c: 72:     (INTCONbits.GIE = 1);
  1657  065A  178B               	bsf	11,7	;volatile
  1658  065B                     l612:	
  1659                           ;main.c: 83:     while (1){
  1660                           
  1661                           
  1662                           ;main.c: 84:         Debounce();
  1663  065B  3181  2177  3186   	fcall	_Debounce
  1664  065E                     l3454:	
  1665                           
  1666                           ;main.c: 85:         Execute();
  1667  065E  3180  2033  3186   	fcall	_Execute
  1668  0661                     l3456:	
  1669                           
  1670                           ;main.c: 86:         LEDs();
  1671  0661  3183  23B6  3186   	fcall	_LEDs
  1672  0664  2E5B               	goto	l612
  1673  0665  3180  2813         	ljmp	start
  1674  0667                     __end_of_main:	
  1675                           
  1676                           	psect	text1
  1677  0667                     __ptext1:	
  1678 ;; *************** function _SYSTEM_Initialize *****************
  1679 ;; Defined at:
  1680 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1694 ;;      Params:         0       0       0       0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0
  1697 ;;      Totals:         0       0       0       0       0       0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    5
  1701 ;; This function calls:
  1702 ;;		_OSCILLATOR_Initialize
  1703 ;;		_PIN_MANAGER_Initialize
  1704 ;;		_TMR0_Initialize
  1705 ;;		_WDT_Initialize
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _SYSTEM_Initialize
  1713  0667                     _SYSTEM_Initialize:	
  1714  0667                     l3270:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1717                           
  1718                           
  1719                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1720  0667  3185  25E4  3186   	fcall	_PIN_MANAGER_Initialize
  1721                           
  1722                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1723  066A  3186  267D  3186   	fcall	_OSCILLATOR_Initialize
  1724                           
  1725                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1726  066D  3186  2690  3186   	fcall	_WDT_Initialize
  1727                           
  1728                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  1729  0670  3186  2640  3186   	fcall	_TMR0_Initialize
  1730  0673                     l447:	
  1731  0673  0008               	return
  1732  0674                     __end_of_SYSTEM_Initialize:	
  1733                           
  1734                           	psect	text2
  1735  0690                     __ptext2:	
  1736 ;; *************** function _WDT_Initialize *****************
  1737 ;; Defined at:
  1738 ;;		line 69 in file "mcc_generated_files/mcc.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1752 ;;      Params:         0       0       0       0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0
  1755 ;;      Totals:         0       0       0       0       0       0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    3
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_SYSTEM_Initialize
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _WDT_Initialize
  1768  0690                     _WDT_Initialize:	
  1769  0690                     l2496:	
  1770                           ;incstack = 0
  1771                           ; Regs used in _WDT_Initialize: [wreg]
  1772                           
  1773                           
  1774                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  1775  0690  3016               	movlw	22
  1776  0691  0021               	movlb	1	; select bank1
  1777  0692  0097               	movwf	23	;volatile
  1778  0693                     l453:	
  1779  0693  0008               	return
  1780  0694                     __end_of_WDT_Initialize:	
  1781                           
  1782                           	psect	text3
  1783  0640                     __ptext3:	
  1784 ;; *************** function _TMR0_Initialize *****************
  1785 ;; Defined at:
  1786 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1800 ;;      Params:         0       0       0       0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0
  1802 ;;      Temps:          0       1       0       0       0       0       0       0
  1803 ;;      Totals:         0       1       0       0       0       0       0       0
  1804 ;;Total ram usage:        1 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    4
  1807 ;; This function calls:
  1808 ;;		_TMR0_SetInterruptHandler
  1809 ;; This function is called by:
  1810 ;;		_SYSTEM_Initialize
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _TMR0_Initialize
  1816  0640                     _TMR0_Initialize:	
  1817  0640                     l3198:	
  1818                           ;incstack = 0
  1819                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1820                           
  1821                           
  1822                           ;mcc_generated_files/tmr0.c: 73:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  1823  0640  0021               	movlb	1	; select bank1
  1824  0641  0815               	movf	21,w	;volatile
  1825  0642  39C0               	andlw	192
  1826  0643  3811               	iorlw	17
  1827  0644  0095               	movwf	21	;volatile
  1828  0645                     l3200:	
  1829                           
  1830                           ;mcc_generated_files/tmr0.c: 76:     TMR0 = 0x0A;
  1831  0645  300A               	movlw	10
  1832  0646  0020               	movlb	0	; select bank0
  1833  0647  0095               	movwf	21	;volatile
  1834  0648                     l3202:	
  1835                           
  1836                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal= 10;
  1837  0648  300A               	movlw	10
  1838  0649  00E3               	movwf	??_TMR0_Initialize
  1839  064A  0863               	movf	??_TMR0_Initialize,w
  1840  064B  00E6               	movwf	_timer0ReloadVal	;volatile
  1841  064C                     l3204:	
  1842                           
  1843                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  1844  064C  110B               	bcf	11,2	;volatile
  1845  064D                     l3206:	
  1846                           
  1847                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  1848  064D  168B               	bsf	11,5	;volatile
  1849  064E                     l3208:	
  1850                           
  1851                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1852  064E  30AD               	movlw	low _TMR0_DefaultInterruptHandler
  1853  064F  0021               	movlb	1	; select bank1
  1854  0650  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  1855  0651  3006               	movlw	high _TMR0_DefaultInterruptHandler
  1856  0652  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  1857  0653  3186  2674  3186   	fcall	_TMR0_SetInterruptHandler
  1858  0656                     l111:	
  1859  0656  0008               	return
  1860  0657                     __end_of_TMR0_Initialize:	
  1861                           
  1862                           	psect	text4
  1863  0674                     __ptext4:	
  1864 ;; *************** function _TMR0_SetInterruptHandler *****************
  1865 ;; Defined at:
  1866 ;;		line 228 in file "mcc_generated_files/tmr0.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  1869 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1881 ;;      Params:         0       0       2       0       0       0       0       0
  1882 ;;      Locals:         0       0       0       0       0       0       0       0
  1883 ;;      Temps:          0       0       0       0       0       0       0       0
  1884 ;;      Totals:         0       0       2       0       0       0       0       0
  1885 ;;Total ram usage:        2 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    3
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_TMR0_Initialize
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           
  1896                           ;psect for function _TMR0_SetInterruptHandler
  1897  0674                     _TMR0_SetInterruptHandler:	
  1898  0674                     l3196:	
  1899                           ;incstack = 0
  1900                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1901                           
  1902                           
  1903                           ;mcc_generated_files/tmr0.c: 229:     TMR0_InterruptHandler = InterruptHandler;
  1904  0674  0021               	movlb	1	; select bank1
  1905  0675  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  1906  0676  0020               	movlb	0	; select bank0
  1907  0677  00E5               	movwf	_TMR0_InterruptHandler+1
  1908  0678  0021               	movlb	1	; select bank1
  1909  0679  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  1910  067A  0020               	movlb	0	; select bank0
  1911  067B  00E4               	movwf	_TMR0_InterruptHandler
  1912  067C                     l152:	
  1913  067C  0008               	return
  1914  067D                     __end_of_TMR0_SetInterruptHandler:	
  1915                           
  1916                           	psect	text5
  1917  05E4                     __ptext5:	
  1918 ;; *************** function _PIN_MANAGER_Initialize *****************
  1919 ;; Defined at:
  1920 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1934 ;;      Params:         0       0       0       0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0
  1937 ;;      Totals:         0       0       0       0       0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    3
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_SYSTEM_Initialize
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _PIN_MANAGER_Initialize
  1950  05E4                     _PIN_MANAGER_Initialize:	
  1951  05E4                     l2474:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1954                           
  1955                           
  1956                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x03;
  1957  05E4  3003               	movlw	3
  1958  05E5  0022               	movlb	2	; select bank2
  1959  05E6  0090               	movwf	16	;volatile
  1960                           
  1961                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x63;
  1962  05E7  3063               	movlw	99
  1963  05E8  008F               	movwf	15	;volatile
  1964                           
  1965                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x33;
  1966  05E9  3033               	movlw	51
  1967  05EA  008C               	movwf	12	;volatile
  1968                           
  1969                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x1A;
  1970  05EB  301A               	movlw	26
  1971  05EC  008D               	movwf	13	;volatile
  1972  05ED                     l2476:	
  1973                           
  1974                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1975  05ED  018E               	clrf	14	;volatile
  1976  05EE                     l2478:	
  1977                           
  1978                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0C;
  1979  05EE  300C               	movlw	12
  1980  05EF  0021               	movlb	1	; select bank1
  1981  05F0  0090               	movwf	16	;volatile
  1982  05F1                     l2480:	
  1983                           
  1984                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0C;
  1985  05F1  300C               	movlw	12
  1986  05F2  008C               	movwf	12	;volatile
  1987  05F3                     l2482:	
  1988                           
  1989                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xE4;
  1990  05F3  30E4               	movlw	228
  1991  05F4  008D               	movwf	13	;volatile
  1992  05F5                     l2484:	
  1993                           
  1994                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x80;
  1995  05F5  3080               	movlw	128
  1996  05F6  008E               	movwf	14	;volatile
  1997  05F7                     l2486:	
  1998                           
  1999                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x84;
  2000  05F7  3084               	movlw	132
  2001  05F8  008F               	movwf	15	;volatile
  2002                           
  2003                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  2004  05F9  0023               	movlb	3	; select bank3
  2005  05FA  018F               	clrf	15	;volatile
  2006                           
  2007                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x00;
  2008  05FB  018D               	clrf	13	;volatile
  2009                           
  2010                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x00;
  2011  05FC  0190               	clrf	16	;volatile
  2012                           
  2013                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x00;
  2014  05FD  018C               	clrf	12	;volatile
  2015                           
  2016                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  2017  05FE  0024               	movlb	4	; select bank4
  2018  05FF  0190               	clrf	16	;volatile
  2019                           
  2020                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  2021  0600  018D               	clrf	13	;volatile
  2022  0601                     l2488:	
  2023                           
  2024                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  2025  0601  0021               	movlb	1	; select bank1
  2026  0602  1795               	bsf	21,7	;volatile
  2027                           
  2028                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  2029  0603  0022               	movlb	2	; select bank2
  2030  0604  019D               	clrf	29	;volatile
  2031  0605                     l234:	
  2032  0605  0008               	return
  2033  0606                     __end_of_PIN_MANAGER_Initialize:	
  2034                           
  2035                           	psect	text6
  2036  067D                     __ptext6:	
  2037 ;; *************** function _OSCILLATOR_Initialize *****************
  2038 ;; Defined at:
  2039 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2053 ;;      Params:         0       0       0       0       0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0
  2056 ;;      Totals:         0       0       0       0       0       0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    3
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_SYSTEM_Initialize
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function _OSCILLATOR_Initialize
  2069  067D                     _OSCILLATOR_Initialize:	
  2070  067D                     l2490:	
  2071                           ;incstack = 0
  2072                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2073                           
  2074                           
  2075                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x6A;
  2076  067D  306A               	movlw	106
  2077  067E  0021               	movlb	1	; select bank1
  2078  067F  0099               	movwf	25	;volatile
  2079  0680                     l2492:	
  2080                           
  2081                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  2082  0680  0198               	clrf	24	;volatile
  2083  0681                     l2494:	
  2084                           
  2085                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2086  0681  0022               	movlb	2	; select bank2
  2087  0682  0196               	clrf	22	;volatile
  2088  0683                     l450:	
  2089  0683  0008               	return
  2090  0684                     __end_of_OSCILLATOR_Initialize:	
  2091                           
  2092                           	psect	text7
  2093  03B6                     __ptext7:	
  2094 ;; *************** function _LEDs *****************
  2095 ;; Defined at:
  2096 ;;		line 369 in file "main.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2110 ;;      Params:         0       0       0       0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0       0
  2112 ;;      Temps:          0       0       2       0       0       0       0       0
  2113 ;;      Totals:         0       0       2       0       0       0       0       0
  2114 ;;Total ram usage:        2 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    3
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _LEDs
  2126  03B6                     _LEDs:	
  2127  03B6                     l3406:	
  2128                           ;incstack = 0
  2129                           ; Regs used in _LEDs: [wreg-fsr0h+status,2+status,0]
  2130                           
  2131                           
  2132                           ;main.c: 371:     if(led_flash_timer){
  2133  03B6  0020               	movlb	0	; select bank0
  2134  03B7  0853               	movf	_led_flash_timer,w
  2135  03B8  0454               	iorwf	_led_flash_timer+1,w
  2136  03B9  1903               	btfsc	3,2
  2137  03BA  2BBC               	goto	u3171
  2138  03BB  2BBD               	goto	u3170
  2139  03BC                     u3171:	
  2140  03BC  2BCE               	goto	l809
  2141  03BD                     u3170:	
  2142  03BD                     l810:	
  2143                           ;main.c: 372:         do { LATEbits.LATE1 = 0; } while(0);
  2144                           
  2145  03BD  0022               	movlb	2	; select bank2
  2146  03BE  1090               	bcf	16,1	;volatile
  2147  03BF                     l812:	
  2148                           ;main.c: 374:         do { LATAbits.LATA4 = 0; } while(0);
  2149                           
  2150  03BF  120C               	bcf	12,4	;volatile
  2151  03C0                     l814:	
  2152                           ;main.c: 375:         do { LATBbits.LATB1 = 0; } while(0);
  2153                           
  2154  03C0  108D               	bcf	13,1	;volatile
  2155  03C1                     l816:	
  2156                           ;main.c: 377:         do { LATBbits.LATB4 = 0; } while(0);
  2157                           
  2158  03C1  120D               	bcf	13,4	;volatile
  2159  03C2                     l818:	
  2160                           ;main.c: 378:         do { LATBbits.LATB3 = 0; } while(0);
  2161                           
  2162  03C2  118D               	bcf	13,3	;volatile
  2163  03C3                     l820:	
  2164                           ;main.c: 380:         do { LATAbits.LATA0 = 0; } while(0);
  2165                           
  2166  03C3  100C               	bcf	12,0	;volatile
  2167  03C4                     l822:	
  2168                           ;main.c: 381:         do { LATAbits.LATA1 = 0; } while(0);
  2169                           
  2170  03C4  108C               	bcf	12,1	;volatile
  2171  03C5                     l824:	
  2172                           ;main.c: 383:         do { LATDbits.LATD6 = 0; } while(0);
  2173                           
  2174  03C5  130F               	bcf	15,6	;volatile
  2175  03C6                     l826:	
  2176                           ;main.c: 384:         do { LATDbits.LATD1 = 0; } while(0);
  2177                           
  2178  03C6  108F               	bcf	15,1	;volatile
  2179  03C7                     l828:	
  2180                           ;main.c: 385:         do { LATEbits.LATE0 = 0; } while(0);
  2181                           
  2182  03C7  1010               	bcf	16,0	;volatile
  2183  03C8                     l830:	
  2184                           ;main.c: 386:         do { LATDbits.LATD5 = 0; } while(0);
  2185                           
  2186  03C8  128F               	bcf	15,5	;volatile
  2187  03C9                     l832:	
  2188                           ;main.c: 387:         do { LATDbits.LATD0 = 0; } while(0);
  2189                           
  2190  03C9  100F               	bcf	15,0	;volatile
  2191  03CA                     l834:	
  2192                           ;main.c: 388:         do { LATAbits.LATA5 = 0; } while(0);
  2193                           
  2194  03CA  128C               	bcf	12,5	;volatile
  2195  03CB                     l836:	
  2196                           ;main.c: 390:         do { LATBbits.LATB0 = 1; } while(0);
  2197                           
  2198  03CB  140D               	bsf	13,0	;volatile
  2199  03CC                     l838:	
  2200                           ;main.c: 391:         do { LATDbits.LATD4 = 1; } while(0);
  2201                           
  2202  03CC  160F               	bsf	15,4	;volatile
  2203  03CD  2CB4               	goto	l840
  2204  03CE                     l809:	
  2205                           ;main.c: 393:     }
  2206                           
  2207                           
  2208                           ;main.c: 396:     if(hand_control_locked){
  2209  03CE  1D71               	btfss	_hand_control_locked/(0+8),_hand_control_locked& (0+7)
  2210  03CF  2BD1               	goto	u3181
  2211  03D0  2BD2               	goto	u3180
  2212  03D1                     u3181:	
  2213  03D1  2BE3               	goto	l872
  2214  03D2                     u3180:	
  2215  03D2                     l842:	
  2216                           ;main.c: 397:         do { LATEbits.LATE1 = 0; } while(0);
  2217                           
  2218  03D2  0022               	movlb	2	; select bank2
  2219  03D3  1090               	bcf	16,1	;volatile
  2220  03D4                     l844:	
  2221                           ;main.c: 399:         do { LATAbits.LATA4 = 1; } while(0);
  2222                           
  2223  03D4  160C               	bsf	12,4	;volatile
  2224  03D5                     l846:	
  2225                           ;main.c: 400:         do { LATBbits.LATB1 = 1; } while(0);
  2226                           
  2227  03D5  148D               	bsf	13,1	;volatile
  2228  03D6                     l848:	
  2229                           ;main.c: 402:         do { LATBbits.LATB4 = 1; } while(0);
  2230                           
  2231  03D6  160D               	bsf	13,4	;volatile
  2232  03D7                     l850:	
  2233                           ;main.c: 403:         do { LATBbits.LATB3 = 1; } while(0);
  2234                           
  2235  03D7  158D               	bsf	13,3	;volatile
  2236  03D8                     l852:	
  2237                           ;main.c: 405:         do { LATAbits.LATA0 = 1; } while(0);
  2238                           
  2239  03D8  140C               	bsf	12,0	;volatile
  2240  03D9                     l854:	
  2241                           ;main.c: 406:         do { LATAbits.LATA1 = 1; } while(0);
  2242                           
  2243  03D9  148C               	bsf	12,1	;volatile
  2244  03DA                     l856:	
  2245                           ;main.c: 408:         do { LATDbits.LATD6 = 1; } while(0);
  2246                           
  2247  03DA  170F               	bsf	15,6	;volatile
  2248  03DB                     l858:	
  2249                           ;main.c: 409:         do { LATDbits.LATD1 = 1; } while(0);
  2250                           
  2251  03DB  148F               	bsf	15,1	;volatile
  2252  03DC                     l860:	
  2253                           ;main.c: 410:         do { LATEbits.LATE0 = 1; } while(0);
  2254                           
  2255  03DC  1410               	bsf	16,0	;volatile
  2256  03DD                     l862:	
  2257                           ;main.c: 411:         do { LATDbits.LATD5 = 1; } while(0);
  2258                           
  2259  03DD  168F               	bsf	15,5	;volatile
  2260  03DE                     l864:	
  2261                           ;main.c: 412:         do { LATDbits.LATD0 = 1; } while(0);
  2262                           
  2263  03DE  140F               	bsf	15,0	;volatile
  2264  03DF                     l866:	
  2265                           ;main.c: 413:         do { LATAbits.LATA5 = 1; } while(0);
  2266                           
  2267  03DF  168C               	bsf	12,5	;volatile
  2268  03E0                     l868:	
  2269                           ;main.c: 415:         do { LATBbits.LATB0 = 0; } while(0);
  2270                           
  2271  03E0  100D               	bcf	13,0	;volatile
  2272  03E1                     l870:	
  2273                           ;main.c: 416:         do { LATDbits.LATD4 = 0; } while(0);
  2274                           
  2275  03E1  120F               	bcf	15,4	;volatile
  2276  03E2  2CB4               	goto	l840
  2277  03E3                     l872:	
  2278                           ;main.c: 420:     do { LATEbits.LATE1 = 1; } while(0);
  2279                           
  2280  03E3  0022               	movlb	2	; select bank2
  2281  03E4  1490               	bsf	16,1	;volatile
  2282  03E5                     l873:	
  2283                           
  2284                           ;main.c: 423:     if(lift_open_state || lift_close_state || back_open_state || back_clos
      +                          e_state){
  2285  03E5  1A70               	btfsc	_lift_open_state/(0+8),_lift_open_state& (0+7)
  2286  03E6  2BE8               	goto	u3191
  2287  03E7  2BE9               	goto	u3190
  2288  03E8                     u3191:	
  2289  03E8  2BF5               	goto	l877
  2290  03E9                     u3190:	
  2291  03E9                     l3408:	
  2292  03E9  19F0               	btfsc	_lift_close_state/(0+8),_lift_close_state& (0+7)
  2293  03EA  2BEC               	goto	u3201
  2294  03EB  2BED               	goto	u3200
  2295  03EC                     u3201:	
  2296  03EC  2BF5               	goto	l877
  2297  03ED                     u3200:	
  2298  03ED                     l3410:	
  2299  03ED  1970               	btfsc	_back_open_state/(0+8),_back_open_state& (0+7)
  2300  03EE  2BF0               	goto	u3211
  2301  03EF  2BF1               	goto	u3210
  2302  03F0                     u3211:	
  2303  03F0  2BF5               	goto	l877
  2304  03F1                     u3210:	
  2305  03F1                     l3412:	
  2306  03F1  1CF0               	btfss	_back_close_state/(0+8),_back_close_state& (0+7)
  2307  03F2  2BF4               	goto	u3221
  2308  03F3  2BF5               	goto	u3220
  2309  03F4                     u3221:	
  2310  03F4  2C1E               	goto	l918
  2311  03F5                     u3220:	
  2312  03F5                     l877:	
  2313                           ;main.c: 425:         do { LATBbits.LATB4 = 1; } while(0);
  2314                           
  2315  03F5  160D               	bsf	13,4	;volatile
  2316  03F6                     l879:	
  2317                           ;main.c: 426:         do { LATBbits.LATB3 = 1; } while(0);
  2318                           
  2319  03F6  158D               	bsf	13,3	;volatile
  2320  03F7                     l881:	
  2321                           ;main.c: 428:         do { LATAbits.LATA0 = 1; } while(0);
  2322                           
  2323  03F7  140C               	bsf	12,0	;volatile
  2324  03F8                     l883:	
  2325                           ;main.c: 429:         do { LATAbits.LATA1 = 1; } while(0);
  2326                           
  2327  03F8  148C               	bsf	12,1	;volatile
  2328  03F9                     l885:	
  2329                           ;main.c: 431:         do { LATDbits.LATD6 = 1; } while(0);
  2330                           
  2331  03F9  170F               	bsf	15,6	;volatile
  2332  03FA                     l887:	
  2333                           ;main.c: 432:         do { LATDbits.LATD1 = 1; } while(0);
  2334                           
  2335  03FA  148F               	bsf	15,1	;volatile
  2336  03FB                     l889:	
  2337                           ;main.c: 433:         do { LATEbits.LATE0 = 1; } while(0);
  2338                           
  2339  03FB  1410               	bsf	16,0	;volatile
  2340  03FC                     l891:	
  2341                           ;main.c: 434:         do { LATDbits.LATD5 = 1; } while(0);
  2342                           
  2343  03FC  168F               	bsf	15,5	;volatile
  2344  03FD                     l893:	
  2345                           ;main.c: 435:         do { LATDbits.LATD0 = 1; } while(0);
  2346                           
  2347  03FD  140F               	bsf	15,0	;volatile
  2348  03FE                     l895:	
  2349                           ;main.c: 436:         do { LATAbits.LATA5 = 1; } while(0);
  2350                           
  2351  03FE  168C               	bsf	12,5	;volatile
  2352  03FF                     l897:	
  2353                           ;main.c: 438:         do { LATBbits.LATB0 = 0; } while(0);
  2354                           
  2355  03FF  100D               	bcf	13,0	;volatile
  2356  0400                     l899:	
  2357                           ;main.c: 439:         do { LATDbits.LATD4 = 0; } while(0);
  2358                           
  2359  0400  120F               	bcf	15,4	;volatile
  2360  0401                     l900:	
  2361                           
  2362                           ;main.c: 442:         if(PORTCbits.RC1 || PORTCbits.RC0){
  2363  0401  0020               	movlb	0	; select bank0
  2364  0402  188E               	btfsc	14,1	;volatile
  2365  0403  2C05               	goto	u3231
  2366  0404  2C06               	goto	u3230
  2367  0405                     u3231:	
  2368  0405  2C0A               	goto	l904
  2369  0406                     u3230:	
  2370  0406                     l3414:	
  2371  0406  1C0E               	btfss	14,0	;volatile
  2372  0407  2C09               	goto	u3241
  2373  0408  2C0A               	goto	u3240
  2374  0409                     u3241:	
  2375  0409  2C0D               	goto	l907
  2376  040A                     u3240:	
  2377  040A                     l904:	
  2378                           ;main.c: 443:             do { LATAbits.LATA4 = 0; } while(0);
  2379                           
  2380  040A  0022               	movlb	2	; select bank2
  2381  040B  120C               	bcf	12,4	;volatile
  2382  040C  2C0F               	goto	l906
  2383  040D                     l907:	
  2384                           ;main.c: 445:             do { LATAbits.LATA4 = 1; } while(0);
  2385                           
  2386  040D  0022               	movlb	2	; select bank2
  2387  040E  160C               	bsf	12,4	;volatile
  2388  040F                     l906:	
  2389                           ;main.c: 446:         }
  2390                           
  2391                           
  2392                           ;main.c: 448:         if(PORTAbits.RA6 || PORTAbits.RA7){
  2393  040F  0020               	movlb	0	; select bank0
  2394  0410  1B0C               	btfsc	12,6	;volatile
  2395  0411  2C13               	goto	u3251
  2396  0412  2C14               	goto	u3250
  2397  0413                     u3251:	
  2398  0413  2C18               	goto	l912
  2399  0414                     u3250:	
  2400  0414                     l3416:	
  2401  0414  1F8C               	btfss	12,7	;volatile
  2402  0415  2C17               	goto	u3261
  2403  0416  2C18               	goto	u3260
  2404  0417                     u3261:	
  2405  0417  2C1B               	goto	l915
  2406  0418                     u3260:	
  2407  0418                     l912:	
  2408                           ;main.c: 449:             do { LATBbits.LATB1 = 0; } while(0);
  2409                           
  2410  0418  0022               	movlb	2	; select bank2
  2411  0419  108D               	bcf	13,1	;volatile
  2412  041A  2CB4               	goto	l840
  2413  041B                     l915:	
  2414                           ;main.c: 451:             do { LATBbits.LATB1 = 1; } while(0);
  2415                           
  2416  041B  0022               	movlb	2	; select bank2
  2417  041C  148D               	bsf	13,1	;volatile
  2418  041D  2CB4               	goto	l840
  2419  041E                     l918:	
  2420                           ;main.c: 455:         do { LATAbits.LATA4 = 1; } while(0);
  2421                           
  2422  041E  160C               	bsf	12,4	;volatile
  2423  041F                     l920:	
  2424                           ;main.c: 456:         do { LATBbits.LATB1 = 1; } while(0);
  2425                           
  2426  041F  148D               	bsf	13,1	;volatile
  2427  0420  2C2D               	goto	l3420
  2428  0421                     l924:	
  2429                           ;main.c: 461:                 do { LATBbits.LATB4 = 1; } while(0);
  2430                           
  2431  0421  0022               	movlb	2	; select bank2
  2432  0422  160D               	bsf	13,4	;volatile
  2433  0423                     l926:	
  2434                           ;main.c: 462:                 do { LATBbits.LATB3 = 0; } while(0);
  2435                           
  2436  0423  118D               	bcf	13,3	;volatile
  2437  0424  2C4B               	goto	l3424
  2438  0425                     l930:	
  2439                           ;main.c: 465:                 do { LATBbits.LATB4 = 0; } while(0);
  2440                           
  2441  0425  0022               	movlb	2	; select bank2
  2442  0426  120D               	bcf	13,4	;volatile
  2443  0427                     l932:	
  2444                           ;main.c: 466:                 do { LATBbits.LATB3 = 1; } while(0);
  2445                           
  2446  0427  158D               	bsf	13,3	;volatile
  2447  0428  2C4B               	goto	l3424
  2448  0429                     l935:	
  2449                           ;main.c: 469:                 do { LATBbits.LATB4 = 1; } while(0);
  2450                           
  2451  0429  0022               	movlb	2	; select bank2
  2452  042A  160D               	bsf	13,4	;volatile
  2453  042B                     l937:	
  2454                           ;main.c: 470:                 do { LATBbits.LATB3 = 1; } while(0);
  2455                           
  2456  042B  158D               	bsf	13,3	;volatile
  2457  042C  2C4B               	goto	l3424
  2458  042D                     l3420:	
  2459  042D  0020               	movlb	0	; select bank0
  2460  042E  082B               	movf	_heat1_state,w
  2461  042F  0021               	movlb	1	; select bank1
  2462  0430  00A0               	movwf	??_LEDs^(0+128)
  2463  0431  01A1               	clrf	(??_LEDs^(0+128)+1)
  2464                           
  2465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2466                           ; Switch size 1, requested type "simple"
  2467                           ; Number of cases is 1, Range of values is 0 to 0
  2468                           ; switch strategies available:
  2469                           ; Name         Instructions Cycles
  2470                           ; simple_byte            4     3 (average)
  2471                           ; direct_byte            8     6 (fixed)
  2472                           ; jumptable            260     6 (fixed)
  2473                           ;	Chosen strategy is simple_byte
  2474  0432  0821               	movf	(??_LEDs+1)^(0+128),w
  2475  0433  3A00               	xorlw	0	; case 0
  2476  0434  1903               	skipnz
  2477  0435  2C37               	goto	l3598
  2478  0436  2C29               	goto	l935
  2479  0437                     l3598:	
  2480                           
  2481                           ; Switch size 1, requested type "simple"
  2482                           ; Number of cases is 2, Range of values is 1 to 2
  2483                           ; switch strategies available:
  2484                           ; Name         Instructions Cycles
  2485                           ; simple_byte            7     4 (average)
  2486                           ; direct_byte           13     9 (fixed)
  2487                           ; jumptable            263     9 (fixed)
  2488                           ;	Chosen strategy is simple_byte
  2489  0437  0820               	movf	??_LEDs^(0+128),w
  2490  0438  3A01               	xorlw	1	; case 1
  2491  0439  1903               	skipnz
  2492  043A  2C21               	goto	l924
  2493  043B  3A03               	xorlw	3	; case 2
  2494  043C  1903               	skipnz
  2495  043D  2C25               	goto	l930
  2496  043E  2C29               	goto	l935
  2497  043F                     l941:	
  2498                           ;main.c: 476:                 do { LATAbits.LATA0 = 1; } while(0);
  2499                           
  2500  043F  0022               	movlb	2	; select bank2
  2501  0440  140C               	bsf	12,0	;volatile
  2502  0441                     l943:	
  2503                           ;main.c: 477:                 do { LATAbits.LATA1 = 0; } while(0);
  2504                           
  2505  0441  108C               	bcf	12,1	;volatile
  2506  0442  2C5D               	goto	l945
  2507  0443                     l947:	
  2508                           ;main.c: 480:                 do { LATAbits.LATA0 = 0; } while(0);
  2509                           
  2510  0443  0022               	movlb	2	; select bank2
  2511  0444  100C               	bcf	12,0	;volatile
  2512  0445                     l949:	
  2513                           ;main.c: 481:                 do { LATAbits.LATA1 = 1; } while(0);
  2514                           
  2515  0445  148C               	bsf	12,1	;volatile
  2516  0446  2C5D               	goto	l945
  2517  0447                     l952:	
  2518                           ;main.c: 484:                 do { LATAbits.LATA0 = 1; } while(0);
  2519                           
  2520  0447  0022               	movlb	2	; select bank2
  2521  0448  140C               	bsf	12,0	;volatile
  2522  0449                     l954:	
  2523                           ;main.c: 485:                 do { LATAbits.LATA1 = 1; } while(0);
  2524                           
  2525  0449  148C               	bsf	12,1	;volatile
  2526  044A  2C5D               	goto	l945
  2527  044B                     l3424:	
  2528  044B  0020               	movlb	0	; select bank0
  2529  044C  082A               	movf	_heat2_state,w
  2530  044D  0021               	movlb	1	; select bank1
  2531  044E  00A0               	movwf	??_LEDs^(0+128)
  2532  044F  01A1               	clrf	(??_LEDs^(0+128)+1)
  2533                           
  2534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2535                           ; Switch size 1, requested type "simple"
  2536                           ; Number of cases is 1, Range of values is 0 to 0
  2537                           ; switch strategies available:
  2538                           ; Name         Instructions Cycles
  2539                           ; simple_byte            4     3 (average)
  2540                           ; direct_byte            8     6 (fixed)
  2541                           ; jumptable            260     6 (fixed)
  2542                           ;	Chosen strategy is simple_byte
  2543  0450  0821               	movf	(??_LEDs+1)^(0+128),w
  2544  0451  3A00               	xorlw	0	; case 0
  2545  0452  1903               	skipnz
  2546  0453  2C55               	goto	l3600
  2547  0454  2C47               	goto	l952
  2548  0455                     l3600:	
  2549                           
  2550                           ; Switch size 1, requested type "simple"
  2551                           ; Number of cases is 2, Range of values is 1 to 2
  2552                           ; switch strategies available:
  2553                           ; Name         Instructions Cycles
  2554                           ; simple_byte            7     4 (average)
  2555                           ; direct_byte           13     9 (fixed)
  2556                           ; jumptable            263     9 (fixed)
  2557                           ;	Chosen strategy is simple_byte
  2558  0455  0820               	movf	??_LEDs^(0+128),w
  2559  0456  3A01               	xorlw	1	; case 1
  2560  0457  1903               	skipnz
  2561  0458  2C3F               	goto	l941
  2562  0459  3A03               	xorlw	3	; case 2
  2563  045A  1903               	skipnz
  2564  045B  2C43               	goto	l947
  2565  045C  2C47               	goto	l952
  2566  045D                     l945:	
  2567                           
  2568                           ;main.c: 490:         if(massage_power){
  2569  045D  1F70               	btfss	_massage_power/(0+8),_massage_power& (0+7)
  2570  045E  2C60               	goto	u3271
  2571  045F  2C61               	goto	u3270
  2572  0460                     u3271:	
  2573  0460  2CAC               	goto	l1010
  2574  0461                     u3270:	
  2575  0461                     l957:	
  2576                           ;main.c: 492:             do { LATBbits.LATB0 = 1; } while(0);
  2577                           
  2578  0461  140D               	bsf	13,0	;volatile
  2579  0462                     l959:	
  2580                           ;main.c: 493:             do { LATDbits.LATD4 = 1; } while(0);
  2581                           
  2582  0462  160F               	bsf	15,4	;volatile
  2583  0463  2C73               	goto	l3428
  2584  0464                     l963:	
  2585                           ;main.c: 497:                     do { LATDbits.LATD6 = 0; } while(0);
  2586                           
  2587  0464  0022               	movlb	2	; select bank2
  2588  0465  130F               	bcf	15,6	;volatile
  2589  0466                     l965:	
  2590                           ;main.c: 498:                     do { LATDbits.LATD1 = 1; } while(0);
  2591                           
  2592  0466  148F               	bsf	15,1	;volatile
  2593  0467                     l967:	
  2594                           ;main.c: 499:                     do { LATEbits.LATE0 = 1; } while(0);
  2595                           
  2596  0467  1410               	bsf	16,0	;volatile
  2597  0468  2C97               	goto	l3432
  2598  0469                     l971:	
  2599                           ;main.c: 502:                     do { LATDbits.LATD6 = 1; } while(0);
  2600                           
  2601  0469  0022               	movlb	2	; select bank2
  2602  046A  170F               	bsf	15,6	;volatile
  2603  046B                     l973:	
  2604                           ;main.c: 503:                     do { LATDbits.LATD1 = 0; } while(0);
  2605                           
  2606  046B  108F               	bcf	15,1	;volatile
  2607  046C                     l975:	
  2608                           ;main.c: 504:                     do { LATEbits.LATE0 = 1; } while(0);
  2609                           
  2610  046C  1410               	bsf	16,0	;volatile
  2611  046D  2C97               	goto	l3432
  2612  046E                     l978:	
  2613                           ;main.c: 507:                     do { LATDbits.LATD6 = 1; } while(0);
  2614                           
  2615  046E  0022               	movlb	2	; select bank2
  2616  046F  170F               	bsf	15,6	;volatile
  2617  0470                     l980:	
  2618                           ;main.c: 508:                     do { LATDbits.LATD1 = 1; } while(0);
  2619                           
  2620  0470  148F               	bsf	15,1	;volatile
  2621  0471                     l982:	
  2622                           ;main.c: 509:                     do { LATEbits.LATE0 = 0; } while(0);
  2623                           
  2624  0471  1010               	bcf	16,0	;volatile
  2625  0472  2C97               	goto	l3432
  2626  0473                     l3428:	
  2627  0473  0020               	movlb	0	; select bank0
  2628  0474  0835               	movf	_massage_mode,w
  2629  0475  0021               	movlb	1	; select bank1
  2630  0476  00A0               	movwf	??_LEDs^(0+128)
  2631  0477  01A1               	clrf	(??_LEDs^(0+128)+1)
  2632                           
  2633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2634                           ; Switch size 1, requested type "simple"
  2635                           ; Number of cases is 1, Range of values is 0 to 0
  2636                           ; switch strategies available:
  2637                           ; Name         Instructions Cycles
  2638                           ; simple_byte            4     3 (average)
  2639                           ; direct_byte            8     6 (fixed)
  2640                           ; jumptable            260     6 (fixed)
  2641                           ;	Chosen strategy is simple_byte
  2642  0478  0821               	movf	(??_LEDs+1)^(0+128),w
  2643  0479  3A00               	xorlw	0	; case 0
  2644  047A  1903               	skipnz
  2645  047B  2C7D               	goto	l3602
  2646  047C  2C97               	goto	l3432
  2647  047D                     l3602:	
  2648                           
  2649                           ; Switch size 1, requested type "simple"
  2650                           ; Number of cases is 3, Range of values is 0 to 2
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte           10     6 (average)
  2654                           ; direct_byte           12     6 (fixed)
  2655                           ; jumptable            260     6 (fixed)
  2656                           ;	Chosen strategy is simple_byte
  2657  047D  0820               	movf	??_LEDs^(0+128),w
  2658  047E  3A00               	xorlw	0	; case 0
  2659  047F  1903               	skipnz
  2660  0480  2C64               	goto	l963
  2661  0481  3A01               	xorlw	1	; case 1
  2662  0482  1903               	skipnz
  2663  0483  2C69               	goto	l971
  2664  0484  3A03               	xorlw	3	; case 2
  2665  0485  1903               	skipnz
  2666  0486  2C6E               	goto	l978
  2667  0487  2C97               	goto	l3432
  2668  0488                     l987:	
  2669                           ;main.c: 516:                     do { LATDbits.LATD5 = 0; } while(0);
  2670                           
  2671  0488  0022               	movlb	2	; select bank2
  2672  0489  128F               	bcf	15,5	;volatile
  2673  048A                     l989:	
  2674                           ;main.c: 517:                     do { LATDbits.LATD0 = 1; } while(0);
  2675                           
  2676  048A  140F               	bsf	15,0	;volatile
  2677  048B                     l991:	
  2678                           ;main.c: 518:                     do { LATAbits.LATA5 = 1; } while(0);
  2679                           
  2680  048B  168C               	bsf	12,5	;volatile
  2681  048C  2CB4               	goto	l840
  2682  048D                     l995:	
  2683                           ;main.c: 521:                     do { LATDbits.LATD5 = 1; } while(0);
  2684                           
  2685  048D  0022               	movlb	2	; select bank2
  2686  048E  168F               	bsf	15,5	;volatile
  2687  048F                     l997:	
  2688                           ;main.c: 522:                     do { LATDbits.LATD0 = 0; } while(0);
  2689                           
  2690  048F  100F               	bcf	15,0	;volatile
  2691  0490                     l999:	
  2692                           ;main.c: 523:                     do { LATAbits.LATA5 = 1; } while(0);
  2693                           
  2694  0490  168C               	bsf	12,5	;volatile
  2695  0491  2CB4               	goto	l840
  2696  0492                     l1002:	
  2697                           ;main.c: 526:                     do { LATDbits.LATD5 = 1; } while(0);
  2698                           
  2699  0492  0022               	movlb	2	; select bank2
  2700  0493  168F               	bsf	15,5	;volatile
  2701  0494                     l1004:	
  2702                           ;main.c: 527:                     do { LATDbits.LATD0 = 1; } while(0);
  2703                           
  2704  0494  140F               	bsf	15,0	;volatile
  2705  0495                     l1006:	
  2706                           ;main.c: 528:                     do { LATAbits.LATA5 = 0; } while(0);
  2707                           
  2708  0495  128C               	bcf	12,5	;volatile
  2709  0496  2CB4               	goto	l840
  2710  0497                     l3432:	
  2711  0497  0020               	movlb	0	; select bank0
  2712  0498  0859               	movf	_massage_intensity_setting,w
  2713  0499  0021               	movlb	1	; select bank1
  2714  049A  00A0               	movwf	??_LEDs^(0+128)
  2715  049B  01A1               	clrf	(??_LEDs^(0+128)+1)
  2716                           
  2717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2718                           ; Switch size 1, requested type "simple"
  2719                           ; Number of cases is 1, Range of values is 0 to 0
  2720                           ; switch strategies available:
  2721                           ; Name         Instructions Cycles
  2722                           ; simple_byte            4     3 (average)
  2723                           ; direct_byte            8     6 (fixed)
  2724                           ; jumptable            260     6 (fixed)
  2725                           ;	Chosen strategy is simple_byte
  2726  049C  0821               	movf	(??_LEDs+1)^(0+128),w
  2727  049D  3A00               	xorlw	0	; case 0
  2728  049E  1903               	skipnz
  2729  049F  2CA1               	goto	l3604
  2730  04A0  2CB4               	goto	l840
  2731  04A1                     l3604:	
  2732                           
  2733                           ; Switch size 1, requested type "simple"
  2734                           ; Number of cases is 3, Range of values is 0 to 2
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte           10     6 (average)
  2738                           ; direct_byte           12     6 (fixed)
  2739                           ; jumptable            260     6 (fixed)
  2740                           ;	Chosen strategy is simple_byte
  2741  04A1  0820               	movf	??_LEDs^(0+128),w
  2742  04A2  3A00               	xorlw	0	; case 0
  2743  04A3  1903               	skipnz
  2744  04A4  2C88               	goto	l987
  2745  04A5  3A01               	xorlw	1	; case 1
  2746  04A6  1903               	skipnz
  2747  04A7  2C8D               	goto	l995
  2748  04A8  3A03               	xorlw	3	; case 2
  2749  04A9  1903               	skipnz
  2750  04AA  2C92               	goto	l1002
  2751  04AB  2CB4               	goto	l840
  2752  04AC                     l1010:	
  2753                           ;main.c: 535:             do { LATDbits.LATD6 = 1; } while(0);
  2754                           
  2755  04AC  170F               	bsf	15,6	;volatile
  2756  04AD                     l1012:	
  2757                           ;main.c: 536:             do { LATDbits.LATD1 = 1; } while(0);
  2758                           
  2759  04AD  148F               	bsf	15,1	;volatile
  2760  04AE                     l1014:	
  2761                           ;main.c: 537:             do { LATEbits.LATE0 = 1; } while(0);
  2762                           
  2763  04AE  1410               	bsf	16,0	;volatile
  2764  04AF                     l1016:	
  2765                           ;main.c: 538:             do { LATDbits.LATD5 = 1; } while(0);
  2766                           
  2767  04AF  168F               	bsf	15,5	;volatile
  2768  04B0                     l1018:	
  2769                           ;main.c: 539:             do { LATDbits.LATD0 = 1; } while(0);
  2770                           
  2771  04B0  140F               	bsf	15,0	;volatile
  2772  04B1                     l1020:	
  2773                           ;main.c: 540:             do { LATAbits.LATA5 = 1; } while(0);
  2774                           
  2775  04B1  168C               	bsf	12,5	;volatile
  2776  04B2                     l1022:	
  2777                           ;main.c: 541:             do { LATBbits.LATB0 = 0; } while(0);
  2778                           
  2779  04B2  100D               	bcf	13,0	;volatile
  2780  04B3                     l1024:	
  2781                           ;main.c: 542:             do { LATDbits.LATD4 = 0; } while(0);
  2782                           
  2783  04B3  120F               	bcf	15,4	;volatile
  2784  04B4                     l840:	
  2785  04B4  0008               	return
  2786  04B5                     __end_of_LEDs:	
  2787                           
  2788                           	psect	text8
  2789  0033                     __ptext8:	
  2790 ;; *************** function _Execute *****************
  2791 ;; Defined at:
  2792 ;;		line 243 in file "main.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2806 ;;      Params:         0       0       0       0       0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0
  2808 ;;      Temps:          0       1       0       0       0       0       0       0
  2809 ;;      Totals:         0       1       0       0       0       0       0       0
  2810 ;;Total ram usage:        1 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    5
  2813 ;; This function calls:
  2814 ;;		_Massage
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function _Execute
  2822  0033                     _Execute:	
  2823  0033                     l3272:	
  2824                           ;incstack = 0
  2825                           ; Regs used in _Execute: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2826                           
  2827                           
  2828                           ;main.c: 245:     if(hand_control_locked || led_flash_timer){
  2829  0033  1971               	btfsc	_hand_control_locked/(0+8),_hand_control_locked& (0+7)
  2830  0034  2836               	goto	u2771
  2831  0035  2837               	goto	u2770
  2832  0036                     u2771:	
  2833  0036  283E               	goto	l672
  2834  0037                     u2770:	
  2835  0037                     l3274:	
  2836  0037  0020               	movlb	0	; select bank0
  2837  0038  0853               	movf	_led_flash_timer,w
  2838  0039  0454               	iorwf	_led_flash_timer+1,w
  2839  003A  1903               	btfsc	3,2
  2840  003B  283D               	goto	u2781
  2841  003C  283E               	goto	u2780
  2842  003D                     u2781:	
  2843  003D  2853               	goto	l669
  2844  003E                     u2780:	
  2845  003E                     l672:	
  2846                           ;main.c: 246:         do { LATCbits.LATC1 = 0; } while(0);
  2847                           
  2848  003E  0022               	movlb	2	; select bank2
  2849  003F  108E               	bcf	14,1	;volatile
  2850  0040                     l674:	
  2851                           ;main.c: 247:         do { LATCbits.LATC0 = 0; } while(0);
  2852                           
  2853  0040  100E               	bcf	14,0	;volatile
  2854  0041                     l676:	
  2855                           ;main.c: 248:         do { LATAbits.LATA6 = 0; } while(0);
  2856                           
  2857  0041  130C               	bcf	12,6	;volatile
  2858  0042                     l678:	
  2859                           ;main.c: 249:         do { LATAbits.LATA7 = 0; } while(0);
  2860                           
  2861  0042  138C               	bcf	12,7	;volatile
  2862  0043                     l3276:	
  2863                           
  2864                           ;main.c: 250:         heat1_state = 0;
  2865  0043  0020               	movlb	0	; select bank0
  2866  0044  01AB               	clrf	_heat1_state
  2867                           
  2868                           ;main.c: 251:         heat2_state = 0;
  2869  0045  01AA               	clrf	_heat2_state
  2870  0046                     l3278:	
  2871  0046  0022               	movlb	2	; select bank2
  2872  0047  130E               	bcf	14,6	;volatile
  2873  0048                     l3280:	
  2874  0048  128E               	bcf	14,5	;volatile
  2875  0049                     l3282:	
  2876  0049  120E               	bcf	14,4	;volatile
  2877  004A                     l3284:	
  2878  004A  118F               	bcf	15,3	;volatile
  2879  004B                     l3286:	
  2880  004B  118E               	bcf	14,3	;volatile
  2881  004C                     l3288:	
  2882  004C  110E               	bcf	14,2	;volatile
  2883  004D                     l691:	
  2884                           
  2885                           ;main.c: 258:         massage_mode = 0;
  2886  004D  0020               	movlb	0	; select bank0
  2887  004E  01B5               	clrf	_massage_mode
  2888  004F                     l3290:	
  2889                           
  2890                           ;main.c: 259:         massage_intensity_setting = 1;
  2891  004F  01D9               	clrf	_massage_intensity_setting
  2892  0050  0AD9               	incf	_massage_intensity_setting,f
  2893  0051                     l3292:	
  2894                           
  2895                           ;main.c: 260:         massage_power = 0;
  2896  0051  1370               	bcf	_massage_power/(0+8),_massage_power& (0+7)
  2897  0052  2976               	goto	l692
  2898  0053                     l669:	
  2899                           ;main.c: 262:     }
  2900                           
  2901                           
  2902                           ;main.c: 268:     if(lift_open_state && !(lift_close_state || back_open_state || back_cl
      +                          ose_state || lock_btn_state)){
  2903  0053  1E70               	btfss	_lift_open_state/(0+8),_lift_open_state& (0+7)
  2904  0054  2856               	goto	u2791
  2905  0055  2857               	goto	u2790
  2906  0056                     u2791:	
  2907  0056  287B               	goto	l693
  2908  0057                     u2790:	
  2909  0057                     l3296:	
  2910  0057  19F0               	btfsc	_lift_close_state/(0+8),_lift_close_state& (0+7)
  2911  0058  285A               	goto	u2801
  2912  0059  285B               	goto	u2800
  2913  005A                     u2801:	
  2914  005A  287B               	goto	l693
  2915  005B                     u2800:	
  2916  005B                     l3298:	
  2917  005B  1970               	btfsc	_back_open_state/(0+8),_back_open_state& (0+7)
  2918  005C  285E               	goto	u2811
  2919  005D  285F               	goto	u2810
  2920  005E                     u2811:	
  2921  005E  287B               	goto	l693
  2922  005F                     u2810:	
  2923  005F                     l3300:	
  2924  005F  18F0               	btfsc	_back_close_state/(0+8),_back_close_state& (0+7)
  2925  0060  2862               	goto	u2821
  2926  0061  2863               	goto	u2820
  2927  0062                     u2821:	
  2928  0062  287B               	goto	l693
  2929  0063                     u2820:	
  2930  0063                     l3302:	
  2931  0063  19F1               	btfsc	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  2932  0064  2866               	goto	u2831
  2933  0065  2867               	goto	u2830
  2934  0066                     u2831:	
  2935  0066  287B               	goto	l693
  2936  0067                     u2830:	
  2937  0067                     l3304:	
  2938                           
  2939                           ;main.c: 269:         if(lift_open_delay){
  2940  0067  083E               	movf	_lift_open_delay,w
  2941  0068  1903               	btfsc	3,2
  2942  0069  286B               	goto	u2841
  2943  006A  286C               	goto	u2840
  2944  006B                     u2841:	
  2945  006B  286F               	goto	l698
  2946  006C                     u2840:	
  2947  006C                     l695:	
  2948                           ;main.c: 270:             do { LATCbits.LATC1 = 0; } while(0);
  2949                           
  2950  006C  0022               	movlb	2	; select bank2
  2951  006D  108E               	bcf	14,1	;volatile
  2952  006E  2876               	goto	l3308
  2953  006F                     l698:	
  2954                           ;main.c: 272:             do { LATCbits.LATC1 = 1; } while(0);
  2955                           
  2956  006F  0022               	movlb	2	; select bank2
  2957  0070  148E               	bsf	14,1	;volatile
  2958  0071                     l3306:	
  2959                           
  2960                           ;main.c: 273:             lift_close_delay = 200;
  2961  0071  30C8               	movlw	200
  2962  0072  0020               	movlb	0	; select bank0
  2963  0073  00E3               	movwf	??_Execute
  2964  0074  0863               	movf	??_Execute,w
  2965  0075  00BD               	movwf	_lift_close_delay
  2966  0076                     l3308:	
  2967  0076  0022               	movlb	2	; select bank2
  2968  0077  100E               	bcf	14,0	;volatile
  2969  0078                     l3310:	
  2970  0078  130C               	bcf	12,6	;volatile
  2971  0079                     l3312:	
  2972  0079  138C               	bcf	12,7	;volatile
  2973  007A  28F8               	goto	l3368
  2974  007B                     l693:	
  2975  007B  1DF0               	btfss	_lift_close_state/(0+8),_lift_close_state& (0+7)
  2976  007C  287E               	goto	u2851
  2977  007D  287F               	goto	u2850
  2978  007E                     u2851:	
  2979  007E  28A3               	goto	l707
  2980  007F                     u2850:	
  2981  007F                     l3314:	
  2982  007F  1A70               	btfsc	_lift_open_state/(0+8),_lift_open_state& (0+7)
  2983  0080  2882               	goto	u2861
  2984  0081  2883               	goto	u2860
  2985  0082                     u2861:	
  2986  0082  28A3               	goto	l707
  2987  0083                     u2860:	
  2988  0083                     l3316:	
  2989  0083  1970               	btfsc	_back_open_state/(0+8),_back_open_state& (0+7)
  2990  0084  2886               	goto	u2871
  2991  0085  2887               	goto	u2870
  2992  0086                     u2871:	
  2993  0086  28A3               	goto	l707
  2994  0087                     u2870:	
  2995  0087                     l3318:	
  2996  0087  18F0               	btfsc	_back_close_state/(0+8),_back_close_state& (0+7)
  2997  0088  288A               	goto	u2881
  2998  0089  288B               	goto	u2880
  2999  008A                     u2881:	
  3000  008A  28A3               	goto	l707
  3001  008B                     u2880:	
  3002  008B                     l3320:	
  3003  008B  19F1               	btfsc	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  3004  008C  288E               	goto	u2891
  3005  008D  288F               	goto	u2890
  3006  008E                     u2891:	
  3007  008E  28A3               	goto	l707
  3008  008F                     u2890:	
  3009  008F                     l3322:	
  3010                           
  3011                           ;main.c: 279:         if(lift_close_delay){
  3012  008F  083D               	movf	_lift_close_delay,w
  3013  0090  1903               	btfsc	3,2
  3014  0091  2893               	goto	u2901
  3015  0092  2894               	goto	u2900
  3016  0093                     u2901:	
  3017  0093  2897               	goto	l712
  3018  0094                     u2900:	
  3019  0094                     l709:	
  3020                           ;main.c: 280:             do { LATCbits.LATC0 = 0; } while(0);
  3021                           
  3022  0094  0022               	movlb	2	; select bank2
  3023  0095  100E               	bcf	14,0	;volatile
  3024  0096  289E               	goto	l3326
  3025  0097                     l712:	
  3026                           ;main.c: 282:             do { LATCbits.LATC0 = 1; } while(0);
  3027                           
  3028  0097  0022               	movlb	2	; select bank2
  3029  0098  140E               	bsf	14,0	;volatile
  3030  0099                     l3324:	
  3031                           
  3032                           ;main.c: 283:             lift_open_delay = 200;
  3033  0099  30C8               	movlw	200
  3034  009A  0020               	movlb	0	; select bank0
  3035  009B  00E3               	movwf	??_Execute
  3036  009C  0863               	movf	??_Execute,w
  3037  009D  00BE               	movwf	_lift_open_delay
  3038  009E                     l3326:	
  3039  009E  0022               	movlb	2	; select bank2
  3040  009F  108E               	bcf	14,1	;volatile
  3041  00A0                     l3328:	
  3042  00A0  130C               	bcf	12,6	;volatile
  3043  00A1                     l3330:	
  3044  00A1  138C               	bcf	12,7	;volatile
  3045  00A2  28F8               	goto	l3368
  3046  00A3                     l707:	
  3047  00A3  1D70               	btfss	_back_open_state/(0+8),_back_open_state& (0+7)
  3048  00A4  28A6               	goto	u2911
  3049  00A5  28A7               	goto	u2910
  3050  00A6                     u2911:	
  3051  00A6  28CB               	goto	l721
  3052  00A7                     u2910:	
  3053  00A7                     l3332:	
  3054  00A7  1A70               	btfsc	_lift_open_state/(0+8),_lift_open_state& (0+7)
  3055  00A8  28AA               	goto	u2921
  3056  00A9  28AB               	goto	u2920
  3057  00AA                     u2921:	
  3058  00AA  28CB               	goto	l721
  3059  00AB                     u2920:	
  3060  00AB                     l3334:	
  3061  00AB  19F0               	btfsc	_lift_close_state/(0+8),_lift_close_state& (0+7)
  3062  00AC  28AE               	goto	u2931
  3063  00AD  28AF               	goto	u2930
  3064  00AE                     u2931:	
  3065  00AE  28CB               	goto	l721
  3066  00AF                     u2930:	
  3067  00AF                     l3336:	
  3068  00AF  18F0               	btfsc	_back_close_state/(0+8),_back_close_state& (0+7)
  3069  00B0  28B2               	goto	u2941
  3070  00B1  28B3               	goto	u2940
  3071  00B2                     u2941:	
  3072  00B2  28CB               	goto	l721
  3073  00B3                     u2940:	
  3074  00B3                     l3338:	
  3075  00B3  19F1               	btfsc	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  3076  00B4  28B6               	goto	u2951
  3077  00B5  28B7               	goto	u2950
  3078  00B6                     u2951:	
  3079  00B6  28CB               	goto	l721
  3080  00B7                     u2950:	
  3081  00B7                     l3340:	
  3082                           
  3083                           ;main.c: 289:         if(back_open_delay){
  3084  00B7  083C               	movf	_back_open_delay,w
  3085  00B8  1903               	btfsc	3,2
  3086  00B9  28BB               	goto	u2961
  3087  00BA  28BC               	goto	u2960
  3088  00BB                     u2961:	
  3089  00BB  28BF               	goto	l726
  3090  00BC                     u2960:	
  3091  00BC                     l723:	
  3092                           ;main.c: 290:             do { LATAbits.LATA6 = 0; } while(0);
  3093                           
  3094  00BC  0022               	movlb	2	; select bank2
  3095  00BD  130C               	bcf	12,6	;volatile
  3096  00BE  28C6               	goto	l3344
  3097  00BF                     l726:	
  3098                           ;main.c: 292:             do { LATAbits.LATA6 = 1; } while(0);
  3099                           
  3100  00BF  0022               	movlb	2	; select bank2
  3101  00C0  170C               	bsf	12,6	;volatile
  3102  00C1                     l3342:	
  3103                           
  3104                           ;main.c: 293:             back_close_delay = 200;
  3105  00C1  30C8               	movlw	200
  3106  00C2  0020               	movlb	0	; select bank0
  3107  00C3  00E3               	movwf	??_Execute
  3108  00C4  0863               	movf	??_Execute,w
  3109  00C5  00BB               	movwf	_back_close_delay
  3110  00C6                     l3344:	
  3111  00C6  0022               	movlb	2	; select bank2
  3112  00C7  108E               	bcf	14,1	;volatile
  3113  00C8                     l3346:	
  3114  00C8  100E               	bcf	14,0	;volatile
  3115  00C9                     l3348:	
  3116  00C9  138C               	bcf	12,7	;volatile
  3117  00CA  28F8               	goto	l3368
  3118  00CB                     l721:	
  3119  00CB  1CF0               	btfss	_back_close_state/(0+8),_back_close_state& (0+7)
  3120  00CC  28CE               	goto	u2971
  3121  00CD  28CF               	goto	u2970
  3122  00CE                     u2971:	
  3123  00CE  28F3               	goto	l749
  3124  00CF                     u2970:	
  3125  00CF                     l3350:	
  3126  00CF  1A70               	btfsc	_lift_open_state/(0+8),_lift_open_state& (0+7)
  3127  00D0  28D2               	goto	u2981
  3128  00D1  28D3               	goto	u2980
  3129  00D2                     u2981:	
  3130  00D2  28F3               	goto	l749
  3131  00D3                     u2980:	
  3132  00D3                     l3352:	
  3133  00D3  19F0               	btfsc	_lift_close_state/(0+8),_lift_close_state& (0+7)
  3134  00D4  28D6               	goto	u2991
  3135  00D5  28D7               	goto	u2990
  3136  00D6                     u2991:	
  3137  00D6  28F3               	goto	l749
  3138  00D7                     u2990:	
  3139  00D7                     l3354:	
  3140  00D7  1970               	btfsc	_back_open_state/(0+8),_back_open_state& (0+7)
  3141  00D8  28DA               	goto	u3001
  3142  00D9  28DB               	goto	u3000
  3143  00DA                     u3001:	
  3144  00DA  28F3               	goto	l749
  3145  00DB                     u3000:	
  3146  00DB                     l3356:	
  3147  00DB  19F1               	btfsc	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  3148  00DC  28DE               	goto	u3011
  3149  00DD  28DF               	goto	u3010
  3150  00DE                     u3011:	
  3151  00DE  28F3               	goto	l749
  3152  00DF                     u3010:	
  3153  00DF                     l3358:	
  3154                           
  3155                           ;main.c: 299:         if(back_close_delay){
  3156  00DF  083B               	movf	_back_close_delay,w
  3157  00E0  1903               	btfsc	3,2
  3158  00E1  28E3               	goto	u3021
  3159  00E2  28E4               	goto	u3020
  3160  00E3                     u3021:	
  3161  00E3  28E7               	goto	l740
  3162  00E4                     u3020:	
  3163  00E4                     l737:	
  3164                           ;main.c: 300:             do { LATAbits.LATA7 = 0; } while(0);
  3165                           
  3166  00E4  0022               	movlb	2	; select bank2
  3167  00E5  138C               	bcf	12,7	;volatile
  3168  00E6  28EE               	goto	l3362
  3169  00E7                     l740:	
  3170                           ;main.c: 302:             do { LATAbits.LATA7 = 1; } while(0);
  3171                           
  3172  00E7  0022               	movlb	2	; select bank2
  3173  00E8  178C               	bsf	12,7	;volatile
  3174  00E9                     l3360:	
  3175                           
  3176                           ;main.c: 303:             back_open_delay = 200;
  3177  00E9  30C8               	movlw	200
  3178  00EA  0020               	movlb	0	; select bank0
  3179  00EB  00E3               	movwf	??_Execute
  3180  00EC  0863               	movf	??_Execute,w
  3181  00ED  00BC               	movwf	_back_open_delay
  3182  00EE                     l3362:	
  3183  00EE  0022               	movlb	2	; select bank2
  3184  00EF  108E               	bcf	14,1	;volatile
  3185  00F0                     l3364:	
  3186  00F0  100E               	bcf	14,0	;volatile
  3187  00F1                     l3366:	
  3188  00F1  130C               	bcf	12,6	;volatile
  3189  00F2  28F8               	goto	l3368
  3190  00F3                     l749:	
  3191                           ;main.c: 309:         do { LATCbits.LATC1 = 0; } while(0);
  3192                           
  3193  00F3  0022               	movlb	2	; select bank2
  3194  00F4  108E               	bcf	14,1	;volatile
  3195  00F5                     l751:	
  3196                           ;main.c: 310:         do { LATCbits.LATC0 = 0; } while(0);
  3197                           
  3198  00F5  100E               	bcf	14,0	;volatile
  3199  00F6                     l753:	
  3200                           ;main.c: 311:         do { LATAbits.LATA6 = 0; } while(0);
  3201                           
  3202  00F6  130C               	bcf	12,6	;volatile
  3203  00F7                     l755:	
  3204                           ;main.c: 312:         do { LATAbits.LATA7 = 0; } while(0);
  3205                           
  3206  00F7  138C               	bcf	12,7	;volatile
  3207  00F8                     l3368:	
  3208                           
  3209                           ;main.c: 315:     if(pwm_count){
  3210  00F8  087D               	movf	_pwm_count,w
  3211  00F9  1903               	btfsc	3,2
  3212  00FA  28FC               	goto	u3031
  3213  00FB  28FD               	goto	u3030
  3214  00FC                     u3031:	
  3215  00FC  2900               	goto	l3372
  3216  00FD                     u3030:	
  3217  00FD                     l3370:	
  3218                           
  3219                           ;main.c: 316:         pwm_count--;
  3220  00FD  3001               	movlw	1
  3221  00FE  02FD               	subwf	_pwm_count,f
  3222                           
  3223                           ;main.c: 317:     }else{
  3224  00FF  2905               	goto	l3374
  3225  0100                     l3372:	
  3226                           
  3227                           ;main.c: 318:         pwm_count = 40;
  3228  0100  3028               	movlw	40
  3229  0101  0020               	movlb	0	; select bank0
  3230  0102  00E3               	movwf	??_Execute
  3231  0103  0863               	movf	??_Execute,w
  3232  0104  00FD               	movwf	_pwm_count
  3233  0105                     l3374:	
  3234                           
  3235                           ;main.c: 322:     if(!heat1_timer){
  3236  0105  0020               	movlb	0	; select bank0
  3237  0106  0824               	movf	_heat1_timer,w
  3238  0107  0425               	iorwf	_heat1_timer+1,w
  3239  0108  1D03               	btfss	3,2
  3240  0109  290B               	goto	u3041
  3241  010A  290C               	goto	u3040
  3242  010B                     u3041:	
  3243  010B  290D               	goto	l3378
  3244  010C                     u3040:	
  3245  010C                     l3376:	
  3246                           
  3247                           ;main.c: 323:         heat1_state = 0;
  3248  010C  01AB               	clrf	_heat1_state
  3249  010D                     l3378:	
  3250                           
  3251                           ;main.c: 325:     if(!heat2_timer){
  3252  010D  0822               	movf	_heat2_timer,w
  3253  010E  0423               	iorwf	_heat2_timer+1,w
  3254  010F  1D03               	btfss	3,2
  3255  0110  2912               	goto	u3051
  3256  0111  2913               	goto	u3050
  3257  0112                     u3051:	
  3258  0112  2914               	goto	l3382
  3259  0113                     u3050:	
  3260  0113                     l3380:	
  3261                           
  3262                           ;main.c: 326:         heat2_state = 0;
  3263  0113  01AA               	clrf	_heat2_state
  3264  0114                     l3382:	
  3265                           
  3266                           ;main.c: 330:     if(lift_open_state || lift_close_state || back_open_state || back_clos
      +                          e_state){
  3267  0114  1A70               	btfsc	_lift_open_state/(0+8),_lift_open_state& (0+7)
  3268  0115  2917               	goto	u3061
  3269  0116  2918               	goto	u3060
  3270  0117                     u3061:	
  3271  0117  2924               	goto	l764
  3272  0118                     u3060:	
  3273  0118                     l3384:	
  3274  0118  19F0               	btfsc	_lift_close_state/(0+8),_lift_close_state& (0+7)
  3275  0119  291B               	goto	u3071
  3276  011A  291C               	goto	u3070
  3277  011B                     u3071:	
  3278  011B  2924               	goto	l764
  3279  011C                     u3070:	
  3280  011C                     l3386:	
  3281  011C  1970               	btfsc	_back_open_state/(0+8),_back_open_state& (0+7)
  3282  011D  291F               	goto	u3081
  3283  011E  2920               	goto	u3080
  3284  011F                     u3081:	
  3285  011F  2924               	goto	l764
  3286  0120                     u3080:	
  3287  0120                     l3388:	
  3288  0120  1CF0               	btfss	_back_close_state/(0+8),_back_close_state& (0+7)
  3289  0121  2923               	goto	u3091
  3290  0122  2924               	goto	u3090
  3291  0123                     u3091:	
  3292  0123  2928               	goto	l3390
  3293  0124                     u3090:	
  3294  0124                     l764:	
  3295                           ;main.c: 331:         do { LATCbits.LATC6 = 0; } while(0);
  3296                           
  3297  0124  0022               	movlb	2	; select bank2
  3298  0125  130E               	bcf	14,6	;volatile
  3299  0126                     l766:	
  3300                           ;main.c: 332:         do { LATCbits.LATC5 = 0; } while(0);
  3301                           
  3302  0126  128E               	bcf	14,5	;volatile
  3303  0127  2973               	goto	l3404
  3304  0128                     l3390:	
  3305                           
  3306                           ;main.c: 334:         if(pwm_count <= 40/4){
  3307  0128  300B               	movlw	11
  3308  0129  027D               	subwf	_pwm_count,w
  3309  012A  1803               	skipnc
  3310  012B  292D               	goto	u3101
  3311  012C  292E               	goto	u3100
  3312  012D                     u3101:	
  3313  012D  293C               	goto	l3394
  3314  012E                     u3100:	
  3315  012E                     l770:	
  3316                           ;main.c: 335:             do { LATCbits.LATC5 = 0; } while(0);
  3317                           
  3318  012E  0022               	movlb	2	; select bank2
  3319  012F  128E               	bcf	14,5	;volatile
  3320  0130                     l3392:	
  3321                           
  3322                           ;main.c: 336:             if(heat1_state){
  3323  0130  0020               	movlb	0	; select bank0
  3324  0131  082B               	movf	_heat1_state,w
  3325  0132  1903               	btfsc	3,2
  3326  0133  2935               	goto	u3111
  3327  0134  2936               	goto	u3110
  3328  0135                     u3111:	
  3329  0135  2939               	goto	l776
  3330  0136                     u3110:	
  3331  0136                     l773:	
  3332                           ;main.c: 337:                 do { LATCbits.LATC6 = 1; } while(0);
  3333                           
  3334  0136  0022               	movlb	2	; select bank2
  3335  0137  170E               	bsf	14,6	;volatile
  3336  0138  2973               	goto	l3404
  3337  0139                     l776:	
  3338                           ;main.c: 339:                 do { LATCbits.LATC6 = 0; } while(0);
  3339                           
  3340  0139  0022               	movlb	2	; select bank2
  3341  013A  130E               	bcf	14,6	;volatile
  3342  013B  2973               	goto	l3404
  3343  013C                     l3394:	
  3344  013C  3015               	movlw	21
  3345  013D  027D               	subwf	_pwm_count,w
  3346  013E  1803               	skipnc
  3347  013F  2941               	goto	u3121
  3348  0140  2942               	goto	u3120
  3349  0141                     u3121:	
  3350  0141  2951               	goto	l3398
  3351  0142                     u3120:	
  3352  0142                     l780:	
  3353                           ;main.c: 342:             do { LATCbits.LATC5 = 0; } while(0);
  3354                           
  3355  0142  0022               	movlb	2	; select bank2
  3356  0143  128E               	bcf	14,5	;volatile
  3357  0144                     l3396:	
  3358                           
  3359                           ;main.c: 343:             if(heat1_state == 2){
  3360  0144  3002               	movlw	2
  3361  0145  0020               	movlb	0	; select bank0
  3362  0146  062B               	xorwf	_heat1_state,w
  3363  0147  1D03               	btfss	3,2
  3364  0148  294A               	goto	u3131
  3365  0149  294B               	goto	u3130
  3366  014A                     u3131:	
  3367  014A  294E               	goto	l786
  3368  014B                     u3130:	
  3369  014B                     l783:	
  3370                           ;main.c: 344:                 do { LATCbits.LATC6 = 1; } while(0);
  3371                           
  3372  014B  0022               	movlb	2	; select bank2
  3373  014C  170E               	bsf	14,6	;volatile
  3374  014D  2973               	goto	l3404
  3375  014E                     l786:	
  3376                           ;main.c: 346:                 do { LATCbits.LATC6 = 0; } while(0);
  3377                           
  3378  014E  0022               	movlb	2	; select bank2
  3379  014F  130E               	bcf	14,6	;volatile
  3380  0150  2973               	goto	l3404
  3381  0151                     l3398:	
  3382  0151  301F               	movlw	31
  3383  0152  027D               	subwf	_pwm_count,w
  3384  0153  1803               	skipnc
  3385  0154  2956               	goto	u3141
  3386  0155  2957               	goto	u3140
  3387  0156                     u3141:	
  3388  0156  2965               	goto	l799
  3389  0157                     u3140:	
  3390  0157                     l790:	
  3391                           ;main.c: 349:             do { LATCbits.LATC6 = 0; } while(0);
  3392                           
  3393  0157  0022               	movlb	2	; select bank2
  3394  0158  130E               	bcf	14,6	;volatile
  3395  0159                     l3400:	
  3396                           
  3397                           ;main.c: 350:             if(heat2_state){
  3398  0159  0020               	movlb	0	; select bank0
  3399  015A  082A               	movf	_heat2_state,w
  3400  015B  1903               	btfsc	3,2
  3401  015C  295E               	goto	u3151
  3402  015D  295F               	goto	u3150
  3403  015E                     u3151:	
  3404  015E  2962               	goto	l796
  3405  015F                     u3150:	
  3406  015F                     l793:	
  3407                           ;main.c: 351:                 do { LATCbits.LATC5 = 1; } while(0);
  3408                           
  3409  015F  0022               	movlb	2	; select bank2
  3410  0160  168E               	bsf	14,5	;volatile
  3411  0161  2973               	goto	l3404
  3412  0162                     l796:	
  3413                           ;main.c: 353:                 do { LATCbits.LATC5 = 0; } while(0);
  3414                           
  3415  0162  0022               	movlb	2	; select bank2
  3416  0163  128E               	bcf	14,5	;volatile
  3417  0164  2973               	goto	l3404
  3418  0165                     l799:	
  3419                           ;main.c: 356:             do { LATCbits.LATC6 = 0; } while(0);
  3420                           
  3421  0165  0022               	movlb	2	; select bank2
  3422  0166  130E               	bcf	14,6	;volatile
  3423  0167                     l3402:	
  3424                           
  3425                           ;main.c: 357:             if(heat2_state == 2){
  3426  0167  3002               	movlw	2
  3427  0168  0020               	movlb	0	; select bank0
  3428  0169  062A               	xorwf	_heat2_state,w
  3429  016A  1D03               	btfss	3,2
  3430  016B  296D               	goto	u3161
  3431  016C  296E               	goto	u3160
  3432  016D                     u3161:	
  3433  016D  2971               	goto	l805
  3434  016E                     u3160:	
  3435  016E                     l802:	
  3436                           ;main.c: 358:                 do { LATCbits.LATC5 = 1; } while(0);
  3437                           
  3438  016E  0022               	movlb	2	; select bank2
  3439  016F  168E               	bsf	14,5	;volatile
  3440  0170  2973               	goto	l3404
  3441  0171                     l805:	
  3442                           ;main.c: 360:                 do { LATCbits.LATC5 = 0; } while(0);
  3443                           
  3444  0171  0022               	movlb	2	; select bank2
  3445  0172  128E               	bcf	14,5	;volatile
  3446  0173                     l3404:	
  3447                           
  3448                           ;main.c: 366:     Massage();
  3449  0173  3184  24B5  3180   	fcall	_Massage
  3450  0176                     l692:	
  3451  0176  0008               	return
  3452  0177                     __end_of_Execute:	
  3453                           
  3454                           	psect	text9
  3455  04B5                     __ptext9:	
  3456 ;; *************** function _Massage *****************
  3457 ;; Defined at:
  3458 ;;		line 547 in file "main.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3472 ;;      Params:         0       0       0       0       0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0       0       0       0
  3474 ;;      Temps:          0       0       2       0       0       0       0       0
  3475 ;;      Totals:         0       0       2       0       0       0       0       0
  3476 ;;Total ram usage:        2 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    4
  3479 ;; This function calls:
  3480 ;;		_Z1SetHigh
  3481 ;;		_Z1SetLow
  3482 ;;		_Z2SetHigh
  3483 ;;		_Z2SetLow
  3484 ;;		_Z3SetHigh
  3485 ;;		_Z3SetLow
  3486 ;;		_Z4SetHigh
  3487 ;;		_Z4SetLow
  3488 ;; This function is called by:
  3489 ;;		_Execute
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           
  3494                           ;psect for function _Massage
  3495  04B5                     _Massage:	
  3496  04B5                     l3210:	
  3497                           ;incstack = 0
  3498                           ; Regs used in _Massage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3499                           
  3500                           
  3501                           ;main.c: 549:     if(!massage_timer){
  3502  04B5  0020               	movlb	0	; select bank0
  3503  04B6  0820               	movf	_massage_timer,w
  3504  04B7  0421               	iorwf	_massage_timer+1,w
  3505  04B8  1D03               	btfss	3,2
  3506  04B9  2CBB               	goto	u2651
  3507  04BA  2CBC               	goto	u2650
  3508  04BB                     u2651:	
  3509  04BB  2CBD               	goto	l1028
  3510  04BC                     u2650:	
  3511  04BC                     l3212:	
  3512                           
  3513                           ;main.c: 550:         massage_power = 0;
  3514  04BC  1370               	bcf	_massage_power/(0+8),_massage_power& (0+7)
  3515  04BD                     l1028:	
  3516                           ;main.c: 551:     }
  3517                           
  3518                           
  3519                           ;main.c: 553:     if(massage_power && !(lift_open_state || lift_close_state || back_open
      +                          _state || back_close_state)){
  3520  04BD  1F70               	btfss	_massage_power/(0+8),_massage_power& (0+7)
  3521  04BE  2CC0               	goto	u2661
  3522  04BF  2CC1               	goto	u2660
  3523  04C0                     u2661:	
  3524  04C0  2D7E               	goto	l1102
  3525  04C1                     u2660:	
  3526  04C1                     l3214:	
  3527  04C1  1A70               	btfsc	_lift_open_state/(0+8),_lift_open_state& (0+7)
  3528  04C2  2CC4               	goto	u2671
  3529  04C3  2CC5               	goto	u2670
  3530  04C4                     u2671:	
  3531  04C4  2D7E               	goto	l1102
  3532  04C5                     u2670:	
  3533  04C5                     l3216:	
  3534  04C5  19F0               	btfsc	_lift_close_state/(0+8),_lift_close_state& (0+7)
  3535  04C6  2CC8               	goto	u2681
  3536  04C7  2CC9               	goto	u2680
  3537  04C8                     u2681:	
  3538  04C8  2D7E               	goto	l1102
  3539  04C9                     u2680:	
  3540  04C9                     l3218:	
  3541  04C9  1970               	btfsc	_back_open_state/(0+8),_back_open_state& (0+7)
  3542  04CA  2CCC               	goto	u2691
  3543  04CB  2CCD               	goto	u2690
  3544  04CC                     u2691:	
  3545  04CC  2D7E               	goto	l1102
  3546  04CD                     u2690:	
  3547  04CD                     l3220:	
  3548  04CD  18F0               	btfsc	_back_close_state/(0+8),_back_close_state& (0+7)
  3549  04CE  2CD0               	goto	u2701
  3550  04CF  2CD1               	goto	u2700
  3551  04D0                     u2701:	
  3552  04D0  2D7E               	goto	l1102
  3553  04D1                     u2700:	
  3554  04D1  2CE4               	goto	l3232
  3555  04D2                     l3224:	
  3556                           
  3557                           ;main.c: 557:                 massage_intensity = (40*20/100) - 40/10;
  3558  04D2  3004               	movlw	4
  3559  04D3  00A0               	movwf	??_Massage^(0+128)
  3560  04D4  0820               	movf	??_Massage^(0+128),w
  3561  04D5  0020               	movlb	0	; select bank0
  3562  04D6  00BA               	movwf	_massage_intensity
  3563                           
  3564                           ;main.c: 558:                 break;
  3565  04D7  2D69               	goto	l3256
  3566  04D8                     l3226:	
  3567                           
  3568                           ;main.c: 560:                 massage_intensity = (40*30/100) - 40/10;
  3569  04D8  3008               	movlw	8
  3570  04D9  00A0               	movwf	??_Massage^(0+128)
  3571  04DA  0820               	movf	??_Massage^(0+128),w
  3572  04DB  0020               	movlb	0	; select bank0
  3573  04DC  00BA               	movwf	_massage_intensity
  3574                           
  3575                           ;main.c: 561:                 break;
  3576  04DD  2D69               	goto	l3256
  3577  04DE                     l3228:	
  3578                           
  3579                           ;main.c: 563:                 massage_intensity = (40*40/100) - 40/10;
  3580  04DE  300C               	movlw	12
  3581  04DF  00A0               	movwf	??_Massage^(0+128)
  3582  04E0  0820               	movf	??_Massage^(0+128),w
  3583  04E1  0020               	movlb	0	; select bank0
  3584  04E2  00BA               	movwf	_massage_intensity
  3585                           
  3586                           ;main.c: 564:                 break;
  3587  04E3  2D69               	goto	l3256
  3588  04E4                     l3232:	
  3589  04E4  0859               	movf	_massage_intensity_setting,w
  3590  04E5  0021               	movlb	1	; select bank1
  3591  04E6  00A0               	movwf	??_Massage^(0+128)
  3592  04E7  01A1               	clrf	(??_Massage^(0+128)+1)
  3593                           
  3594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3595                           ; Switch size 1, requested type "simple"
  3596                           ; Number of cases is 1, Range of values is 0 to 0
  3597                           ; switch strategies available:
  3598                           ; Name         Instructions Cycles
  3599                           ; simple_byte            4     3 (average)
  3600                           ; direct_byte            8     6 (fixed)
  3601                           ; jumptable            260     6 (fixed)
  3602                           ;	Chosen strategy is simple_byte
  3603  04E8  0821               	movf	(??_Massage+1)^(0+128),w
  3604  04E9  3A00               	xorlw	0	; case 0
  3605  04EA  1903               	skipnz
  3606  04EB  2CED               	goto	l3606
  3607  04EC  2D69               	goto	l3256
  3608  04ED                     l3606:	
  3609                           
  3610                           ; Switch size 1, requested type "simple"
  3611                           ; Number of cases is 3, Range of values is 0 to 2
  3612                           ; switch strategies available:
  3613                           ; Name         Instructions Cycles
  3614                           ; simple_byte           10     6 (average)
  3615                           ; direct_byte           12     6 (fixed)
  3616                           ; jumptable            260     6 (fixed)
  3617                           ;	Chosen strategy is simple_byte
  3618  04ED  0820               	movf	??_Massage^(0+128),w
  3619  04EE  3A00               	xorlw	0	; case 0
  3620  04EF  1903               	skipnz
  3621  04F0  2CD2               	goto	l3224
  3622  04F1  3A01               	xorlw	1	; case 1
  3623  04F2  1903               	skipnz
  3624  04F3  2CD8               	goto	l3226
  3625  04F4  3A03               	xorlw	3	; case 2
  3626  04F5  1903               	skipnz
  3627  04F6  2CDE               	goto	l3228
  3628  04F7  2D69               	goto	l3256
  3629  04F8                     l3234:	
  3630                           
  3631                           ;main.c: 570:                 if(steady_massage_intensity > pwm_count){
  3632  04F8  0020               	movlb	0	; select bank0
  3633  04F9  0837               	movf	_steady_massage_intensity,w
  3634  04FA  027D               	subwf	_pwm_count,w
  3635  04FB  1803               	skipnc
  3636  04FC  2CFE               	goto	u2711
  3637  04FD  2CFF               	goto	u2710
  3638  04FE                     u2711:	
  3639  04FE  2D05               	goto	l1047
  3640  04FF                     u2710:	
  3641  04FF                     l1038:	
  3642                           ;main.c: 571:                     do { LATCbits.LATC4 = 1; } while(0);
  3643                           
  3644  04FF  0022               	movlb	2	; select bank2
  3645  0500  160E               	bsf	14,4	;volatile
  3646  0501                     l1040:	
  3647                           ;main.c: 572:                     do { LATDbits.LATD3 = 1; } while(0);
  3648                           
  3649  0501  158F               	bsf	15,3	;volatile
  3650  0502                     l1042:	
  3651                           ;main.c: 573:                     do { LATCbits.LATC3 = 1; } while(0);
  3652                           
  3653  0502  158E               	bsf	14,3	;volatile
  3654  0503                     l1044:	
  3655                           ;main.c: 574:                     do { LATCbits.LATC2 = 1; } while(0);
  3656                           
  3657  0503  150E               	bsf	14,2	;volatile
  3658  0504  2D83               	goto	l1110
  3659  0505                     l1047:	
  3660                           ;main.c: 576:                     do { LATCbits.LATC4 = 0; } while(0);
  3661                           
  3662  0505  0022               	movlb	2	; select bank2
  3663  0506  120E               	bcf	14,4	;volatile
  3664  0507                     l1049:	
  3665                           ;main.c: 577:                     do { LATDbits.LATD3 = 0; } while(0);
  3666                           
  3667  0507  118F               	bcf	15,3	;volatile
  3668  0508                     l1051:	
  3669                           ;main.c: 578:                     do { LATCbits.LATC3 = 0; } while(0);
  3670                           
  3671  0508  118E               	bcf	14,3	;volatile
  3672  0509                     l1053:	
  3673                           ;main.c: 579:                     do { LATCbits.LATC2 = 0; } while(0);
  3674                           
  3675  0509  110E               	bcf	14,2	;volatile
  3676  050A  2D83               	goto	l1110
  3677  050B                     l3236:	
  3678                           
  3679                           ;main.c: 585:                 if(pulse_wave_in_intensity > pwm_count){
  3680  050B  0020               	movlb	0	; select bank0
  3681  050C  0839               	movf	_pulse_wave_in_intensity,w
  3682  050D  027D               	subwf	_pwm_count,w
  3683  050E  1803               	skipnc
  3684  050F  2D11               	goto	u2721
  3685  0510  2D12               	goto	u2720
  3686  0511                     u2721:	
  3687  0511  2D18               	goto	l3240
  3688  0512                     u2720:	
  3689  0512                     l3238:	
  3690                           
  3691                           ;main.c: 586:                     WaveInOn();
  3692  0512  084E               	movf	_WaveInOn+1,w
  3693  0513  008A               	movwf	10
  3694  0514  084D               	movf	_WaveInOn,w
  3695  0515  000A               	callw
  3696  0516  3184               	pagesel	$
  3697                           
  3698                           ;main.c: 587:                 }else{
  3699  0517  2D1D               	goto	l3242
  3700  0518                     l3240:	
  3701                           
  3702                           ;main.c: 588:                     WaveInOff();
  3703  0518  084C               	movf	_WaveInOff+1,w
  3704  0519  008A               	movwf	10
  3705  051A  084B               	movf	_WaveInOff,w
  3706  051B  000A               	callw
  3707  051C  3184               	pagesel	$
  3708  051D                     l3242:	
  3709                           
  3710                           ;main.c: 591:                 if(pulse_wave_out_intensity > pwm_count){
  3711  051D  0020               	movlb	0	; select bank0
  3712  051E  0838               	movf	_pulse_wave_out_intensity,w
  3713  051F  027D               	subwf	_pwm_count,w
  3714  0520  1803               	skipnc
  3715  0521  2D23               	goto	u2731
  3716  0522  2D24               	goto	u2730
  3717  0523                     u2731:	
  3718  0523  2D2A               	goto	l3246
  3719  0524                     u2730:	
  3720  0524                     l3244:	
  3721                           
  3722                           ;main.c: 592:                     WaveOutOn();
  3723  0524  084A               	movf	_WaveOutOn+1,w
  3724  0525  008A               	movwf	10
  3725  0526  0849               	movf	_WaveOutOn,w
  3726  0527  000A               	callw
  3727  0528  3184               	pagesel	$
  3728                           
  3729                           ;main.c: 593:                 }else{
  3730  0529  2D2F               	goto	l1060
  3731  052A                     l3246:	
  3732                           
  3733                           ;main.c: 594:                     WaveOutOff();
  3734  052A  0848               	movf	_WaveOutOff+1,w
  3735  052B  008A               	movwf	10
  3736  052C  0847               	movf	_WaveOutOff,w
  3737  052D  000A               	callw
  3738  052E  3184               	pagesel	$
  3739  052F                     l1060:	
  3740                           ;main.c: 595:                 }
  3741                           
  3742                           
  3743                           ;main.c: 597:                 WaveGap1Off();
  3744  052F  0020               	movlb	0	; select bank0
  3745  0530  0844               	movf	_WaveGap1Off+1,w
  3746  0531  008A               	movwf	10
  3747  0532  0843               	movf	_WaveGap1Off,w
  3748  0533  000A               	callw
  3749  0534  3184               	pagesel	$
  3750                           
  3751                           ;main.c: 598:                 WaveGap2Off();
  3752  0535  0020               	movlb	0	; select bank0
  3753  0536  0840               	movf	_WaveGap2Off+1,w
  3754  0537  008A               	movwf	10
  3755  0538  083F               	movf	_WaveGap2Off,w
  3756  0539  000A               	callw
  3757  053A  3184               	pagesel	$
  3758                           
  3759                           ;main.c: 599:                 break;
  3760  053B  2D83               	goto	l1110
  3761  053C                     l1061:	
  3762                           ;main.c: 600:             case 2:
  3763                           
  3764                           
  3765                           ;main.c: 601:                 if(pulse_direction){
  3766  053C  1C71               	btfss	_pulse_direction/(0+8),_pulse_direction& (0+7)
  3767  053D  2D3F               	goto	u2741
  3768  053E  2D40               	goto	u2740
  3769  053F                     u2741:	
  3770  053F  2D53               	goto	l3250
  3771  0540                     u2740:	
  3772  0540                     l3248:	
  3773                           
  3774                           ;main.c: 603:                     if(pulse_wave_in_intensity > pwm_count){
  3775  0540  0020               	movlb	0	; select bank0
  3776  0541  0839               	movf	_pulse_wave_in_intensity,w
  3777  0542  027D               	subwf	_pwm_count,w
  3778  0543  1803               	skipnc
  3779  0544  2D46               	goto	u2751
  3780  0545  2D47               	goto	u2750
  3781  0546                     u2751:	
  3782  0546  2D4D               	goto	l1073
  3783  0547                     u2750:	
  3784  0547                     l1064:	
  3785                           ;main.c: 604:                         do { LATCbits.LATC4 = 1; } while(0);
  3786                           
  3787  0547  0022               	movlb	2	; select bank2
  3788  0548  160E               	bsf	14,4	;volatile
  3789  0549                     l1066:	
  3790                           ;main.c: 605:                         do { LATDbits.LATD3 = 1; } while(0);
  3791                           
  3792  0549  158F               	bsf	15,3	;volatile
  3793  054A                     l1068:	
  3794                           ;main.c: 606:                         do { LATCbits.LATC3 = 1; } while(0);
  3795                           
  3796  054A  158E               	bsf	14,3	;volatile
  3797  054B                     l1070:	
  3798                           ;main.c: 607:                         do { LATCbits.LATC2 = 1; } while(0);
  3799                           
  3800  054B  150E               	bsf	14,2	;volatile
  3801  054C  2D83               	goto	l1110
  3802  054D                     l1073:	
  3803                           ;main.c: 609:                         do { LATCbits.LATC4 = 0; } while(0);
  3804                           
  3805  054D  0022               	movlb	2	; select bank2
  3806  054E  120E               	bcf	14,4	;volatile
  3807  054F                     l1075:	
  3808                           ;main.c: 610:                         do { LATDbits.LATD3 = 0; } while(0);
  3809                           
  3810  054F  118F               	bcf	15,3	;volatile
  3811  0550                     l1077:	
  3812                           ;main.c: 611:                         do { LATCbits.LATC3 = 0; } while(0);
  3813                           
  3814  0550  118E               	bcf	14,3	;volatile
  3815  0551                     l1079:	
  3816                           ;main.c: 612:                         do { LATCbits.LATC2 = 0; } while(0);
  3817                           
  3818  0551  110E               	bcf	14,2	;volatile
  3819  0552  2D83               	goto	l1110
  3820  0553                     l3250:	
  3821                           
  3822                           ;main.c: 616:                     if(pulse_wave_out_intensity > pwm_count){
  3823  0553  0020               	movlb	0	; select bank0
  3824  0554  0838               	movf	_pulse_wave_out_intensity,w
  3825  0555  027D               	subwf	_pwm_count,w
  3826  0556  1803               	skipnc
  3827  0557  2D59               	goto	u2761
  3828  0558  2D5A               	goto	u2760
  3829  0559                     u2761:	
  3830  0559  2D60               	goto	l1092
  3831  055A                     u2760:	
  3832  055A                     l1083:	
  3833                           ;main.c: 617:                         do { LATCbits.LATC4 = 1; } while(0);
  3834                           
  3835  055A  0022               	movlb	2	; select bank2
  3836  055B  160E               	bsf	14,4	;volatile
  3837  055C                     l1085:	
  3838                           ;main.c: 618:                         do { LATDbits.LATD3 = 1; } while(0);
  3839                           
  3840  055C  158F               	bsf	15,3	;volatile
  3841  055D                     l1087:	
  3842                           ;main.c: 619:                         do { LATCbits.LATC3 = 1; } while(0);
  3843                           
  3844  055D  158E               	bsf	14,3	;volatile
  3845  055E                     l1089:	
  3846                           ;main.c: 620:                         do { LATCbits.LATC2 = 1; } while(0);
  3847                           
  3848  055E  150E               	bsf	14,2	;volatile
  3849  055F  2D83               	goto	l1110
  3850  0560                     l1092:	
  3851                           ;main.c: 622:                         do { LATCbits.LATC4 = 0; } while(0);
  3852                           
  3853  0560  0022               	movlb	2	; select bank2
  3854  0561  120E               	bcf	14,4	;volatile
  3855  0562                     l1094:	
  3856                           ;main.c: 623:                         do { LATDbits.LATD3 = 0; } while(0);
  3857                           
  3858  0562  118F               	bcf	15,3	;volatile
  3859  0563                     l1096:	
  3860                           ;main.c: 624:                         do { LATCbits.LATC3 = 0; } while(0);
  3861                           
  3862  0563  118E               	bcf	14,3	;volatile
  3863  0564                     l1098:	
  3864                           ;main.c: 625:                         do { LATCbits.LATC2 = 0; } while(0);
  3865                           
  3866  0564  110E               	bcf	14,2	;volatile
  3867  0565  2D83               	goto	l1110
  3868  0566                     l3252:	
  3869                           
  3870                           ;main.c: 632:                 massage_mode = 0;
  3871  0566  0020               	movlb	0	; select bank0
  3872  0567  01B5               	clrf	_massage_mode
  3873                           
  3874                           ;main.c: 633:                 break;
  3875  0568  2D83               	goto	l1110
  3876  0569                     l3256:	
  3877  0569  0020               	movlb	0	; select bank0
  3878  056A  0835               	movf	_massage_mode,w
  3879  056B  0021               	movlb	1	; select bank1
  3880  056C  00A0               	movwf	??_Massage^(0+128)
  3881  056D  01A1               	clrf	(??_Massage^(0+128)+1)
  3882                           
  3883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3884                           ; Switch size 1, requested type "simple"
  3885                           ; Number of cases is 1, Range of values is 0 to 0
  3886                           ; switch strategies available:
  3887                           ; Name         Instructions Cycles
  3888                           ; simple_byte            4     3 (average)
  3889                           ; direct_byte            8     6 (fixed)
  3890                           ; jumptable            260     6 (fixed)
  3891                           ;	Chosen strategy is simple_byte
  3892  056E  0821               	movf	(??_Massage+1)^(0+128),w
  3893  056F  3A00               	xorlw	0	; case 0
  3894  0570  1903               	skipnz
  3895  0571  2D73               	goto	l3608
  3896  0572  2D66               	goto	l3252
  3897  0573                     l3608:	
  3898                           
  3899                           ; Switch size 1, requested type "simple"
  3900                           ; Number of cases is 3, Range of values is 0 to 2
  3901                           ; switch strategies available:
  3902                           ; Name         Instructions Cycles
  3903                           ; simple_byte           10     6 (average)
  3904                           ; direct_byte           12     6 (fixed)
  3905                           ; jumptable            260     6 (fixed)
  3906                           ;	Chosen strategy is simple_byte
  3907  0573  0820               	movf	??_Massage^(0+128),w
  3908  0574  3A00               	xorlw	0	; case 0
  3909  0575  1903               	skipnz
  3910  0576  2CF8               	goto	l3234
  3911  0577  3A01               	xorlw	1	; case 1
  3912  0578  1903               	skipnz
  3913  0579  2D0B               	goto	l3236
  3914  057A  3A03               	xorlw	3	; case 2
  3915  057B  1903               	skipnz
  3916  057C  2D3C               	goto	l1061
  3917  057D  2D66               	goto	l3252
  3918  057E                     l1102:	
  3919                           ;main.c: 637:         do { LATCbits.LATC4 = 0; } while(0);
  3920                           
  3921  057E  0022               	movlb	2	; select bank2
  3922  057F  120E               	bcf	14,4	;volatile
  3923  0580                     l1104:	
  3924                           ;main.c: 638:         do { LATDbits.LATD3 = 0; } while(0);
  3925                           
  3926  0580  118F               	bcf	15,3	;volatile
  3927  0581                     l1106:	
  3928                           ;main.c: 639:         do { LATCbits.LATC3 = 0; } while(0);
  3929                           
  3930  0581  118E               	bcf	14,3	;volatile
  3931  0582                     l1108:	
  3932                           ;main.c: 640:         do { LATCbits.LATC2 = 0; } while(0);
  3933                           
  3934  0582  110E               	bcf	14,2	;volatile
  3935  0583                     l1110:	
  3936  0583  0008               	return
  3937  0584                     __end_of_Massage:	
  3938                           
  3939                           	psect	text10
  3940  0694                     __ptext10:	
  3941 ;; *************** function _Z3SetLow *****************
  3942 ;; Defined at:
  3943 ;;		line 259 in file "mcc_generated_files/tmr0.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		None
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3957 ;;      Params:         0       0       0       0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    3
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_Massage
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           
  3972                           ;psect for function _Z3SetLow
  3973  0694                     _Z3SetLow:	
  3974  0694                     l183:	
  3975                           ;incstack = 0
  3976                           ; Regs used in _Z3SetLow: []
  3977                           ;mcc_generated_files/tmr0.c: 260:     do { LATCbits.LATC3 = 0; } while(0);
  3978                           
  3979  0694  0022               	movlb	2	; select bank2
  3980  0695  118E               	bcf	14,3	;volatile
  3981  0696                     l185:	
  3982  0696  0008               	return
  3983  0697                     __end_of_Z3SetLow:	
  3984                           
  3985                           	psect	text11
  3986  0697                     __ptext11:	
  3987 ;; *************** function _Z1SetLow *****************
  3988 ;; Defined at:
  3989 ;;		line 243 in file "mcc_generated_files/tmr0.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		None
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4003 ;;      Params:         0       0       0       0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0
  4006 ;;      Totals:         0       0       0       0       0       0       0       0
  4007 ;;Total ram usage:        0 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    3
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_Massage
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function _Z1SetLow
  4019  0697                     _Z1SetLow:	
  4020  0697                     l163:	
  4021                           ;incstack = 0
  4022                           ; Regs used in _Z1SetLow: []
  4023                           ;mcc_generated_files/tmr0.c: 244:     do { LATCbits.LATC4 = 0; } while(0);
  4024                           
  4025  0697  0022               	movlb	2	; select bank2
  4026  0698  120E               	bcf	14,4	;volatile
  4027  0699                     l165:	
  4028  0699  0008               	return
  4029  069A                     __end_of_Z1SetLow:	
  4030                           
  4031                           	psect	text12
  4032  069A                     __ptext12:	
  4033 ;; *************** function _Z2SetLow *****************
  4034 ;; Defined at:
  4035 ;;		line 251 in file "mcc_generated_files/tmr0.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		None
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4049 ;;      Params:         0       0       0       0       0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0
  4052 ;;      Totals:         0       0       0       0       0       0       0       0
  4053 ;;Total ram usage:        0 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    3
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_Massage
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _Z2SetLow
  4065  069A                     _Z2SetLow:	
  4066  069A                     l173:	
  4067                           ;incstack = 0
  4068                           ; Regs used in _Z2SetLow: []
  4069                           ;mcc_generated_files/tmr0.c: 252:     do { LATDbits.LATD3 = 0; } while(0);
  4070                           
  4071  069A  0022               	movlb	2	; select bank2
  4072  069B  118F               	bcf	15,3	;volatile
  4073  069C                     l175:	
  4074  069C  0008               	return
  4075  069D                     __end_of_Z2SetLow:	
  4076                           
  4077                           	psect	text13
  4078  069D                     __ptext13:	
  4079 ;; *************** function _Z4SetLow *****************
  4080 ;; Defined at:
  4081 ;;		line 267 in file "mcc_generated_files/tmr0.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		None
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4095 ;;      Params:         0       0       0       0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0
  4098 ;;      Totals:         0       0       0       0       0       0       0       0
  4099 ;;Total ram usage:        0 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    3
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_Massage
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           
  4110                           ;psect for function _Z4SetLow
  4111  069D                     _Z4SetLow:	
  4112  069D                     l193:	
  4113                           ;incstack = 0
  4114                           ; Regs used in _Z4SetLow: []
  4115                           ;mcc_generated_files/tmr0.c: 268:     do { LATCbits.LATC2 = 0; } while(0);
  4116                           
  4117  069D  0022               	movlb	2	; select bank2
  4118  069E  110E               	bcf	14,2	;volatile
  4119  069F                     l195:	
  4120  069F  0008               	return
  4121  06A0                     __end_of_Z4SetLow:	
  4122                           
  4123                           	psect	text14
  4124  06A0                     __ptext14:	
  4125 ;; *************** function _Z3SetHigh *****************
  4126 ;; Defined at:
  4127 ;;		line 255 in file "mcc_generated_files/tmr0.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;		None
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		None
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4141 ;;      Params:         0       0       0       0       0       0       0       0
  4142 ;;      Locals:         0       0       0       0       0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0
  4144 ;;      Totals:         0       0       0       0       0       0       0       0
  4145 ;;Total ram usage:        0 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    3
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_Massage
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           
  4156                           ;psect for function _Z3SetHigh
  4157  06A0                     _Z3SetHigh:	
  4158  06A0                     l178:	
  4159                           ;incstack = 0
  4160                           ; Regs used in _Z3SetHigh: []
  4161                           ;mcc_generated_files/tmr0.c: 256:     do { LATCbits.LATC3 = 1; } while(0);
  4162                           
  4163  06A0  0022               	movlb	2	; select bank2
  4164  06A1  158E               	bsf	14,3	;volatile
  4165  06A2                     l180:	
  4166  06A2  0008               	return
  4167  06A3                     __end_of_Z3SetHigh:	
  4168                           
  4169                           	psect	text15
  4170  06A3                     __ptext15:	
  4171 ;; *************** function _Z1SetHigh *****************
  4172 ;; Defined at:
  4173 ;;		line 239 in file "mcc_generated_files/tmr0.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		None
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4187 ;;      Params:         0       0       0       0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0
  4190 ;;      Totals:         0       0       0       0       0       0       0       0
  4191 ;;Total ram usage:        0 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    3
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_Massage
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function _Z1SetHigh
  4203  06A3                     _Z1SetHigh:	
  4204  06A3                     l158:	
  4205                           ;incstack = 0
  4206                           ; Regs used in _Z1SetHigh: []
  4207                           ;mcc_generated_files/tmr0.c: 240:     do { LATCbits.LATC4 = 1; } while(0);
  4208                           
  4209  06A3  0022               	movlb	2	; select bank2
  4210  06A4  160E               	bsf	14,4	;volatile
  4211  06A5                     l160:	
  4212  06A5  0008               	return
  4213  06A6                     __end_of_Z1SetHigh:	
  4214                           
  4215                           	psect	text16
  4216  06A6                     __ptext16:	
  4217 ;; *************** function _Z2SetHigh *****************
  4218 ;; Defined at:
  4219 ;;		line 247 in file "mcc_generated_files/tmr0.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		None
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4233 ;;      Params:         0       0       0       0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0
  4236 ;;      Totals:         0       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    3
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_Massage
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           
  4248                           ;psect for function _Z2SetHigh
  4249  06A6                     _Z2SetHigh:	
  4250  06A6                     l168:	
  4251                           ;incstack = 0
  4252                           ; Regs used in _Z2SetHigh: []
  4253                           ;mcc_generated_files/tmr0.c: 248:     do { LATDbits.LATD3 = 1; } while(0);
  4254                           
  4255  06A6  0022               	movlb	2	; select bank2
  4256  06A7  158F               	bsf	15,3	;volatile
  4257  06A8                     l170:	
  4258  06A8  0008               	return
  4259  06A9                     __end_of_Z2SetHigh:	
  4260                           
  4261                           	psect	text17
  4262  06A9                     __ptext17:	
  4263 ;; *************** function _Z4SetHigh *****************
  4264 ;; Defined at:
  4265 ;;		line 263 in file "mcc_generated_files/tmr0.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		None
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4279 ;;      Params:         0       0       0       0       0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0
  4282 ;;      Totals:         0       0       0       0       0       0       0       0
  4283 ;;Total ram usage:        0 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    3
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_Massage
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           
  4294                           ;psect for function _Z4SetHigh
  4295  06A9                     _Z4SetHigh:	
  4296  06A9                     l188:	
  4297                           ;incstack = 0
  4298                           ; Regs used in _Z4SetHigh: []
  4299                           ;mcc_generated_files/tmr0.c: 264:     do { LATCbits.LATC2 = 1; } while(0);
  4300                           
  4301  06A9  0022               	movlb	2	; select bank2
  4302  06AA  150E               	bsf	14,2	;volatile
  4303  06AB                     l190:	
  4304  06AB  0008               	return
  4305  06AC                     __end_of_Z4SetHigh:	
  4306                           
  4307                           	psect	text18
  4308  0177                     __ptext18:	
  4309 ;; *************** function _Debounce *****************
  4310 ;; Defined at:
  4311 ;;		line 91 in file "main.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4325 ;;      Params:         0       0       0       0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0
  4327 ;;      Temps:          0       1       0       0       0       0       0       0
  4328 ;;      Totals:         0       1       0       0       0       0       0       0
  4329 ;;Total ram usage:        1 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    3
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_main
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function _Debounce
  4341  0177                     _Debounce:	
  4342  0177                     l2726:	
  4343                           ;incstack = 0
  4344                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  4345                           
  4346                           
  4347                           ;main.c: 94:     if(led_flash_timer){
  4348  0177  0020               	movlb	0	; select bank0
  4349  0178  0853               	movf	_led_flash_timer,w
  4350  0179  0454               	iorwf	_led_flash_timer+1,w
  4351  017A  1903               	btfsc	3,2
  4352  017B  297D               	goto	u1781
  4353  017C  297E               	goto	u1780
  4354  017D                     u1781:	
  4355  017D  2980               	goto	l618
  4356  017E                     u1780:	
  4357  017E  2A96               	goto	l619
  4358  017F                     l2728:	
  4359                           
  4360                           ;main.c: 95:        return;
  4361  017F  2A96               	goto	l619
  4362  0180                     l618:	
  4363                           ;main.c: 96:     }
  4364                           
  4365                           
  4366                           ;main.c: 99:     if(!PORTAbits.RA3){
  4367  0180  198C               	btfsc	12,3	;volatile
  4368  0181  2983               	goto	u1791
  4369  0182  2984               	goto	u1790
  4370  0183                     u1791:	
  4371  0183  298E               	goto	l2734
  4372  0184                     u1790:	
  4373  0184                     l2730:	
  4374                           
  4375                           ;main.c: 100:         if(lock_debounce){
  4376  0184  082C               	movf	_lock_debounce,w
  4377  0185  1903               	btfsc	3,2
  4378  0186  2988               	goto	u1801
  4379  0187  2989               	goto	u1800
  4380  0188                     u1801:	
  4381  0188  298C               	goto	l621
  4382  0189                     u1800:	
  4383  0189                     l2732:	
  4384                           
  4385                           ;main.c: 101:             lock_debounce--;
  4386  0189  3001               	movlw	1
  4387  018A  02AC               	subwf	_lock_debounce,f
  4388                           
  4389                           ;main.c: 102:         }else{
  4390  018B  2993               	goto	l2738
  4391  018C                     l621:	
  4392                           
  4393                           ;main.c: 103:             lock_btn_state = 1;
  4394  018C  15F1               	bsf	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  4395                           
  4396                           ;main.c: 104:             return;
  4397  018D  2A96               	goto	l619
  4398  018E                     l2734:	
  4399                           
  4400                           ;main.c: 107:         lock_debounce = 30;
  4401  018E  301E               	movlw	30
  4402  018F  00E3               	movwf	??_Debounce
  4403  0190  0863               	movf	??_Debounce,w
  4404  0191  00AC               	movwf	_lock_debounce
  4405  0192                     l2736:	
  4406                           
  4407                           ;main.c: 108:         lock_btn_state = 0;
  4408  0192  11F1               	bcf	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  4409  0193                     l2738:	
  4410                           
  4411                           ;main.c: 112:     if(!PORTAbits.RA2){
  4412  0193  190C               	btfsc	12,2	;volatile
  4413  0194  2996               	goto	u1811
  4414  0195  2997               	goto	u1810
  4415  0196                     u1811:	
  4416  0196  29A1               	goto	l2744
  4417  0197                     u1810:	
  4418  0197                     l2740:	
  4419                           
  4420                           ;main.c: 113:         if(lift_open_debounce){
  4421  0197  0834               	movf	_lift_open_debounce,w
  4422  0198  1903               	btfsc	3,2
  4423  0199  299B               	goto	u1821
  4424  019A  299C               	goto	u1820
  4425  019B                     u1821:	
  4426  019B  299F               	goto	l625
  4427  019C                     u1820:	
  4428  019C                     l2742:	
  4429                           
  4430                           ;main.c: 114:             lift_open_debounce--;
  4431  019C  3001               	movlw	1
  4432  019D  02B4               	subwf	_lift_open_debounce,f
  4433                           
  4434                           ;main.c: 115:         }else{
  4435  019E  29A6               	goto	l2748
  4436  019F                     l625:	
  4437                           
  4438                           ;main.c: 116:             lift_open_state = 1;
  4439  019F  1670               	bsf	_lift_open_state/(0+8),_lift_open_state& (0+7)
  4440  01A0  29A6               	goto	l2748
  4441  01A1                     l2744:	
  4442                           
  4443                           ;main.c: 119:         lift_open_debounce = 30;
  4444  01A1  301E               	movlw	30
  4445  01A2  00E3               	movwf	??_Debounce
  4446  01A3  0863               	movf	??_Debounce,w
  4447  01A4  00B4               	movwf	_lift_open_debounce
  4448  01A5                     l2746:	
  4449                           
  4450                           ;main.c: 120:         lift_open_state = 0;
  4451  01A5  1270               	bcf	_lift_open_state/(0+8),_lift_open_state& (0+7)
  4452  01A6                     l2748:	
  4453                           
  4454                           ;main.c: 124:     if(!PORTEbits.RE2){
  4455  01A6  1910               	btfsc	16,2	;volatile
  4456  01A7  29A9               	goto	u1831
  4457  01A8  29AA               	goto	u1830
  4458  01A9                     u1831:	
  4459  01A9  29B4               	goto	l2754
  4460  01AA                     u1830:	
  4461  01AA                     l2750:	
  4462                           
  4463                           ;main.c: 125:         if(lift_close_debounce){
  4464  01AA  0833               	movf	_lift_close_debounce,w
  4465  01AB  1903               	btfsc	3,2
  4466  01AC  29AE               	goto	u1841
  4467  01AD  29AF               	goto	u1840
  4468  01AE                     u1841:	
  4469  01AE  29B2               	goto	l629
  4470  01AF                     u1840:	
  4471  01AF                     l2752:	
  4472                           
  4473                           ;main.c: 126:             lift_close_debounce--;
  4474  01AF  3001               	movlw	1
  4475  01B0  02B3               	subwf	_lift_close_debounce,f
  4476                           
  4477                           ;main.c: 127:         }else{
  4478  01B1  29B9               	goto	l2758
  4479  01B2                     l629:	
  4480                           
  4481                           ;main.c: 128:             lift_close_state = 1;
  4482  01B2  15F0               	bsf	_lift_close_state/(0+8),_lift_close_state& (0+7)
  4483  01B3  29B9               	goto	l2758
  4484  01B4                     l2754:	
  4485                           
  4486                           ;main.c: 131:         lift_close_debounce = 30;
  4487  01B4  301E               	movlw	30
  4488  01B5  00E3               	movwf	??_Debounce
  4489  01B6  0863               	movf	??_Debounce,w
  4490  01B7  00B3               	movwf	_lift_close_debounce
  4491  01B8                     l2756:	
  4492                           
  4493                           ;main.c: 132:         lift_close_state = 0;
  4494  01B8  11F0               	bcf	_lift_close_state/(0+8),_lift_close_state& (0+7)
  4495  01B9                     l2758:	
  4496                           
  4497                           ;main.c: 136:     if(!PORTBbits.RB2){
  4498  01B9  190D               	btfsc	13,2	;volatile
  4499  01BA  29BC               	goto	u1851
  4500  01BB  29BD               	goto	u1850
  4501  01BC                     u1851:	
  4502  01BC  29C7               	goto	l2764
  4503  01BD                     u1850:	
  4504  01BD                     l2760:	
  4505                           
  4506                           ;main.c: 137:         if(back_open_debounce){
  4507  01BD  0832               	movf	_back_open_debounce,w
  4508  01BE  1903               	btfsc	3,2
  4509  01BF  29C1               	goto	u1861
  4510  01C0  29C2               	goto	u1860
  4511  01C1                     u1861:	
  4512  01C1  29C5               	goto	l633
  4513  01C2                     u1860:	
  4514  01C2                     l2762:	
  4515                           
  4516                           ;main.c: 138:             back_open_debounce--;
  4517  01C2  3001               	movlw	1
  4518  01C3  02B2               	subwf	_back_open_debounce,f
  4519                           
  4520                           ;main.c: 139:         }else{
  4521  01C4  29CC               	goto	l2768
  4522  01C5                     l633:	
  4523                           
  4524                           ;main.c: 140:             back_open_state = 1;
  4525  01C5  1570               	bsf	_back_open_state/(0+8),_back_open_state& (0+7)
  4526  01C6  29CC               	goto	l2768
  4527  01C7                     l2764:	
  4528                           
  4529                           ;main.c: 143:         back_open_debounce = 30;
  4530  01C7  301E               	movlw	30
  4531  01C8  00E3               	movwf	??_Debounce
  4532  01C9  0863               	movf	??_Debounce,w
  4533  01CA  00B2               	movwf	_back_open_debounce
  4534  01CB                     l2766:	
  4535                           
  4536                           ;main.c: 144:         back_open_state = 0;
  4537  01CB  1170               	bcf	_back_open_state/(0+8),_back_open_state& (0+7)
  4538  01CC                     l2768:	
  4539                           
  4540                           ;main.c: 148:     if(!PORTDbits.RD7){
  4541  01CC  1B8F               	btfsc	15,7	;volatile
  4542  01CD  29CF               	goto	u1871
  4543  01CE  29D0               	goto	u1870
  4544  01CF                     u1871:	
  4545  01CF  29DA               	goto	l2774
  4546  01D0                     u1870:	
  4547  01D0                     l2770:	
  4548                           
  4549                           ;main.c: 149:         if(back_close_debounce){
  4550  01D0  0831               	movf	_back_close_debounce,w
  4551  01D1  1903               	btfsc	3,2
  4552  01D2  29D4               	goto	u1881
  4553  01D3  29D5               	goto	u1880
  4554  01D4                     u1881:	
  4555  01D4  29D8               	goto	l637
  4556  01D5                     u1880:	
  4557  01D5                     l2772:	
  4558                           
  4559                           ;main.c: 150:             back_close_debounce--;
  4560  01D5  3001               	movlw	1
  4561  01D6  02B1               	subwf	_back_close_debounce,f
  4562                           
  4563                           ;main.c: 151:         }else{
  4564  01D7  29DF               	goto	l2778
  4565  01D8                     l637:	
  4566                           
  4567                           ;main.c: 152:             back_close_state = 1;
  4568  01D8  14F0               	bsf	_back_close_state/(0+8),_back_close_state& (0+7)
  4569  01D9  29DF               	goto	l2778
  4570  01DA                     l2774:	
  4571                           
  4572                           ;main.c: 155:         back_close_debounce = 30;
  4573  01DA  301E               	movlw	30
  4574  01DB  00E3               	movwf	??_Debounce
  4575  01DC  0863               	movf	??_Debounce,w
  4576  01DD  00B1               	movwf	_back_close_debounce
  4577  01DE                     l2776:	
  4578                           
  4579                           ;main.c: 156:         back_close_state = 0;
  4580  01DE  10F0               	bcf	_back_close_state/(0+8),_back_close_state& (0+7)
  4581  01DF                     l2778:	
  4582                           
  4583                           ;main.c: 160:     if(lift_open_state || lift_close_state || back_open_state || back_clos
      +                          e_state){
  4584  01DF  1A70               	btfsc	_lift_open_state/(0+8),_lift_open_state& (0+7)
  4585  01E0  29E2               	goto	u1891
  4586  01E1  29E3               	goto	u1890
  4587  01E2                     u1891:	
  4588  01E2  2A96               	goto	l619
  4589  01E3                     u1890:	
  4590  01E3                     l2780:	
  4591  01E3  19F0               	btfsc	_lift_close_state/(0+8),_lift_close_state& (0+7)
  4592  01E4  29E6               	goto	u1901
  4593  01E5  29E7               	goto	u1900
  4594  01E6                     u1901:	
  4595  01E6  2A96               	goto	l619
  4596  01E7                     u1900:	
  4597  01E7                     l2782:	
  4598  01E7  1970               	btfsc	_back_open_state/(0+8),_back_open_state& (0+7)
  4599  01E8  29EA               	goto	u1911
  4600  01E9  29EB               	goto	u1910
  4601  01EA                     u1911:	
  4602  01EA  2A96               	goto	l619
  4603  01EB                     u1910:	
  4604  01EB                     l2784:	
  4605  01EB  1CF0               	btfss	_back_close_state/(0+8),_back_close_state& (0+7)
  4606  01EC  29EE               	goto	u1921
  4607  01ED  29EF               	goto	u1920
  4608  01EE                     u1921:	
  4609  01EE  29F0               	goto	l640
  4610  01EF                     u1920:	
  4611  01EF  2A96               	goto	l619
  4612  01F0                     l640:	
  4613                           ;main.c: 162:     }
  4614                           
  4615                           
  4616                           ;main.c: 165:     if(!PORTBbits.RB5){
  4617  01F0  1A8D               	btfsc	13,5	;volatile
  4618  01F1  29F3               	goto	u1931
  4619  01F2  29F4               	goto	u1930
  4620  01F3                     u1931:	
  4621  01F3  2A11               	goto	l2798
  4622  01F4                     u1930:	
  4623  01F4                     l2786:	
  4624                           
  4625                           ;main.c: 166:         if(heat1_debounce){
  4626  01F4  0830               	movf	_heat1_debounce,w
  4627  01F5  1903               	btfsc	3,2
  4628  01F6  29F8               	goto	u1941
  4629  01F7  29F9               	goto	u1940
  4630  01F8                     u1941:	
  4631  01F8  2A15               	goto	l2800
  4632  01F9                     u1940:	
  4633  01F9                     l2788:	
  4634                           
  4635                           ;main.c: 167:             heat1_debounce--;
  4636  01F9  3001               	movlw	1
  4637  01FA  02B0               	subwf	_heat1_debounce,f
  4638                           
  4639                           ;main.c: 168:             if(!heat1_debounce){
  4640  01FB  0830               	movf	_heat1_debounce,w
  4641  01FC  1D03               	btfss	3,2
  4642  01FD  29FF               	goto	u1951
  4643  01FE  2A00               	goto	u1950
  4644  01FF                     u1951:	
  4645  01FF  2A15               	goto	l2800
  4646  0200                     u1950:	
  4647  0200                     l2790:	
  4648                           
  4649                           ;main.c: 169:                 heat1_timer = 1800;
  4650  0200  3008               	movlw	8
  4651  0201  00A4               	movwf	_heat1_timer
  4652  0202  3007               	movlw	7
  4653  0203  00A5               	movwf	_heat1_timer+1
  4654  0204                     l2792:	
  4655                           
  4656                           ;main.c: 170:                 heat1_state++;
  4657  0204  3001               	movlw	1
  4658  0205  00E3               	movwf	??_Debounce
  4659  0206  0863               	movf	??_Debounce,w
  4660  0207  07AB               	addwf	_heat1_state,f
  4661  0208                     l2794:	
  4662                           
  4663                           ;main.c: 171:                 if(heat1_state > 2){
  4664  0208  3003               	movlw	3
  4665  0209  022B               	subwf	_heat1_state,w
  4666  020A  1C03               	skipc
  4667  020B  2A0D               	goto	u1961
  4668  020C  2A0E               	goto	u1960
  4669  020D                     u1961:	
  4670  020D  2A10               	goto	l644
  4671  020E                     u1960:	
  4672  020E                     l2796:	
  4673                           
  4674                           ;main.c: 172:                     heat1_state = 0;
  4675  020E  01AB               	clrf	_heat1_state
  4676  020F  2A15               	goto	l2800
  4677  0210                     l644:	
  4678                           ;main.c: 175:         }
  4679                           
  4680                           
  4681                           ;main.c: 176:     }else{
  4682  0210  2A15               	goto	l2800
  4683  0211                     l2798:	
  4684                           
  4685                           ;main.c: 177:         heat1_debounce = 30;
  4686  0211  301E               	movlw	30
  4687  0212  00E3               	movwf	??_Debounce
  4688  0213  0863               	movf	??_Debounce,w
  4689  0214  00B0               	movwf	_heat1_debounce
  4690  0215                     l2800:	
  4691                           
  4692                           ;main.c: 180:     if(!PORTEbits.RE3){
  4693  0215  1990               	btfsc	16,3	;volatile
  4694  0216  2A18               	goto	u1971
  4695  0217  2A19               	goto	u1970
  4696  0218                     u1971:	
  4697  0218  2A36               	goto	l2814
  4698  0219                     u1970:	
  4699  0219                     l2802:	
  4700                           
  4701                           ;main.c: 181:         if(heat2_debounce){
  4702  0219  082F               	movf	_heat2_debounce,w
  4703  021A  1903               	btfsc	3,2
  4704  021B  2A1D               	goto	u1981
  4705  021C  2A1E               	goto	u1980
  4706  021D                     u1981:	
  4707  021D  2A3A               	goto	l2816
  4708  021E                     u1980:	
  4709  021E                     l2804:	
  4710                           
  4711                           ;main.c: 182:             heat2_debounce--;
  4712  021E  3001               	movlw	1
  4713  021F  02AF               	subwf	_heat2_debounce,f
  4714                           
  4715                           ;main.c: 183:             if(!heat2_debounce){
  4716  0220  082F               	movf	_heat2_debounce,w
  4717  0221  1D03               	btfss	3,2
  4718  0222  2A24               	goto	u1991
  4719  0223  2A25               	goto	u1990
  4720  0224                     u1991:	
  4721  0224  2A3A               	goto	l2816
  4722  0225                     u1990:	
  4723  0225                     l2806:	
  4724                           
  4725                           ;main.c: 184:                 heat2_timer = 1800;
  4726  0225  3008               	movlw	8
  4727  0226  00A2               	movwf	_heat2_timer
  4728  0227  3007               	movlw	7
  4729  0228  00A3               	movwf	_heat2_timer+1
  4730  0229                     l2808:	
  4731                           
  4732                           ;main.c: 185:                 heat2_state++;
  4733  0229  3001               	movlw	1
  4734  022A  00E3               	movwf	??_Debounce
  4735  022B  0863               	movf	??_Debounce,w
  4736  022C  07AA               	addwf	_heat2_state,f
  4737  022D                     l2810:	
  4738                           
  4739                           ;main.c: 186:                 if(heat2_state > 2){
  4740  022D  3003               	movlw	3
  4741  022E  022A               	subwf	_heat2_state,w
  4742  022F  1C03               	skipc
  4743  0230  2A32               	goto	u2001
  4744  0231  2A33               	goto	u2000
  4745  0232                     u2001:	
  4746  0232  2A35               	goto	l649
  4747  0233                     u2000:	
  4748  0233                     l2812:	
  4749                           
  4750                           ;main.c: 187:                     heat2_state = 0;
  4751  0233  01AA               	clrf	_heat2_state
  4752  0234  2A3A               	goto	l2816
  4753  0235                     l649:	
  4754                           ;main.c: 190:         }
  4755                           
  4756                           
  4757                           ;main.c: 191:     }else{
  4758  0235  2A3A               	goto	l2816
  4759  0236                     l2814:	
  4760                           
  4761                           ;main.c: 192:         heat2_debounce = 30;
  4762  0236  301E               	movlw	30
  4763  0237  00E3               	movwf	??_Debounce
  4764  0238  0863               	movf	??_Debounce,w
  4765  0239  00AF               	movwf	_heat2_debounce
  4766  023A                     l2816:	
  4767                           
  4768                           ;main.c: 195:     if(!PORTDbits.RD2){
  4769  023A  190F               	btfsc	15,2	;volatile
  4770  023B  2A3D               	goto	u2011
  4771  023C  2A3E               	goto	u2010
  4772  023D                     u2011:	
  4773  023D  2A57               	goto	l653
  4774  023E                     u2010:	
  4775  023E                     l2818:	
  4776                           
  4777                           ;main.c: 196:         if(mode_debounce){
  4778  023E  082D               	movf	_mode_debounce,w
  4779  023F  1903               	btfsc	3,2
  4780  0240  2A42               	goto	u2021
  4781  0241  2A43               	goto	u2020
  4782  0242                     u2021:	
  4783  0242  2A6C               	goto	l2842
  4784  0243                     u2020:	
  4785  0243                     l2820:	
  4786                           
  4787                           ;main.c: 197:             mode_debounce--;
  4788  0243  3001               	movlw	1
  4789  0244  02AD               	subwf	_mode_debounce,f
  4790                           
  4791                           ;main.c: 198:             if(!mode_debounce){
  4792  0245  082D               	movf	_mode_debounce,w
  4793  0246  1D03               	btfss	3,2
  4794  0247  2A49               	goto	u2031
  4795  0248  2A4A               	goto	u2030
  4796  0249                     u2031:	
  4797  0249  2A6C               	goto	l2842
  4798  024A                     u2030:	
  4799  024A                     l2822:	
  4800                           
  4801                           ;main.c: 199:                 massage_timer = 1800;
  4802  024A  3008               	movlw	8
  4803  024B  00A0               	movwf	_massage_timer
  4804  024C  3007               	movlw	7
  4805  024D  00A1               	movwf	_massage_timer+1
  4806  024E                     l2824:	
  4807                           
  4808                           ;main.c: 200:                 mode_btn_state = 1;
  4809  024E  16F0               	bsf	_mode_btn_state/(0+8),_mode_btn_state& (0+7)
  4810  024F                     l2826:	
  4811                           
  4812                           ;main.c: 201:                 if(!massage_power){
  4813  024F  1B70               	btfsc	_massage_power/(0+8),_massage_power& (0+7)
  4814  0250  2A52               	goto	u2041
  4815  0251  2A53               	goto	u2040
  4816  0252                     u2041:	
  4817  0252  2A55               	goto	l656
  4818  0253                     u2040:	
  4819  0253                     l2828:	
  4820                           
  4821                           ;main.c: 202:                     massage_power = 1;
  4822  0253  1770               	bsf	_massage_power/(0+8),_massage_power& (0+7)
  4823                           
  4824                           ;main.c: 203:                 }else{
  4825  0254  2A6C               	goto	l2842
  4826  0255                     l656:	
  4827                           
  4828                           ;main.c: 205:                     should_change_mode = 1;
  4829  0255  17F0               	bsf	_should_change_mode/(0+8),_should_change_mode& (0+7)
  4830  0256  2A6C               	goto	l2842
  4831  0257                     l653:	
  4832                           
  4833                           ;main.c: 210:         mode_btn_state = 0;
  4834  0257  12F0               	bcf	_mode_btn_state/(0+8),_mode_btn_state& (0+7)
  4835  0258                     l2830:	
  4836                           
  4837                           ;main.c: 211:         mode_debounce = 30;
  4838  0258  301E               	movlw	30
  4839  0259  00E3               	movwf	??_Debounce
  4840  025A  0863               	movf	??_Debounce,w
  4841  025B  00AD               	movwf	_mode_debounce
  4842  025C                     l2832:	
  4843                           
  4844                           ;main.c: 213:         if(should_change_mode){
  4845  025C  1FF0               	btfss	_should_change_mode/(0+8),_should_change_mode& (0+7)
  4846  025D  2A5F               	goto	u2051
  4847  025E  2A60               	goto	u2050
  4848  025F                     u2051:	
  4849  025F  2A6C               	goto	l2842
  4850  0260                     u2050:	
  4851  0260                     l2834:	
  4852                           
  4853                           ;main.c: 214:             should_change_mode = 0;
  4854  0260  13F0               	bcf	_should_change_mode/(0+8),_should_change_mode& (0+7)
  4855  0261                     l2836:	
  4856                           
  4857                           ;main.c: 215:             massage_mode++;
  4858  0261  3001               	movlw	1
  4859  0262  00E3               	movwf	??_Debounce
  4860  0263  0863               	movf	??_Debounce,w
  4861  0264  07B5               	addwf	_massage_mode,f
  4862  0265                     l2838:	
  4863                           
  4864                           ;main.c: 216:             if(massage_mode > 2){
  4865  0265  3003               	movlw	3
  4866  0266  0235               	subwf	_massage_mode,w
  4867  0267  1C03               	skipc
  4868  0268  2A6A               	goto	u2061
  4869  0269  2A6B               	goto	u2060
  4870  026A                     u2061:	
  4871  026A  2A6C               	goto	l2842
  4872  026B                     u2060:	
  4873  026B                     l2840:	
  4874                           
  4875                           ;main.c: 217:                 massage_mode = 0;
  4876  026B  01B5               	clrf	_massage_mode
  4877  026C                     l2842:	
  4878                           
  4879                           ;main.c: 223:     if(!PORTCbits.RC7){
  4880  026C  1B8E               	btfsc	14,7	;volatile
  4881  026D  2A6F               	goto	u2071
  4882  026E  2A70               	goto	u2070
  4883  026F                     u2071:	
  4884  026F  2A91               	goto	l661
  4885  0270                     u2070:	
  4886  0270                     l2844:	
  4887                           
  4888                           ;main.c: 224:         if(intensity_debounce){
  4889  0270  082E               	movf	_intensity_debounce,w
  4890  0271  1903               	btfsc	3,2
  4891  0272  2A74               	goto	u2081
  4892  0273  2A75               	goto	u2080
  4893  0274                     u2081:	
  4894  0274  2A96               	goto	l619
  4895  0275                     u2080:	
  4896  0275                     l2846:	
  4897                           
  4898                           ;main.c: 225:             intensity_debounce--;
  4899  0275  3001               	movlw	1
  4900  0276  02AE               	subwf	_intensity_debounce,f
  4901                           
  4902                           ;main.c: 226:             if(!intensity_debounce){
  4903  0277  082E               	movf	_intensity_debounce,w
  4904  0278  1D03               	btfss	3,2
  4905  0279  2A7B               	goto	u2091
  4906  027A  2A7C               	goto	u2090
  4907  027B                     u2091:	
  4908  027B  2A96               	goto	l619
  4909  027C                     u2090:	
  4910  027C                     l2848:	
  4911                           
  4912                           ;main.c: 227:                 massage_timer = 1800;
  4913  027C  3008               	movlw	8
  4914  027D  00A0               	movwf	_massage_timer
  4915  027E  3007               	movlw	7
  4916  027F  00A1               	movwf	_massage_timer+1
  4917  0280                     l2850:	
  4918                           
  4919                           ;main.c: 228:                 intensity_btn_state = 1;
  4920  0280  1470               	bsf	_intensity_btn_state/(0+8),_intensity_btn_state& (0+7)
  4921  0281                     l2852:	
  4922                           
  4923                           ;main.c: 229:                 if(massage_power){
  4924  0281  1F70               	btfss	_massage_power/(0+8),_massage_power& (0+7)
  4925  0282  2A84               	goto	u2101
  4926  0283  2A85               	goto	u2100
  4927  0284                     u2101:	
  4928  0284  2A96               	goto	l619
  4929  0285                     u2100:	
  4930  0285                     l2854:	
  4931                           
  4932                           ;main.c: 230:                     massage_intensity_setting++;
  4933  0285  3001               	movlw	1
  4934  0286  00E3               	movwf	??_Debounce
  4935  0287  0863               	movf	??_Debounce,w
  4936  0288  07D9               	addwf	_massage_intensity_setting,f
  4937  0289                     l2856:	
  4938                           
  4939                           ;main.c: 231:                     if(massage_intensity_setting > 2){
  4940  0289  3003               	movlw	3
  4941  028A  0259               	subwf	_massage_intensity_setting,w
  4942  028B  1C03               	skipc
  4943  028C  2A8E               	goto	u2111
  4944  028D  2A8F               	goto	u2110
  4945  028E                     u2111:	
  4946  028E  297F               	goto	l2728
  4947  028F                     u2110:	
  4948  028F                     l2858:	
  4949                           
  4950                           ;main.c: 232:                         massage_intensity_setting = 0;
  4951  028F  01D9               	clrf	_massage_intensity_setting
  4952  0290  2A96               	goto	l619
  4953  0291                     l661:	
  4954                           
  4955                           ;main.c: 238:         intensity_btn_state = 0;
  4956  0291  1070               	bcf	_intensity_btn_state/(0+8),_intensity_btn_state& (0+7)
  4957  0292                     l2860:	
  4958                           
  4959                           ;main.c: 239:         intensity_debounce = 30;
  4960  0292  301E               	movlw	30
  4961  0293  00E3               	movwf	??_Debounce
  4962  0294  0863               	movf	??_Debounce,w
  4963  0295  00AE               	movwf	_intensity_debounce
  4964  0296                     l619:	
  4965  0296  0008               	return
  4966  0297                     __end_of_Debounce:	
  4967                           
  4968                           	psect	intentry
  4969  0004                     __pintentry:	
  4970 ;; *************** function _INTERRUPT_InterruptManager *****************
  4971 ;; Defined at:
  4972 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;		None
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      void 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0, pclath, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4986 ;;      Params:         0       0       0       0       0       0       0       0
  4987 ;;      Locals:         0       0       0       0       0       0       0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0
  4989 ;;      Totals:         0       0       0       0       0       0       0       0
  4990 ;;Total ram usage:        0 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    2
  4993 ;; This function calls:
  4994 ;;		_TMR0_ISR
  4995 ;; This function is called by:
  4996 ;;		Interrupt level 1
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000  0004                     _INTERRUPT_InterruptManager:	
  5001                           
  5002                           ;incstack = 0
  5003  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5004                           
  5005                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5006  0005  3180               	pagesel	$
  5007  0006                     i1l3042:	
  5008                           
  5009                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5010  0006  1E8B               	btfss	11,5	;volatile
  5011  0007  2809               	goto	u263_21
  5012  0008  280A               	goto	u263_20
  5013  0009                     u263_21:	
  5014  0009  2811               	goto	i1l338
  5015  000A                     u263_20:	
  5016  000A                     i1l3044:	
  5017  000A  1D0B               	btfss	11,2	;volatile
  5018  000B  280D               	goto	u264_21
  5019  000C  280E               	goto	u264_20
  5020  000D                     u264_21:	
  5021  000D  2811               	goto	i1l338
  5022  000E                     u264_20:	
  5023  000E                     i1l3046:	
  5024                           
  5025                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5026  000E  3182  2297  3180   	fcall	_TMR0_ISR
  5027  0011                     i1l338:	
  5028                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5029                           
  5030  0011  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5031  0012  0009               	retfie
  5032  0013                     __end_of_INTERRUPT_InterruptManager:	
  5033                           
  5034                           	psect	text20
  5035  0297                     __ptext20:	
  5036 ;; *************** function _TMR0_ISR *****************
  5037 ;; Defined at:
  5038 ;;		line 112 in file "mcc_generated_files/tmr0.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0, pclath, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5052 ;;      Params:         0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       5       0       0       0       0       0       0
  5055 ;;      Totals:         0       5       0       0       0       0       0       0
  5056 ;;Total ram usage:        5 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    1
  5059 ;; This function calls:
  5060 ;;		Absolute function
  5061 ;;		_TMR0_DefaultInterruptHandler
  5062 ;;		___awdiv
  5063 ;;		___wmul
  5064 ;; This function is called by:
  5065 ;;		_INTERRUPT_InterruptManager
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _TMR0_ISR
  5071  0297                     _TMR0_ISR:	
  5072  0297                     i1l2616:	
  5073                           ;incstack = 0
  5074                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5075                           
  5076                           
  5077                           ;mcc_generated_files/tmr0.c: 117:     INTCONbits.TMR0IF = 0;
  5078  0297  110B               	bcf	11,2	;volatile
  5079  0298                     i1l2618:	
  5080                           
  5081                           ;mcc_generated_files/tmr0.c: 119:     TMR0 = timer0ReloadVal;
  5082  0298  0020               	movlb	0	; select bank0
  5083  0299  0866               	movf	_timer0ReloadVal,w	;volatile
  5084  029A  0095               	movwf	21	;volatile
  5085  029B                     i1l2620:	
  5086                           
  5087                           ;mcc_generated_files/tmr0.c: 121:     if(TMR0_InterruptHandler)
  5088  029B  0864               	movf	_TMR0_InterruptHandler,w
  5089  029C  0465               	iorwf	_TMR0_InterruptHandler+1,w
  5090  029D  1903               	btfsc	3,2
  5091  029E  2AA0               	goto	u159_21
  5092  029F  2AA1               	goto	u159_20
  5093  02A0                     u159_21:	
  5094  02A0  2AA6               	goto	i1l2624
  5095  02A1                     u159_20:	
  5096  02A1                     i1l2622:	
  5097                           
  5098                           ;mcc_generated_files/tmr0.c: 122:     {;mcc_generated_files/tmr0.c: 123:         TMR0_In
      +                          terruptHandler();
  5099  02A1  0865               	movf	_TMR0_InterruptHandler+1,w
  5100  02A2  008A               	movwf	10
  5101  02A3  0864               	movf	_TMR0_InterruptHandler,w
  5102  02A4  000A               	callw
  5103  02A5  3182               	pagesel	$
  5104  02A6                     i1l2624:	
  5105                           
  5106                           ;mcc_generated_files/tmr0.c: 128:     if(lift_open_delay){
  5107  02A6  0020               	movlb	0	; select bank0
  5108  02A7  083E               	movf	_lift_open_delay,w
  5109  02A8  1903               	btfsc	3,2
  5110  02A9  2AAB               	goto	u160_21
  5111  02AA  2AAC               	goto	u160_20
  5112  02AB                     u160_21:	
  5113  02AB  2AAE               	goto	i1l124
  5114  02AC                     u160_20:	
  5115  02AC                     i1l2626:	
  5116                           
  5117                           ;mcc_generated_files/tmr0.c: 129:         lift_open_delay--;
  5118  02AC  3001               	movlw	1
  5119  02AD  02BE               	subwf	_lift_open_delay,f
  5120  02AE                     i1l124:	
  5121                           ;mcc_generated_files/tmr0.c: 130:     }
  5122                           
  5123                           
  5124                           ;mcc_generated_files/tmr0.c: 131:     if(lift_close_delay){
  5125  02AE  083D               	movf	_lift_close_delay,w
  5126  02AF  1903               	btfsc	3,2
  5127  02B0  2AB2               	goto	u161_21
  5128  02B1  2AB3               	goto	u161_20
  5129  02B2                     u161_21:	
  5130  02B2  2AB5               	goto	i1l125
  5131  02B3                     u161_20:	
  5132  02B3                     i1l2628:	
  5133                           
  5134                           ;mcc_generated_files/tmr0.c: 132:         lift_close_delay--;
  5135  02B3  3001               	movlw	1
  5136  02B4  02BD               	subwf	_lift_close_delay,f
  5137  02B5                     i1l125:	
  5138                           ;mcc_generated_files/tmr0.c: 133:     }
  5139                           
  5140                           
  5141                           ;mcc_generated_files/tmr0.c: 134:     if(back_open_delay){
  5142  02B5  083C               	movf	_back_open_delay,w
  5143  02B6  1903               	btfsc	3,2
  5144  02B7  2AB9               	goto	u162_21
  5145  02B8  2ABA               	goto	u162_20
  5146  02B9                     u162_21:	
  5147  02B9  2ABC               	goto	i1l126
  5148  02BA                     u162_20:	
  5149  02BA                     i1l2630:	
  5150                           
  5151                           ;mcc_generated_files/tmr0.c: 135:         back_open_delay--;
  5152  02BA  3001               	movlw	1
  5153  02BB  02BC               	subwf	_back_open_delay,f
  5154  02BC                     i1l126:	
  5155                           ;mcc_generated_files/tmr0.c: 136:     }
  5156                           
  5157                           
  5158                           ;mcc_generated_files/tmr0.c: 137:     if(back_close_delay){
  5159  02BC  083B               	movf	_back_close_delay,w
  5160  02BD  1903               	btfsc	3,2
  5161  02BE  2AC0               	goto	u163_21
  5162  02BF  2AC1               	goto	u163_20
  5163  02C0                     u163_21:	
  5164  02C0  2AC3               	goto	i1l127
  5165  02C1                     u163_20:	
  5166  02C1                     i1l2632:	
  5167                           
  5168                           ;mcc_generated_files/tmr0.c: 138:         back_close_delay--;
  5169  02C1  3001               	movlw	1
  5170  02C2  02BB               	subwf	_back_close_delay,f
  5171  02C3                     i1l127:	
  5172                           ;mcc_generated_files/tmr0.c: 139:     }
  5173                           
  5174                           
  5175                           ;mcc_generated_files/tmr0.c: 140:     if(led_flash_timer){
  5176  02C3  0853               	movf	_led_flash_timer,w
  5177  02C4  0454               	iorwf	_led_flash_timer+1,w
  5178  02C5  1903               	btfsc	3,2
  5179  02C6  2AC8               	goto	u164_21
  5180  02C7  2AC9               	goto	u164_20
  5181  02C8                     u164_21:	
  5182  02C8  2ACD               	goto	i1l2636
  5183  02C9                     u164_20:	
  5184  02C9                     i1l2634:	
  5185                           
  5186                           ;mcc_generated_files/tmr0.c: 141:         led_flash_timer--;
  5187  02C9  3001               	movlw	1
  5188  02CA  02D3               	subwf	_led_flash_timer,f
  5189  02CB  3000               	movlw	0
  5190  02CC  3BD4               	subwfb	_led_flash_timer+1,f
  5191  02CD                     i1l2636:	
  5192                           
  5193                           ;mcc_generated_files/tmr0.c: 145:     if(second_timer){
  5194  02CD  0857               	movf	_second_timer,w
  5195  02CE  0458               	iorwf	_second_timer+1,w
  5196  02CF  1903               	btfsc	3,2
  5197  02D0  2AD2               	goto	u165_21
  5198  02D1  2AD3               	goto	u165_20
  5199  02D2                     u165_21:	
  5200  02D2  2AD8               	goto	i1l2640
  5201  02D3                     u165_20:	
  5202  02D3                     i1l2638:	
  5203                           
  5204                           ;mcc_generated_files/tmr0.c: 146:         second_timer--;
  5205  02D3  3001               	movlw	1
  5206  02D4  02D7               	subwf	_second_timer,f
  5207  02D5  3000               	movlw	0
  5208  02D6  3BD8               	subwfb	_second_timer+1,f
  5209                           
  5210                           ;mcc_generated_files/tmr0.c: 147:     }else{
  5211  02D7  2AFA               	goto	i1l2654
  5212  02D8                     i1l2640:	
  5213                           
  5214                           ;mcc_generated_files/tmr0.c: 148:         second_timer = 1000;
  5215  02D8  30E8               	movlw	232
  5216  02D9  00D7               	movwf	_second_timer
  5217  02DA  3003               	movlw	3
  5218  02DB  00D8               	movwf	_second_timer+1
  5219  02DC                     i1l2642:	
  5220                           
  5221                           ;mcc_generated_files/tmr0.c: 149:         if(heat1_timer){
  5222  02DC  0824               	movf	_heat1_timer,w
  5223  02DD  0425               	iorwf	_heat1_timer+1,w
  5224  02DE  1903               	btfsc	3,2
  5225  02DF  2AE1               	goto	u166_21
  5226  02E0  2AE2               	goto	u166_20
  5227  02E1                     u166_21:	
  5228  02E1  2AE6               	goto	i1l2646
  5229  02E2                     u166_20:	
  5230  02E2                     i1l2644:	
  5231                           
  5232                           ;mcc_generated_files/tmr0.c: 150:             heat1_timer--;
  5233  02E2  3001               	movlw	1
  5234  02E3  02A4               	subwf	_heat1_timer,f
  5235  02E4  3000               	movlw	0
  5236  02E5  3BA5               	subwfb	_heat1_timer+1,f
  5237  02E6                     i1l2646:	
  5238                           
  5239                           ;mcc_generated_files/tmr0.c: 152:         if(heat2_timer){
  5240  02E6  0822               	movf	_heat2_timer,w
  5241  02E7  0423               	iorwf	_heat2_timer+1,w
  5242  02E8  1903               	btfsc	3,2
  5243  02E9  2AEB               	goto	u167_21
  5244  02EA  2AEC               	goto	u167_20
  5245  02EB                     u167_21:	
  5246  02EB  2AF0               	goto	i1l2650
  5247  02EC                     u167_20:	
  5248  02EC                     i1l2648:	
  5249                           
  5250                           ;mcc_generated_files/tmr0.c: 153:             heat2_timer--;
  5251  02EC  3001               	movlw	1
  5252  02ED  02A2               	subwf	_heat2_timer,f
  5253  02EE  3000               	movlw	0
  5254  02EF  3BA3               	subwfb	_heat2_timer+1,f
  5255  02F0                     i1l2650:	
  5256                           
  5257                           ;mcc_generated_files/tmr0.c: 156:         if(massage_timer){
  5258  02F0  0820               	movf	_massage_timer,w
  5259  02F1  0421               	iorwf	_massage_timer+1,w
  5260  02F2  1903               	btfsc	3,2
  5261  02F3  2AF5               	goto	u168_21
  5262  02F4  2AF6               	goto	u168_20
  5263  02F5                     u168_21:	
  5264  02F5  2AFA               	goto	i1l2654
  5265  02F6                     u168_20:	
  5266  02F6                     i1l2652:	
  5267                           
  5268                           ;mcc_generated_files/tmr0.c: 157:             massage_timer--;
  5269  02F6  3001               	movlw	1
  5270  02F7  02A0               	subwf	_massage_timer,f
  5271  02F8  3000               	movlw	0
  5272  02F9  3BA1               	subwfb	_massage_timer+1,f
  5273  02FA                     i1l2654:	
  5274                           
  5275                           ;mcc_generated_files/tmr0.c: 161:     if(lock_btn_state){
  5276  02FA  1DF1               	btfss	_lock_btn_state/(0+8),_lock_btn_state& (0+7)
  5277  02FB  2AFD               	goto	u169_21
  5278  02FC  2AFE               	goto	u169_20
  5279  02FD                     u169_21:	
  5280  02FD  2B1A               	goto	i1l134
  5281  02FE                     u169_20:	
  5282  02FE                     i1l2656:	
  5283                           
  5284                           ;mcc_generated_files/tmr0.c: 162:         if(!lock_flag){
  5285  02FE  18F1               	btfsc	_lock_flag/(0+8),_lock_flag& (0+7)
  5286  02FF  2B01               	goto	u170_21
  5287  0300  2B02               	goto	u170_20
  5288  0301                     u170_21:	
  5289  0301  2B28               	goto	i1l2672
  5290  0302                     u170_20:	
  5291  0302                     i1l2658:	
  5292                           
  5293                           ;mcc_generated_files/tmr0.c: 163:             if(lock_timer){
  5294  0302  0828               	movf	_lock_timer,w
  5295  0303  0429               	iorwf	_lock_timer+1,w
  5296  0304  1903               	btfsc	3,2
  5297  0305  2B07               	goto	u171_21
  5298  0306  2B08               	goto	u171_20
  5299  0307                     u171_21:	
  5300  0307  2B0D               	goto	i1l136
  5301  0308                     u171_20:	
  5302  0308                     i1l2660:	
  5303                           
  5304                           ;mcc_generated_files/tmr0.c: 164:                 lock_timer--;
  5305  0308  3001               	movlw	1
  5306  0309  02A8               	subwf	_lock_timer,f
  5307  030A  3000               	movlw	0
  5308  030B  3BA9               	subwfb	_lock_timer+1,f
  5309                           
  5310                           ;mcc_generated_files/tmr0.c: 165:             }else{
  5311  030C  2B28               	goto	i1l2672
  5312  030D                     i1l136:	
  5313                           
  5314                           ;mcc_generated_files/tmr0.c: 166:                 lock_flag = 1;
  5315  030D  14F1               	bsf	_lock_flag/(0+8),_lock_flag& (0+7)
  5316  030E                     i1l2662:	
  5317                           
  5318                           ;mcc_generated_files/tmr0.c: 167:                 hand_control_locked = !hand_control_lo
      +                          cked;
  5319  030E  3004               	movlw	(0+1) shl (_hand_control_locked& (0+7))
  5320  030F  06F1               	xorwf	_hand_control_locked/(0+8),f
  5321  0310                     i1l2664:	
  5322                           
  5323                           ;mcc_generated_files/tmr0.c: 169:                 if(!hand_control_locked){
  5324  0310  1971               	btfsc	_hand_control_locked/(0+8),_hand_control_locked& (0+7)
  5325  0311  2B13               	goto	u172_21
  5326  0312  2B14               	goto	u172_20
  5327  0313                     u172_21:	
  5328  0313  2B19               	goto	i1l135
  5329  0314                     u172_20:	
  5330  0314                     i1l2666:	
  5331                           
  5332                           ;mcc_generated_files/tmr0.c: 170:                     led_flash_timer = 500;
  5333  0314  30F4               	movlw	244
  5334  0315  00D3               	movwf	_led_flash_timer
  5335  0316  3001               	movlw	1
  5336  0317  00D4               	movwf	_led_flash_timer+1
  5337  0318  2B28               	goto	i1l2672
  5338  0319                     i1l135:	
  5339                           ;mcc_generated_files/tmr0.c: 173:         }
  5340                           
  5341                           
  5342                           ;mcc_generated_files/tmr0.c: 174:     }else{
  5343  0319  2B28               	goto	i1l2672
  5344  031A                     i1l134:	
  5345                           
  5346                           ;mcc_generated_files/tmr0.c: 175:         lock_flag = 0;
  5347  031A  10F1               	bcf	_lock_flag/(0+8),_lock_flag& (0+7)
  5348                           
  5349                           ;mcc_generated_files/tmr0.c: 177:         if(hand_control_locked){
  5350  031B  1D71               	btfss	_hand_control_locked/(0+8),_hand_control_locked& (0+7)
  5351  031C  2B1E               	goto	u173_21
  5352  031D  2B1F               	goto	u173_20
  5353  031E                     u173_21:	
  5354  031E  2B24               	goto	i1l2670
  5355  031F                     u173_20:	
  5356  031F                     i1l2668:	
  5357                           
  5358                           ;mcc_generated_files/tmr0.c: 178:             lock_timer = 8000;
  5359  031F  3040               	movlw	64
  5360  0320  00A8               	movwf	_lock_timer
  5361  0321  301F               	movlw	31
  5362  0322  00A9               	movwf	_lock_timer+1
  5363                           
  5364                           ;mcc_generated_files/tmr0.c: 179:         }else{
  5365  0323  2B28               	goto	i1l2672
  5366  0324                     i1l2670:	
  5367                           
  5368                           ;mcc_generated_files/tmr0.c: 180:             lock_timer = 4500;
  5369  0324  3094               	movlw	148
  5370  0325  00A8               	movwf	_lock_timer
  5371  0326  3011               	movlw	17
  5372  0327  00A9               	movwf	_lock_timer+1
  5373  0328                     i1l2672:	
  5374                           
  5375                           ;mcc_generated_files/tmr0.c: 185:     if(mode_btn_state){
  5376  0328  1EF0               	btfss	_mode_btn_state/(0+8),_mode_btn_state& (0+7)
  5377  0329  2B2B               	goto	u174_21
  5378  032A  2B2C               	goto	u174_20
  5379  032B                     u174_21:	
  5380  032B  2B3A               	goto	i1l2678
  5381  032C                     u174_20:	
  5382  032C                     i1l2674:	
  5383                           
  5384                           ;mcc_generated_files/tmr0.c: 186:         if(massage_hold_timer){
  5385  032C  0855               	movf	_massage_hold_timer,w
  5386  032D  0456               	iorwf	_massage_hold_timer+1,w
  5387  032E  1903               	btfsc	3,2
  5388  032F  2B31               	goto	u175_21
  5389  0330  2B32               	goto	u175_20
  5390  0331                     u175_21:	
  5391  0331  2B37               	goto	i1l143
  5392  0332                     u175_20:	
  5393  0332                     i1l2676:	
  5394                           
  5395                           ;mcc_generated_files/tmr0.c: 187:             massage_hold_timer--;
  5396  0332  3001               	movlw	1
  5397  0333  02D5               	subwf	_massage_hold_timer,f
  5398  0334  3000               	movlw	0
  5399  0335  3BD6               	subwfb	_massage_hold_timer+1,f
  5400                           
  5401                           ;mcc_generated_files/tmr0.c: 188:         }else{
  5402  0336  2B3E               	goto	i1l2680
  5403  0337                     i1l143:	
  5404                           
  5405                           ;mcc_generated_files/tmr0.c: 189:             massage_power = 0;
  5406  0337  1370               	bcf	_massage_power/(0+8),_massage_power& (0+7)
  5407                           
  5408                           ;mcc_generated_files/tmr0.c: 190:             should_change_mode = 0;
  5409  0338  13F0               	bcf	_should_change_mode/(0+8),_should_change_mode& (0+7)
  5410  0339  2B3E               	goto	i1l2680
  5411  033A                     i1l2678:	
  5412                           
  5413                           ;mcc_generated_files/tmr0.c: 193:         massage_hold_timer = 2000;
  5414  033A  30D0               	movlw	208
  5415  033B  00D5               	movwf	_massage_hold_timer
  5416  033C  3007               	movlw	7
  5417  033D  00D6               	movwf	_massage_hold_timer+1
  5418  033E                     i1l2680:	
  5419                           
  5420                           ;mcc_generated_files/tmr0.c: 197:     if(phase_change_timer){
  5421  033E  0826               	movf	_phase_change_timer,w
  5422  033F  0427               	iorwf	_phase_change_timer+1,w
  5423  0340  1903               	btfsc	3,2
  5424  0341  2B43               	goto	u176_21
  5425  0342  2B44               	goto	u176_20
  5426  0343                     u176_21:	
  5427  0343  2B49               	goto	i1l2684
  5428  0344                     u176_20:	
  5429  0344                     i1l2682:	
  5430                           
  5431                           ;mcc_generated_files/tmr0.c: 198:         phase_change_timer--;
  5432  0344  3001               	movlw	1
  5433  0345  02A6               	subwf	_phase_change_timer,f
  5434  0346  3000               	movlw	0
  5435  0347  3BA7               	subwfb	_phase_change_timer+1,f
  5436                           
  5437                           ;mcc_generated_files/tmr0.c: 199:     }else{
  5438  0348  2BB5               	goto	i1l149
  5439  0349                     i1l2684:	
  5440                           
  5441                           ;mcc_generated_files/tmr0.c: 200:         if(massage_phase >= 20){
  5442  0349  3014               	movlw	20
  5443  034A  0236               	subwf	_massage_phase,w
  5444  034B  1C03               	skipc
  5445  034C  2B4E               	goto	u177_21
  5446  034D  2B4F               	goto	u177_20
  5447  034E                     u177_21:	
  5448  034E  2B7A               	goto	i1l2710
  5449  034F                     u177_20:	
  5450  034F                     i1l2686:	
  5451                           
  5452                           ;mcc_generated_files/tmr0.c: 201:             massage_phase = 0;
  5453  034F  01B6               	clrf	_massage_phase
  5454  0350                     i1l2688:	
  5455                           
  5456                           ;mcc_generated_files/tmr0.c: 203:             WavePlaceHolderOn = WaveInOn;
  5457  0350  084E               	movf	_WaveInOn+1,w
  5458  0351  00D2               	movwf	_WavePlaceHolderOn+1
  5459  0352  084D               	movf	_WaveInOn,w
  5460  0353  00D1               	movwf	_WavePlaceHolderOn
  5461  0354                     i1l2690:	
  5462                           
  5463                           ;mcc_generated_files/tmr0.c: 204:             WavePlaceHolderOff = WaveInOff;
  5464  0354  084C               	movf	_WaveInOff+1,w
  5465  0355  00D0               	movwf	_WavePlaceHolderOff+1
  5466  0356  084B               	movf	_WaveInOff,w
  5467  0357  00CF               	movwf	_WavePlaceHolderOff
  5468  0358                     i1l2692:	
  5469                           
  5470                           ;mcc_generated_files/tmr0.c: 205:             WaveInOn = WaveGap2On;
  5471  0358  0842               	movf	_WaveGap2On+1,w
  5472  0359  00CE               	movwf	_WaveInOn+1
  5473  035A  0841               	movf	_WaveGap2On,w
  5474  035B  00CD               	movwf	_WaveInOn
  5475  035C                     i1l2694:	
  5476                           
  5477                           ;mcc_generated_files/tmr0.c: 206:             WaveInOff = WaveGap2Off;
  5478  035C  0840               	movf	_WaveGap2Off+1,w
  5479  035D  00CC               	movwf	_WaveInOff+1
  5480  035E  083F               	movf	_WaveGap2Off,w
  5481  035F  00CB               	movwf	_WaveInOff
  5482  0360                     i1l2696:	
  5483                           
  5484                           ;mcc_generated_files/tmr0.c: 207:             WaveGap2On = WaveGap1On;
  5485  0360  0846               	movf	_WaveGap1On+1,w
  5486  0361  00C2               	movwf	_WaveGap2On+1
  5487  0362  0845               	movf	_WaveGap1On,w
  5488  0363  00C1               	movwf	_WaveGap2On
  5489  0364                     i1l2698:	
  5490                           
  5491                           ;mcc_generated_files/tmr0.c: 208:             WaveGap2Off = WaveGap1Off;
  5492  0364  0844               	movf	_WaveGap1Off+1,w
  5493  0365  00C0               	movwf	_WaveGap2Off+1
  5494  0366  0843               	movf	_WaveGap1Off,w
  5495  0367  00BF               	movwf	_WaveGap2Off
  5496  0368                     i1l2700:	
  5497                           
  5498                           ;mcc_generated_files/tmr0.c: 209:             WaveGap1On = WaveOutOn;
  5499  0368  084A               	movf	_WaveOutOn+1,w
  5500  0369  00C6               	movwf	_WaveGap1On+1
  5501  036A  0849               	movf	_WaveOutOn,w
  5502  036B  00C5               	movwf	_WaveGap1On
  5503  036C                     i1l2702:	
  5504                           
  5505                           ;mcc_generated_files/tmr0.c: 210:             WaveGap1Off = WaveOutOff;
  5506  036C  0848               	movf	_WaveOutOff+1,w
  5507  036D  00C4               	movwf	_WaveGap1Off+1
  5508  036E  0847               	movf	_WaveOutOff,w
  5509  036F  00C3               	movwf	_WaveGap1Off
  5510  0370                     i1l2704:	
  5511                           
  5512                           ;mcc_generated_files/tmr0.c: 211:             WaveOutOn = WavePlaceHolderOn;
  5513  0370  0852               	movf	_WavePlaceHolderOn+1,w
  5514  0371  00CA               	movwf	_WaveOutOn+1
  5515  0372  0851               	movf	_WavePlaceHolderOn,w
  5516  0373  00C9               	movwf	_WaveOutOn
  5517  0374                     i1l2706:	
  5518                           
  5519                           ;mcc_generated_files/tmr0.c: 212:             WaveOutOff = WavePlaceHolderOff;
  5520  0374  0850               	movf	_WavePlaceHolderOff+1,w
  5521  0375  00C8               	movwf	_WaveOutOff+1
  5522  0376  084F               	movf	_WavePlaceHolderOff,w
  5523  0377  00C7               	movwf	_WaveOutOff
  5524  0378                     i1l2708:	
  5525                           
  5526                           ;mcc_generated_files/tmr0.c: 214:             pulse_direction = !pulse_direction;
  5527  0378  3001               	movlw	(0+1) shl (_pulse_direction& (0+7))
  5528  0379  06F1               	xorwf	_pulse_direction/(0+8),f
  5529  037A                     i1l2710:	
  5530                           
  5531                           ;mcc_generated_files/tmr0.c: 216:         massage_phase++;
  5532  037A  3001               	movlw	1
  5533  037B  00DE               	movwf	??_TMR0_ISR
  5534  037C  085E               	movf	??_TMR0_ISR,w
  5535  037D  07B6               	addwf	_massage_phase,f
  5536  037E                     i1l2712:	
  5537                           
  5538                           ;mcc_generated_files/tmr0.c: 217:         phase_change_timer = 100;
  5539  037E  3064               	movlw	100
  5540  037F  00A6               	movwf	_phase_change_timer
  5541  0380  3000               	movlw	0
  5542  0381  00A7               	movwf	_phase_change_timer+1
  5543  0382                     i1l2714:	
  5544                           
  5545                           ;mcc_generated_files/tmr0.c: 219:         pulse_wave_in_intensity = massage_intensity*ma
      +                          ssage_phase/20;
  5546  0382  3014               	movlw	20
  5547  0383  00F8               	movwf	___awdiv@divisor
  5548  0384  3000               	movlw	0
  5549  0385  00F9               	movwf	___awdiv@divisor+1
  5550  0386  083A               	movf	_massage_intensity,w
  5551  0387  00DE               	movwf	??_TMR0_ISR
  5552  0388  01DF               	clrf	??_TMR0_ISR+1
  5553  0389  085E               	movf	??_TMR0_ISR,w
  5554  038A  00F2               	movwf	___wmul@multiplier
  5555  038B  085F               	movf	??_TMR0_ISR+1,w
  5556  038C  00F3               	movwf	___wmul@multiplier+1
  5557  038D  0836               	movf	_massage_phase,w
  5558  038E  00E0               	movwf	??_TMR0_ISR+2
  5559  038F  01E1               	clrf	??_TMR0_ISR+3
  5560  0390  0860               	movf	??_TMR0_ISR+2,w
  5561  0391  00F4               	movwf	___wmul@multiplicand
  5562  0392  0861               	movf	??_TMR0_ISR+3,w
  5563  0393  00F5               	movwf	___wmul@multiplicand+1
  5564  0394  3186  2606  3182   	fcall	___wmul
  5565  0397  0873               	movf	?___wmul+1,w
  5566  0398  00FB               	movwf	___awdiv@dividend+1
  5567  0399  0872               	movf	?___wmul,w
  5568  039A  00FA               	movwf	___awdiv@dividend
  5569  039B  3185  2584  3182   	fcall	___awdiv
  5570  039E  0878               	movf	?___awdiv,w
  5571  039F  0020               	movlb	0	; select bank0
  5572  03A0  00E2               	movwf	??_TMR0_ISR+4
  5573  03A1  0862               	movf	??_TMR0_ISR+4,w
  5574  03A2  00B9               	movwf	_pulse_wave_in_intensity
  5575  03A3                     i1l2716:	
  5576                           
  5577                           ;mcc_generated_files/tmr0.c: 220:         pulse_wave_out_intensity = massage_intensity -
      +                           pulse_wave_in_intensity;
  5578  03A3  0839               	movf	_pulse_wave_in_intensity,w
  5579  03A4  023A               	subwf	_massage_intensity,w
  5580  03A5  00DE               	movwf	??_TMR0_ISR
  5581  03A6  085E               	movf	??_TMR0_ISR,w
  5582  03A7  00B8               	movwf	_pulse_wave_out_intensity
  5583  03A8                     i1l2718:	
  5584                           
  5585                           ;mcc_generated_files/tmr0.c: 221:         pulse_wave_in_intensity += 40/10;
  5586  03A8  3004               	movlw	4
  5587  03A9  00DE               	movwf	??_TMR0_ISR
  5588  03AA  085E               	movf	??_TMR0_ISR,w
  5589  03AB  07B9               	addwf	_pulse_wave_in_intensity,f
  5590  03AC                     i1l2720:	
  5591                           
  5592                           ;mcc_generated_files/tmr0.c: 222:         pulse_wave_out_intensity += 40/10;
  5593  03AC  3004               	movlw	4
  5594  03AD  00DE               	movwf	??_TMR0_ISR
  5595  03AE  085E               	movf	??_TMR0_ISR,w
  5596  03AF  07B8               	addwf	_pulse_wave_out_intensity,f
  5597  03B0                     i1l2722:	
  5598                           
  5599                           ;mcc_generated_files/tmr0.c: 223:         steady_massage_intensity = massage_intensity +
      +                           40/10;
  5600  03B0  083A               	movf	_massage_intensity,w
  5601  03B1  3E04               	addlw	4
  5602  03B2  00DE               	movwf	??_TMR0_ISR
  5603  03B3  085E               	movf	??_TMR0_ISR,w
  5604  03B4  00B7               	movwf	_steady_massage_intensity
  5605  03B5                     i1l149:	
  5606  03B5  0008               	return
  5607  03B6                     __end_of_TMR0_ISR:	
  5608                           
  5609                           	psect	text21
  5610  0606                     __ptext21:	
  5611 ;; *************** function ___wmul *****************
  5612 ;; Defined at:
  5613 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  multiplier      2    0[COMMON] unsigned int 
  5616 ;;  multiplicand    2    2[COMMON] unsigned int 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  product         2    4[COMMON] unsigned int 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  2    0[COMMON] unsigned int 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5628 ;;      Params:         4       0       0       0       0       0       0       0
  5629 ;;      Locals:         2       0       0       0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0
  5631 ;;      Totals:         6       0       0       0       0       0       0       0
  5632 ;;Total ram usage:        6 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_TMR0_ISR
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           
  5642                           ;psect for function ___wmul
  5643  0606                     ___wmul:	
  5644  0606                     i1l2558:	
  5645                           ;incstack = 0
  5646                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5647                           
  5648  0606  01F6               	clrf	___wmul@product
  5649  0607  01F7               	clrf	___wmul@product+1
  5650  0608                     i1l2560:	
  5651  0608  1C72               	btfss	___wmul@multiplier,0
  5652  0609  2E0B               	goto	u145_21
  5653  060A  2E0C               	goto	u145_20
  5654  060B                     u145_21:	
  5655  060B  2E10               	goto	i1l1260
  5656  060C                     u145_20:	
  5657  060C                     i1l2562:	
  5658  060C  0874               	movf	___wmul@multiplicand,w
  5659  060D  07F6               	addwf	___wmul@product,f
  5660  060E  0875               	movf	___wmul@multiplicand+1,w
  5661  060F  3DF7               	addwfc	___wmul@product+1,f
  5662  0610                     i1l1260:	
  5663  0610  3001               	movlw	1
  5664  0611                     u146_25:	
  5665  0611  35F4               	lslf	___wmul@multiplicand,f
  5666  0612  0DF5               	rlf	___wmul@multiplicand+1,f
  5667  0613  0B89               	decfsz	9,f
  5668  0614  2E11               	goto	u146_25
  5669  0615                     i1l2564:	
  5670  0615  3001               	movlw	1
  5671  0616                     u147_25:	
  5672  0616  36F3               	lsrf	___wmul@multiplier+1,f
  5673  0617  0CF2               	rrf	___wmul@multiplier,f
  5674  0618  0B89               	decfsz	9,f
  5675  0619  2E16               	goto	u147_25
  5676  061A                     i1l2566:	
  5677  061A  0872               	movf	___wmul@multiplier,w
  5678  061B  0473               	iorwf	___wmul@multiplier+1,w
  5679  061C  1D03               	btfss	3,2
  5680  061D  2E1F               	goto	u148_21
  5681  061E  2E20               	goto	u148_20
  5682  061F                     u148_21:	
  5683  061F  2E08               	goto	i1l2560
  5684  0620                     u148_20:	
  5685  0620                     i1l2568:	
  5686  0620  0877               	movf	___wmul@product+1,w
  5687  0621  00F3               	movwf	?___wmul+1
  5688  0622  0876               	movf	___wmul@product,w
  5689  0623  00F2               	movwf	?___wmul
  5690  0624                     i1l1262:	
  5691  0624  0008               	return
  5692  0625                     __end_of___wmul:	
  5693                           
  5694                           	psect	text22
  5695  0584                     __ptext22:	
  5696 ;; *************** function ___awdiv *****************
  5697 ;; Defined at:
  5698 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  divisor         2    6[COMMON] int 
  5701 ;;  dividend        2    8[COMMON] int 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  quotient        2    2[BANK0 ] int 
  5704 ;;  sign            1    1[BANK0 ] unsigned char 
  5705 ;;  counter         1    0[BANK0 ] unsigned char 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  2    6[COMMON] int 
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5715 ;;      Params:         4       0       0       0       0       0       0       0
  5716 ;;      Locals:         0       4       0       0       0       0       0       0
  5717 ;;      Temps:          1       0       0       0       0       0       0       0
  5718 ;;      Totals:         5       4       0       0       0       0       0       0
  5719 ;;Total ram usage:        9 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_TMR0_ISR
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           
  5729                           ;psect for function ___awdiv
  5730  0584                     ___awdiv:	
  5731  0584                     i1l2572:	
  5732                           ;incstack = 0
  5733                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5734                           
  5735  0584  0020               	movlb	0	; select bank0
  5736  0585  01DB               	clrf	___awdiv@sign
  5737  0586                     i1l2574:	
  5738  0586  1FF9               	btfss	___awdiv@divisor+1,7
  5739  0587  2D89               	goto	u149_21
  5740  0588  2D8A               	goto	u149_20
  5741  0589                     u149_21:	
  5742  0589  2D91               	goto	i1l2580
  5743  058A                     u149_20:	
  5744  058A                     i1l2576:	
  5745  058A  09F8               	comf	___awdiv@divisor,f
  5746  058B  09F9               	comf	___awdiv@divisor+1,f
  5747  058C  0AF8               	incf	___awdiv@divisor,f
  5748  058D  1903               	skipnz
  5749  058E  0AF9               	incf	___awdiv@divisor+1,f
  5750  058F                     i1l2578:	
  5751  058F  01DB               	clrf	___awdiv@sign
  5752  0590  0ADB               	incf	___awdiv@sign,f
  5753  0591                     i1l2580:	
  5754  0591  1FFB               	btfss	___awdiv@dividend+1,7
  5755  0592  2D94               	goto	u150_21
  5756  0593  2D95               	goto	u150_20
  5757  0594                     u150_21:	
  5758  0594  2D9E               	goto	i1l2586
  5759  0595                     u150_20:	
  5760  0595                     i1l2582:	
  5761  0595  09FA               	comf	___awdiv@dividend,f
  5762  0596  09FB               	comf	___awdiv@dividend+1,f
  5763  0597  0AFA               	incf	___awdiv@dividend,f
  5764  0598  1903               	skipnz
  5765  0599  0AFB               	incf	___awdiv@dividend+1,f
  5766  059A                     i1l2584:	
  5767  059A  3001               	movlw	1
  5768  059B  00FC               	movwf	??___awdiv
  5769  059C  087C               	movf	??___awdiv,w
  5770  059D  06DB               	xorwf	___awdiv@sign,f
  5771  059E                     i1l2586:	
  5772  059E  01DC               	clrf	___awdiv@quotient
  5773  059F  01DD               	clrf	___awdiv@quotient+1
  5774  05A0                     i1l2588:	
  5775  05A0  0878               	movf	___awdiv@divisor,w
  5776  05A1  0479               	iorwf	___awdiv@divisor+1,w
  5777  05A2  1903               	btfsc	3,2
  5778  05A3  2DA5               	goto	u151_21
  5779  05A4  2DA6               	goto	u151_20
  5780  05A5                     u151_21:	
  5781  05A5  2DD5               	goto	i1l2608
  5782  05A6                     u151_20:	
  5783  05A6                     i1l2590:	
  5784  05A6  01DA               	clrf	___awdiv@counter
  5785  05A7  0ADA               	incf	___awdiv@counter,f
  5786  05A8  2DB2               	goto	i1l2596
  5787  05A9                     i1l2592:	
  5788  05A9  3001               	movlw	1
  5789  05AA                     u152_25:	
  5790  05AA  35F8               	lslf	___awdiv@divisor,f
  5791  05AB  0DF9               	rlf	___awdiv@divisor+1,f
  5792  05AC  0B89               	decfsz	9,f
  5793  05AD  2DAA               	goto	u152_25
  5794  05AE                     i1l2594:	
  5795  05AE  3001               	movlw	1
  5796  05AF  00FC               	movwf	??___awdiv
  5797  05B0  087C               	movf	??___awdiv,w
  5798  05B1  07DA               	addwf	___awdiv@counter,f
  5799  05B2                     i1l2596:	
  5800  05B2  1FF9               	btfss	___awdiv@divisor+1,7
  5801  05B3  2DB5               	goto	u153_21
  5802  05B4  2DB6               	goto	u153_20
  5803  05B5                     u153_21:	
  5804  05B5  2DA9               	goto	i1l2592
  5805  05B6                     u153_20:	
  5806  05B6                     i1l2598:	
  5807  05B6  3001               	movlw	1
  5808  05B7                     u154_25:	
  5809  05B7  35DC               	lslf	___awdiv@quotient,f
  5810  05B8  0DDD               	rlf	___awdiv@quotient+1,f
  5811  05B9  0B89               	decfsz	9,f
  5812  05BA  2DB7               	goto	u154_25
  5813  05BB  0879               	movf	___awdiv@divisor+1,w
  5814  05BC  027B               	subwf	___awdiv@dividend+1,w
  5815  05BD  1D03               	skipz
  5816  05BE  2DC1               	goto	u155_25
  5817  05BF  0878               	movf	___awdiv@divisor,w
  5818  05C0  027A               	subwf	___awdiv@dividend,w
  5819  05C1                     u155_25:	
  5820  05C1  1C03               	skipc
  5821  05C2  2DC4               	goto	u155_21
  5822  05C3  2DC5               	goto	u155_20
  5823  05C4                     u155_21:	
  5824  05C4  2DCA               	goto	i1l2604
  5825  05C5                     u155_20:	
  5826  05C5                     i1l2600:	
  5827  05C5  0878               	movf	___awdiv@divisor,w
  5828  05C6  02FA               	subwf	___awdiv@dividend,f
  5829  05C7  0879               	movf	___awdiv@divisor+1,w
  5830  05C8  3BFB               	subwfb	___awdiv@dividend+1,f
  5831  05C9                     i1l2602:	
  5832  05C9  145C               	bsf	___awdiv@quotient,0
  5833  05CA                     i1l2604:	
  5834  05CA  3001               	movlw	1
  5835  05CB                     u156_25:	
  5836  05CB  36F9               	lsrf	___awdiv@divisor+1,f
  5837  05CC  0CF8               	rrf	___awdiv@divisor,f
  5838  05CD  0B89               	decfsz	9,f
  5839  05CE  2DCB               	goto	u156_25
  5840  05CF                     i1l2606:	
  5841  05CF  3001               	movlw	1
  5842  05D0  02DA               	subwf	___awdiv@counter,f
  5843  05D1  1D03               	btfss	3,2
  5844  05D2  2DD4               	goto	u157_21
  5845  05D3  2DD5               	goto	u157_20
  5846  05D4                     u157_21:	
  5847  05D4  2DB6               	goto	i1l2598
  5848  05D5                     u157_20:	
  5849  05D5                     i1l2608:	
  5850  05D5  085B               	movf	___awdiv@sign,w
  5851  05D6  1903               	btfsc	3,2
  5852  05D7  2DD9               	goto	u158_21
  5853  05D8  2DDA               	goto	u158_20
  5854  05D9                     u158_21:	
  5855  05D9  2DDF               	goto	i1l2612
  5856  05DA                     u158_20:	
  5857  05DA                     i1l2610:	
  5858  05DA  09DC               	comf	___awdiv@quotient,f
  5859  05DB  09DD               	comf	___awdiv@quotient+1,f
  5860  05DC  0ADC               	incf	___awdiv@quotient,f
  5861  05DD  1903               	skipnz
  5862  05DE  0ADD               	incf	___awdiv@quotient+1,f
  5863  05DF                     i1l2612:	
  5864  05DF  085D               	movf	___awdiv@quotient+1,w
  5865  05E0  00F9               	movwf	?___awdiv+1
  5866  05E1  085C               	movf	___awdiv@quotient,w
  5867  05E2  00F8               	movwf	?___awdiv
  5868  05E3                     i1l1413:	
  5869  05E3  0008               	return
  5870  05E4                     __end_of___awdiv:	
  5871                           
  5872                           	psect	text23
  5873  06AD                     __ptext23:	
  5874 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5875 ;; Defined at:
  5876 ;;		line 232 in file "mcc_generated_files/tmr0.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		None
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5890 ;;      Params:         0       0       0       0       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0       0
  5893 ;;      Totals:         0       0       0       0       0       0       0       0
  5894 ;;Total ram usage:        0 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_TMR0_Initialize
  5900 ;;		_TMR0_ISR
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           
  5905                           ;psect for function _TMR0_DefaultInterruptHandler
  5906  06AD                     _TMR0_DefaultInterruptHandler:	
  5907  06AD                     i1l155:	
  5908                           ;incstack = 0
  5909                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5910                           
  5911  06AD  0008               	return
  5912  06AE                     __end_of_TMR0_DefaultInterruptHandler:	
  5913  007E                     btemp	set	126	;btemp
  5914  007E                     int$flags	set	126
  5915  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         31
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     10      71
    BANK1            80      2       2
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    WaveGap2Off	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WaveGap2On	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 

    WaveGap1Off	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WaveGap1On	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 

    WaveOutOff	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WaveOutOn	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 

    WaveInOff	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WaveInOn	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 

    WavePlaceHolderOff	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetLow(), Z1SetLow(), Z2SetLow(), Z4SetLow(), 

    WavePlaceHolderOn	PTR FTN()void  size(2) Largest target is 1
		 -> Z3SetHigh(), Z1SetHigh(), Z2SetHigh(), Z4SetHigh(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_Debounce
    _main->_Execute
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->___awdiv

Critical Paths under _main in BANK1

    _main->_LEDs
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _Execute->_Massage

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     121
                           _Debounce
                            _Execute
                               _LEDs
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     121
                                              9 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDs                                                 2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Execute                                              1     1      0       0
                                              9 BANK0      1     1      0
                            _Massage
 ---------------------------------------------------------------------------------
 (2) _Massage                                              2     2      0       0
                                              0 BANK1      2     2      0
                          _Z1SetHigh *
                           _Z1SetLow *
                          _Z2SetHigh *
                           _Z2SetLow *
                          _Z3SetHigh *
                           _Z3SetLow *
                          _Z4SetHigh *
                           _Z4SetLow *
 ---------------------------------------------------------------------------------
 (3) _Z4SetLow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z4SetHigh                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z3SetLow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z3SetHigh                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z2SetLow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z2SetHigh                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z1SetLow                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Z1SetHigh                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Debounce                                             1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     696
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             5     5      0     696
                                              4 BANK0      5     5      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Debounce
   _Execute
     _Massage
       _Z1SetHigh *
       _Z1SetLow *
       _Z2SetHigh *
       _Z2SetLow *
       _Z3SetHigh *
       _Z3SetLow *
       _Z4SetHigh *
       _Z4SetLow *
   _LEDs
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     ___awdiv *
       ___wmul (ARG)
     ___wmul *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      57       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2       2       8        2.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      57      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 04 15:41:14 2020

                              __CFG_CP$ON 0000                               __CFG_CPD$ON 0000  
                            ___awdiv@sign 005B                       ___wmul@multiplicand 0074  
                         _timer0ReloadVal 0066                                       l111 0656  
                                     l160 06A5                                       l152 067C  
                                     l170 06A8                                       l234 0605  
                                     l163 0697                                       l180 06A2  
                                     l173 069A                                       l165 0699  
                                     l190 06AB                                       l158 06A3  
                                     l175 069C                                       l183 0694  
                                     l168 06A6                                       l193 069D  
                                     l185 0696                                       l178 06A0  
                                     l450 0683                                       l195 069F  
                                     l188 06A9                                       l612 065B  
                                     l621 018C                                       l453 0693  
                                     l447 0673                                       l640 01F0  
                                     l712 0097                                       l633 01C5  
                                     l625 019F                                       l721 00CB  
                                     l618 0180                                       l802 016E  
                                     l810 03BD                                       l619 0296  
                                     l723 00BC                                       l707 00A3  
                                     l644 0210                                       l740 00E7  
                                     l900 0401                                       l820 03C3  
                                     l812 03BF                                       l661 0291  
                                     l653 0257                                       l637 01D8  
                                     l629 01B2                                       l805 0171  
                                     l709 0094                                       l726 00BF  
                                     l830 03C8                                       l822 03C4  
                                     l814 03C0                                       l751 00F5  
                                     l656 0255                                       l672 003E  
                                     l920 041F                                       l912 0418  
                                     l904 040A                                       l840 04B4  
                                     l832 03C9                                       l824 03C5  
                                     l816 03C1                                       l649 0235  
                                     l753 00F6                                       l737 00E4  
                                     l809 03CE                                       l770 012E  
                                     l674 0040                                       l930 0425  
                                     l906 040F                                       l850 03D7  
                                     l842 03D2                                       l834 03CA  
                                     l826 03C6                                       l818 03C2  
                                     l755 00F7                                       l691 004D  
                                     l915 041B                                       l907 040D  
                                     l780 0142                                       l764 0124  
                                     l692 0176                                       l676 0041  
                                     l932 0427                                       l924 0421  
                                     l860 03DC                                       l852 03D8  
                                     l844 03D4                                       l836 03CB  
                                     l828 03C7                                       l773 0136  
                                     l749 00F3                                       l693 007B  
                                     l669 0053                                       l941 043F  
                                     l790 0157                                       l766 0126  
                                     l678 0042                                       l926 0423  
                                     l918 041E                                       l870 03E1  
                                     l862 03DD                                       l854 03D9  
                                     l846 03D5                                       l838 03CC  
                                     l783 014B                                       l695 006C  
                                     l943 0441                                       l935 0429  
                                     l776 0139                                       l952 0447  
                                     l864 03DE                                       l856 03DA  
                                     l848 03D6                                       l872 03E3  
                                     l793 015F                                       l945 045D  
                                     l937 042B                                       l881 03F7  
                                     l873 03E5                                       l786 014E  
                                     l698 006F                                       l954 0449  
                                     l866 03DF                                       l858 03DB  
                                     l971 0469                                       l963 0464  
                                     l947 0443                                       l891 03FC  
                                     l883 03F8                                       l796 0162  
                                     l980 0470                                       l868 03E0  
                                     l973 046B                                       l965 0466  
                                     l957 0461                                       l949 0445  
                                     l893 03FD                                       l885 03F9  
                                     l877 03F5                                       l982 0471  
                                     l799 0165                                       l991 048B  
                                     l975 046C                                       l967 0467  
                                     l959 0462                                       l895 03FE  
                                     l887 03FA                                       l879 03F6  
                                     l897 03FF                                       l889 03FB  
                                     l978 046E                                       l995 048D  
                                     l987 0488                                       l899 0400  
                                     l997 048F                                       l989 048A  
                                     l999 0490                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_LVP$OFF 0000  
                                    l1002 0492                                      l1010 04AC  
                                    l1020 04B1                                      l1012 04AD  
                                    l1004 0494                                      l1110 0583  
                                    l1102 057E                                      l1022 04B2  
                                    l1014 04AE                                      l1006 0495  
                                    l1104 0580                                      l1040 0501  
                                    l1024 04B3                                      l1016 04AF  
                                    l1106 0581                                      l1042 0502  
                                    l1018 04B0                                      l1051 0508  
                                    l1108 0582                                      l1060 052F  
                                    l1044 0503                                      l1028 04BD  
                                    l1061 053C                                      l1053 0509  
                                    l1070 054B                                      l1038 04FF  
                                    l1047 0505                                      l1064 0547  
                                    l1073 054D                                      l1049 0507  
                                    l1066 0549                                      l1083 055A  
                                    l1075 054F                                      l1092 0560  
                                    l1068 054A                                      l1085 055C  
                                    l1077 0550                                      l1094 0562  
                                    l1087 055D                                      l1079 0551  
                                    l1096 0563                                      l3200 0645  
                                    l1089 055E                                      l1098 0564  
                                    l3210 04B5                                      l3202 0648  
                                    l3220 04CD                                      l3212 04BC  
                                    l3300 005F                                      l3204 064C  
                                    l3214 04C1                                      l3310 0078  
                                    l3302 0063                                      l3206 064D  
                                    l3240 0518                                      l3224 04D2  
                                    l3232 04E4                                      l3216 04C5  
                                    l3400 0159                                      l3320 008B  
                                    l3312 0079                                      l3304 0067  
                                    l3208 064E                                      l3250 0553  
                                    l3242 051D                                      l3234 04F8  
                                    l3226 04D8                                      l3218 04C9  
                                    l3402 0167                                      l3330 00A1  
                                    l3322 008F                                      l3314 007F  
                                    l3306 0071                                      l3410 03ED  
                                    l3252 0566                                      l3244 0524  
                                    l3236 050B                                      l3228 04DE  
                                    l3404 0173                                      l3340 00B7  
                                    l3332 00A7                                      l3324 0099  
                                    l3316 0083                                      l3308 0076  
                                    l3420 042D                                      l3412 03F1  
                                    l3246 052A                                      l3238 0512  
                                    l3350 00CF                                      l3342 00C1  
                                    l3334 00AB                                      l3326 009E  
                                    l3318 0087                                      l3414 0406  
                                    l3406 03B6                                      l3270 0667  
                                    l2800 0215                                      l3248 0540  
                                    l3256 0569                                      l3360 00E9  
                                    l3352 00D3                                      l3344 00C6  
                                    l3336 00AF                                      l3328 00A0  
                                    l3280 0048                                      l3272 0033  
                                    l3432 0497                                      l3600 0455  
                                    l3424 044B                                      l3416 0414  
                                    l3408 03E9                                      l2480 05F1  
                                    l2810 022D                                      l2802 0219  
                                    l2730 0184                                      l3370 00FD  
                                    l3362 00EE                                      l3354 00D7  
                                    l3346 00C8                                      l3338 00B3  
                                    l3290 004F                                      l3282 0049  
                                    l3274 0037                                      l3602 047D  
                                    l2490 067D                                      l2482 05F3  
                                    l2474 05E4                                      l3450 0657  
                                    l2820 0243                                      l2812 0233  
                                    l2804 021E                                      l2740 0197  
                                    l2732 0189                                      l3380 0113  
                                    l3372 0100                                      l3364 00F0  
                                    l3356 00DB                                      l3348 00C9  
                                    l3292 0051                                      l3284 004A  
                                    l3276 0043                                      l3604 04A1  
                                    l3428 0473                                      l2492 0680  
                                    l2484 05F5                                      l2476 05ED  
                                    l3196 0674                                      l3452 065A  
                                    l2830 0258                                      l2822 024A  
                                    l2806 0225                                      l2814 0236  
                                    l2750 01AA                                      l2742 019C  
                                    l2734 018E                                      l2726 0177  
                                    l3606 04ED                                      l3390 0128  
                                    l3382 0114                                      l3374 0105  
                                    l3366 00F1                                      l3358 00DF  
                                    l3286 004B                                      l3278 0046  
                                    l2494 0681                                      l2486 05F7  
                                    l2478 05EE                                      l3198 0640  
                                    l3454 065E                                      l2840 026B  
                                    l2832 025C                                      l2824 024E  
                                    l2808 0229                                      l2816 023A  
                                    l2760 01BD                                      l2752 01AF  
                                    l2744 01A1                                      l2736 0192  
                                    l2728 017F                                      l3608 0573  
                                    l3392 0130                                      l3384 0118  
                                    l3376 010C                                      l3368 00F8  
                                    l3296 0057                                      l3288 004C  
                                    l2488 0601                                      l2496 0690  
                                    l3456 0661                                      l2850 0280  
                                    l2834 0260                                      l2826 024F  
                                    l2842 026C                                      l2818 023E  
                                    l2770 01D0                                      l2762 01C2  
                                    l2754 01B4                                      l2746 01A5  
                                    l2738 0193                                      l3394 013C  
                                    l3386 011C                                      l3378 010D  
                                    l3298 005B                                      l2860 0292  
                                    l2852 0281                                      l2844 0270  
                                    l2836 0261                                      l2828 0253  
                                    l2780 01E3                                      l2772 01D5  
                                    l2764 01C7                                      l2756 01B8  
                                    l2748 01A6                                      l3396 0144  
                                    l3388 0120                                      l2854 0285  
                                    l2846 0275                                      l2838 0265  
                                    l2790 0200                                      l2782 01E7  
                                    l2774 01DA                                      l2766 01CB  
                                    l2758 01B9                                      l3398 0151  
                                    l2856 0289                                      l2848 027C  
                                    l2792 0204                                      l2784 01EB  
                                    l2776 01DE                                      l2768 01CC  
                                    l2858 028F                                      l2794 0208  
                                    l2786 01F4                                      l2778 01DF  
                                    l2796 020E                                      l2788 01F9  
                                    l2798 0211                                      l3598 0437  
                                    u2000 0233                                      u2001 0232  
                                    u2010 023E                                      u2011 023D  
                                    u2100 0285                                      u2020 0243  
                                    u2101 0284                                      u2021 0242  
                                    u2110 028F                                      u2030 024A  
                                    u2111 028E                                      u2031 0249  
                                    u2040 0253                                      u3000 00DB  
                                    u2041 0252                                      u3001 00DA  
                                    u2050 0260                                      u3010 00DF  
                                    u2051 025F                                      u3011 00DE  
                                    u2060 026B                                      u3100 012E  
                                    u3020 00E4                                      u2061 026A  
                                    u3101 012D                                      u3021 00E3  
                                    _LATA 010C                                      u2070 0270  
                                    u3110 0136                                      u3030 00FD  
                                    _LATB 010D                                      u2071 026F  
                                    u3111 0135                                      u3031 00FC  
                                    _LATC 010E                                      u2080 0275  
                                    u3120 0142                                      u3040 010C  
                                    u3200 03ED                                      _LATD 010F  
                                    u2081 0274                                      u3121 0141  
                                    u3041 010B                                      u3201 03EC  
                                    _LATE 0110                                      u2090 027C  
                                    u3130 014B                                      u3050 0113  
                                    u3210 03F1                                      u2091 027B  
                                    u3131 014A                                      u3051 0112  
                                    u3211 03F0                                      u3140 0157  
                                    u3060 0118                                      u3220 03F5  
                                    u3141 0156                                      u3061 0117  
                                    u3221 03F4                                      u3150 015F  
                                    u3070 011C                                      u3230 0406  
                                    u3151 015E                                      u3071 011B  
                                    u3231 0405                                      u1800 0189  
                                    u3160 016E                                      u3080 0120  
                                    u3240 040A                                      u1801 0188  
                                    u3161 016D                                      u3081 011F  
                                    u3241 0409                                      u1810 0197  
                                    u3090 0124                                      u3250 0414  
                                    u3170 03BD                                      u1811 0196  
                                    u3091 0123                                      u3251 0413  
                                    u3171 03BC                                      u1900 01E7  
                                    u1820 019C                                      u2700 04D1  
                                    u3260 0418                                      u3180 03D2  
                                    u1901 01E6                                      u1821 019B  
                                    u2701 04D0                                      u3261 0417  
                                    u3181 03D1                                      u1910 01EB  
                                    u1830 01AA                                      u2710 04FF  
                                    u3270 0461                                      u3190 03E9  
                                    u1911 01EA                                      u1831 01A9  
                                    u2711 04FE                                      u3271 0460  
                                    u3191 03E8                                      u1920 01EF  
                                    u1840 01AF                                      u2720 0512  
                                    u2800 005B                                      u1921 01EE  
                                    u1841 01AE                                      u2721 0511  
                                    u2801 005A                                      u1930 01F4  
                                    u1850 01BD                                      u2730 0524  
                                    u2650 04BC                                      u2810 005F  
                                    u1931 01F3                                      u1851 01BC  
                                    u2731 0523                                      u2651 04BB  
                                    u2811 005E                                      u1940 01F9  
                                    u1860 01C2                                      u1780 017E  
                                    u2740 0540                                      u2660 04C1  
                                    u2900 0094                                      u2820 0063  
                                    u1941 01F8                                      u1861 01C1  
                                    u1781 017D                                      u2741 053F  
                                    u2661 04C0                                      u2901 0093  
                                    u2821 0062                                      u1950 0200  
                                    u1870 01D0                                      u1790 0184  
                                    u2750 0547                                      u2670 04C5  
                                    u2910 00A7                                      u2830 0067  
                                    u1951 01FF                                      u1871 01CF  
                                    u1791 0183                                      u2751 0546  
                                    u2671 04C4                                      u2911 00A6  
                                    u2831 0066                                      u1960 020E  
                                    u1880 01D5                                      u2760 055A  
                                    u2680 04C9                                      u2920 00AB  
                                    u2840 006C                                      u1961 020D  
                                    u1881 01D4                                      u2761 0559  
                                    u2681 04C8                                      u2921 00AA  
                                    u2841 006B                                      u1970 0219  
                                    u1890 01E3                                      u2690 04CD  
                                    u2930 00AF                                      u2850 007F  
                                    u2770 0037                                      u1971 0218  
                                    u1891 01E2                                      u2691 04CC  
                                    u2931 00AE                                      u2851 007E  
                                    u2771 0036                                      u1980 021E  
                                    u2940 00B3                                      u2860 0083  
                                    u2780 003E                                      u1981 021D  
                                    u2941 00B2                                      u2861 0082  
                                    u2781 003D                                      u1990 0225  
                                    u2950 00B7                                      u2870 0087  
                                    u2790 0057                                      u1991 0224  
                                    u2951 00B6                                      u2871 0086  
                                    u2791 0056                                      _LEDs 03B6  
                                    u2960 00BC                                      u2880 008B  
                                    u2961 00BB                                      u2881 008A  
                                    u2970 00CF                                      u2890 008F  
                                    u2971 00CE                                      u2891 008E  
                                    u2980 00D3                                      u2981 00D2  
                                    u2990 00D7                                      u2991 00D6  
                                    _TMR0 0015                                      _WPUB 020D  
                                    _WPUE 0210                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 0657  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    fsr1l 0006                                      btemp 007E  
                     _lift_close_debounce 0033                             __CFG_BOREN$ON 0000  
                                    start 0013                             __CFG_IESO$OFF 0000  
                         __end_of_Execute 0177                           __end_of_Massage 0584  
                 __end_of_TMR0_Initialize 0657                                     ?_LEDs 0072  
          ??_TMR0_DefaultInterruptHandler 0072            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 0684                                     ?_main 0072  
                         __end_of___awdiv 05E4                             __CFG_WDTE$OFF 0000  
                         ___awdiv@divisor 0078                                     i1l124 02AE  
                                   i1l125 02B5                                     i1l134 031A  
                                   i1l126 02BC                                     i1l143 0337  
                                   i1l135 0319                                     i1l127 02C3  
                                   i1l136 030D                                     i1l155 06AD  
                                   i1l149 03B5                                     i1l338 0011  
                         ___awdiv@counter 005A                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                                   _TRISD 008F                                     _TRISE 0090  
       __size_of_TMR0_SetInterruptHandler 0009                 ?_TMR0_SetInterruptHandler 00A0  
                        __end_of_TMR0_ISR 03B6                        __size_of_Z1SetHigh 0003  
                        __end_of_Z1SetLow 069A                          __end_of_Z2SetLow 069D  
                      __size_of_Z2SetHigh 0003                          __end_of_Z3SetLow 0697  
                          _WDT_Initialize 0690                          __end_of_Z4SetLow 06A0  
                      __size_of_Z3SetHigh 0003                        __size_of_Z4SetHigh 0003  
                          __pbitbssCOMMON 0380                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                        __end_of_Debounce 0297                              __end_of_LEDs 04B5  
                          __CFG_MCLRE$OFF 0000                           __initialization 0015  
                            __end_of_main 0667                                    ??_LEDs 00A0  
                          _heat1_debounce 0030               ?_INTERRUPT_InterruptManager 0072  
                                  ??_main 0064                            _heat2_debounce 002F  
                          __CFG_PLLEN$OFF 0000                    __end_of_WDT_Initialize 0694  
               _massage_intensity_setting 0059                          ___awdiv@dividend 007A  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELD 018F  
                                  _ANSELE 0190                                    _BORCON 0116  
                                  i1l1260 0610                                    i1l1413 05E3  
                                  i1l1262 0624                                    i1l3042 0006  
                                  i1l3044 000A                                    i1l3046 000E  
                                  i1l2600 05C5                                    i1l2610 05DA  
                                  i1l2602 05C9                                    i1l2612 05DF  
                                  i1l2604 05CA                                    i1l2700 0368  
                                  i1l2620 029B                                    i1l2606 05CF  
                                  i1l2702 036C                                    i1l2710 037A  
                                  i1l2630 02BA                                    i1l2622 02A1  
                                  i1l2608 05D5                                    i1l2560 0608  
                                  i1l2720 03AC                                    i1l2712 037E  
                                  i1l2704 0370                                    i1l2640 02D8  
                                  i1l2632 02C1                                    i1l2624 02A6  
                                  i1l2616 0297                                    i1l2562 060C  
                                  i1l2722 03B0                                    i1l2714 0382  
                                  i1l2706 0374                                    i1l2650 02F0  
                                  i1l2642 02DC                                    i1l2634 02C9  
                                  i1l2626 02AC                                    i1l2618 0298  
                                  i1l2580 0591                                    i1l2572 0584  
                                  i1l2564 0615                                    i1l2716 03A3  
                                  i1l2708 0378                                    i1l2660 0308  
                                  i1l2652 02F6                                    i1l2644 02E2  
                                  i1l2636 02CD                                    i1l2628 02B3  
                                  i1l2590 05A6                                    i1l2582 0595  
                                  i1l2574 0586                                    i1l2566 061A  
                                  i1l2558 0606                                    i1l2718 03A8  
                                  i1l2670 0324                                    i1l2662 030E  
                                  i1l2646 02E6                                    i1l2654 02FA  
                                  i1l2638 02D3                                    i1l2592 05A9  
                                  i1l2584 059A                                    i1l2576 058A  
                                  i1l2568 0620                                    i1l2680 033E  
                                  i1l2664 0310                                    i1l2672 0328  
                                  i1l2656 02FE                                    i1l2648 02EC  
                                  i1l2594 05AE                                    i1l2586 059E  
                                  i1l2578 058F                                    i1l2690 0354  
                                  i1l2682 0344                                    i1l2674 032C  
                                  i1l2666 0314                                    i1l2658 0302  
                                  i1l2596 05B2                                    i1l2588 05A0  
                                  i1l2692 0358                                    i1l2684 0349  
                                  i1l2676 0332                                    i1l2668 031F  
                                  i1l2598 05B6                                    i1l2694 035C  
                                  i1l2686 034F                                    i1l2678 033A  
                                  i1l2696 0360                                    i1l2688 0350  
                                  i1l2698 0364                                    u150_20 0595  
                                  u150_21 0594                                    u151_20 05A6  
                                  u151_21 05A5                                    u160_20 02AC  
                                  u160_21 02AB                                    u152_25 05AA  
                                  u153_20 05B6                                    u145_20 060C  
                                  u161_20 02B3                                    u153_21 05B5  
                                  u145_21 060B                                    u161_21 02B2  
                                  u170_20 0302                                    u162_20 02BA  
                                  u170_21 0301                                    u162_21 02B9  
                                  u154_25 05B7                                    u146_25 0611  
                                  u155_20 05C5                                    u171_20 0308  
                                  u163_20 02C1                                    u155_21 05C4  
                                  u171_21 0307                                    u163_21 02C0  
                                  u155_25 05C1                                    u147_25 0616  
                                  u148_20 0620                                    u172_20 0314  
                                  u164_20 02C9                                    u148_21 061F  
                                  u172_21 0313                                    u164_21 02C8  
                                  u156_25 05CB                                    u157_20 05D5  
                                  u149_20 058A                                    u173_20 031F  
                                  u165_20 02D3                                    u157_21 05D4  
                                  u149_21 0589                                    u173_21 031E  
                                  u165_21 02D2                                    u158_20 05DA  
                                  u174_20 032C                                    u166_20 02E2  
                                  u158_21 05D9                                    u174_21 032B  
                                  u166_21 02E1                                    u175_20 0332  
                                  u167_20 02EC                                    u159_20 02A1  
                                  u263_20 000A                                    u175_21 0331  
                                  u167_21 02EB                                    u159_21 02A0  
                                  u263_21 0009                                    u176_20 0344  
                                  u168_20 02F6                                    u264_20 000E  
                                  u176_21 0343                                    u168_21 02F5  
                                  u264_21 000D                                    u177_20 034F  
                                  u169_20 02FE                                    u177_21 034E  
                                  u169_21 02FD                                    _OSCCON 0099  
                                  _WDTCON 0097                                 ??_Execute 0063  
                               ??_Massage 00A0                            __CFG_PWRTE$OFF 0000  
                              _WaveGap1On 0045                                _WaveGap2On 0041  
                       __end_of_Z1SetHigh 06A6                                    ___wmul 0606  
                       __end_of_Z2SetHigh 06A9                                 ??___awdiv 007C  
                          __CFG_STVREN$ON 0000                         __end_of_Z3SetHigh 06A3  
                       __end_of_Z4SetHigh 06AC                                _WaveOutOff 0047  
                        ?_TMR0_Initialize 0072                          ___awdiv@quotient 005C  
                         _lift_open_delay 003E                           _lift_open_state 0384  
                            __pdataCOMMON 007D                           ?_WDT_Initialize 0072  
                     _intensity_btn_state 0380                           _pulse_direction 0388  
TMR0_SetInterruptHandler@InterruptHandler 00A0                         _SYSTEM_Initialize 0667  
                 __end_of__initialization 002F                        ?_SYSTEM_Initialize 0072  
                        _lift_close_delay 003D                       _back_close_debounce 0031  
                        _lift_close_state 0383                        _WavePlaceHolderOff 004F  
                          __pcstackCOMMON 0072                              __pidataBANK0 0625  
                     ??_SYSTEM_Initialize 0064                                 ?_TMR0_ISR 0072  
                               ?_Z1SetLow 0072                                 ?_Z2SetLow 0072  
                               ?_Z3SetLow 0072                                 ?_Z4SetLow 0072  
                           _massage_phase 0036                             _massage_timer 0020  
                          _OPTION_REGbits 0095                             _massage_power 0386  
                               ?_Debounce 0072                 __end_of_SYSTEM_Initialize 0674  
                      _massage_hold_timer 0055                                __pbssBANK0 0020  
                         __CFG_VCAPEN$OFF 0000                   _pulse_wave_in_intensity 0039  
                              __pmaintext 0657          __end_of_TMR0_SetInterruptHandler 067D  
                                 ?___wmul 0072                                ??_TMR0_ISR 005E  
                              ??_Z1SetLow 0063                                __pintentry 0004  
                              ??_Z2SetLow 0063                                ??_Z3SetLow 0063  
                              ??_Z4SetLow 0063                             _lock_debounce 002C  
                      _back_open_debounce 0032                                ??_Debounce 0063  
                      _should_change_mode 0387                                   _OSCTUNE 0098  
                           _mode_debounce 002D                                   _Execute 0033  
                                 _Massage 04B5                               _WaveGap1Off 0043  
                             _WaveGap2Off 003F                                   ___awdiv 0584  
                         __size_of___wmul 001F                                   __ptext1 0667  
                                 __ptext2 0690                                   __ptext3 0640  
                                 __ptext4 0674                                   __ptext5 05E4  
                                 __ptext6 067D                                   __ptext7 03B6  
                                 __ptext8 0033                                   __ptext9 04B5  
                              _lock_timer 0028                     _OSCILLATOR_Initialize 067D  
                ??_PIN_MANAGER_Initialize 0063                __size_of_SYSTEM_Initialize 000D  
                                 clrloop0 068B                      end_of_initialization 002F  
                                 init_ram 0684                                   initloop 0685  
                               _Z1SetHigh 06A3                          ??_WDT_Initialize 0063  
                _TMR0_SetInterruptHandler 0674                                 _PORTAbits 000C  
                               _PORTBbits 000D                                 _Z2SetHigh 06A6  
                               _PORTCbits 000E                                 _PORTDbits 000F  
                               _PORTEbits 0010                                 _Z3SetHigh 06A0  
                               _Z4SetHigh 06A9                          __CFG_FOSC$INTOSC 0000  
                          __end_of___wmul 0625                             __pidataCOMMON 06AC  
                       __size_of_TMR0_ISR 011F                                ?_Z1SetHigh 0072  
                       __size_of_Z1SetLow 0003                                ?_Z2SetHigh 0072  
                       __size_of_Z2SetLow 0003                    ?_OSCILLATOR_Initialize 0072  
                       __size_of_Z3SetLow 0003                                ?_Z3SetHigh 0072  
                       __size_of_Z4SetLow 0003                  _pulse_wave_out_intensity 0038  
                              ?_Z4SetHigh 0072                       start_initialization 0015  
                __size_of_TMR0_Initialize 0017           __size_of_PIN_MANAGER_Initialize 0022  
                       __size_of_Debounce 0120                                 _WaveInOff 004B  
                      _intensity_debounce 002E                                 _WaveOutOn 0049  
                                ??___wmul 0076                               __pdataBANK0 003F  
                               ___latbits 0002                             __pcstackBANK0 005A  
                           __pcstackBANK1 00A0                         _WavePlaceHolderOn 0051  
                            _massage_mode 0035                               _heat1_timer 0024  
                             _heat1_state 002B                               _heat2_timer 0022  
                             _heat2_state 002A                        _phase_change_timer 0026  
                   _TMR0_InterruptHandler 0064                          _back_close_delay 003B  
                               __pnvBANK0 0064                                  ?_Execute 0072  
                                ?_Massage 0072                          _back_close_state 0381  
                  _PIN_MANAGER_Initialize 05E4                         _massage_intensity 003A  
                                ?___awdiv 0078                               ??_Z1SetHigh 0063  
            ??_INTERRUPT_InterruptManager 007D                               ??_Z2SetHigh 0063  
                             ??_Z3SetHigh 0063                               ??_Z4SetHigh 0063  
                               _lock_flag 0389                         ??_TMR0_Initialize 0063  
                          ___wmul@product 0076                                  _LATAbits 010C  
                                _LATBbits 010D                                  _LATCbits 010E  
                                _LATDbits 010F                                  _LATEbits 0110  
                               clear_ram0 068A                            _lock_btn_state 038B  
     __size_of_INTERRUPT_InterruptManager 000F                ??_TMR0_SetInterruptHandler 0063  
                                _TMR0_ISR 0297                                  _Z1SetLow 0697  
                                _Z2SetLow 069A                                  _Z3SetLow 0694  
                                _Z4SetLow 069D                                 _pwm_count 007D  
                      _lift_open_debounce 0034                         ___wmul@multiplier 0072  
                                _Debounce 0177                       _hand_control_locked 038A  
                            _second_timer 0057                            _mode_btn_state 0385  
                        __size_of_Execute 0144                          __size_of_Massage 00CF  
                                _WaveInOn 004D                   ??_OSCILLATOR_Initialize 0063  
                        __size_of___awdiv 0060                                  __ptext10 0694  
                                __ptext11 0697                                  __ptext20 0297  
                                __ptext12 069A                                  __ptext21 0606  
                                __ptext13 069D                                  __ptext22 0584  
                                __ptext14 06A0                                  __ptext23 06AD  
                                __ptext15 06A3                                  __ptext16 06A6  
                                __ptext17 06A9                                  __ptext18 0177  
                           __size_of_LEDs 00FF                             __size_of_main 0010  
    __end_of_TMR0_DefaultInterruptHandler 06AE     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 06AD                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0013                _INTERRUPT_InterruptManager 0004  
                         _led_flash_timer 0053                                _INTCONbits 000B  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
                         _back_open_delay 003C                   ?_PIN_MANAGER_Initialize 0072  
                       __CFG_CLKOUTEN$OFF 0000                           _back_open_state 0382  
           ?_TMR0_DefaultInterruptHandler 0072                                _OPTION_REG 0095  
                         _TMR0_Initialize 0640            __end_of_PIN_MANAGER_Initialize 0606  
                _steady_massage_intensity 0037  
